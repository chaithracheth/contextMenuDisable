{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar CSSDataProvider =\n/** @class */\nfunction () {\n  /**\n   * Currently, unversioned data uses the V1 implementation\n   * In the future when the provider handles multiple versions of HTML custom data,\n   * use the latest implementation for unversioned data\n   */\n  function CSSDataProvider(data) {\n    this._properties = [];\n    this._atDirectives = [];\n    this._pseudoClasses = [];\n    this._pseudoElements = [];\n    this.addData(data);\n  }\n\n  CSSDataProvider.prototype.provideProperties = function () {\n    return this._properties;\n  };\n\n  CSSDataProvider.prototype.provideAtDirectives = function () {\n    return this._atDirectives;\n  };\n\n  CSSDataProvider.prototype.providePseudoClasses = function () {\n    return this._pseudoClasses;\n  };\n\n  CSSDataProvider.prototype.providePseudoElements = function () {\n    return this._pseudoElements;\n  };\n\n  CSSDataProvider.prototype.addData = function (data) {\n    if (data.properties) {\n      this._properties = this._properties.concat(data.properties);\n    }\n\n    if (data.atDirectives) {\n      this._atDirectives = this._atDirectives.concat(data.atDirectives);\n    }\n\n    if (data.pseudoClasses) {\n      this._pseudoClasses = this._pseudoClasses.concat(data.pseudoClasses);\n    }\n\n    if (data.pseudoElements) {\n      this._pseudoElements = this._pseudoElements.concat(data.pseudoElements);\n    }\n  };\n\n  return CSSDataProvider;\n}();\n\nexport { CSSDataProvider };","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js"],"names":["CSSDataProvider","data","_properties","_atDirectives","_pseudoClasses","_pseudoElements","addData","prototype","provideProperties","provideAtDirectives","providePseudoClasses","providePseudoElements","properties","concat","atDirectives","pseudoClasses","pseudoElements"],"mappings":"AAAA;;;;AAIA;;AACA,IAAIA,eAAe;AAAG;AAAe,YAAY;AAC7C;;;;;AAKA,WAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,OAAL,CAAaL,IAAb;AACH;;AACDD,EAAAA,eAAe,CAACO,SAAhB,CAA0BC,iBAA1B,GAA8C,YAAY;AACtD,WAAO,KAAKN,WAAZ;AACH,GAFD;;AAGAF,EAAAA,eAAe,CAACO,SAAhB,CAA0BE,mBAA1B,GAAgD,YAAY;AACxD,WAAO,KAAKN,aAAZ;AACH,GAFD;;AAGAH,EAAAA,eAAe,CAACO,SAAhB,CAA0BG,oBAA1B,GAAiD,YAAY;AACzD,WAAO,KAAKN,cAAZ;AACH,GAFD;;AAGAJ,EAAAA,eAAe,CAACO,SAAhB,CAA0BI,qBAA1B,GAAkD,YAAY;AAC1D,WAAO,KAAKN,eAAZ;AACH,GAFD;;AAGAL,EAAAA,eAAe,CAACO,SAAhB,CAA0BD,OAA1B,GAAoC,UAAUL,IAAV,EAAgB;AAChD,QAAIA,IAAI,CAACW,UAAT,EAAqB;AACjB,WAAKV,WAAL,GAAmB,KAAKA,WAAL,CAAiBW,MAAjB,CAAwBZ,IAAI,CAACW,UAA7B,CAAnB;AACH;;AACD,QAAIX,IAAI,CAACa,YAAT,EAAuB;AACnB,WAAKX,aAAL,GAAqB,KAAKA,aAAL,CAAmBU,MAAnB,CAA0BZ,IAAI,CAACa,YAA/B,CAArB;AACH;;AACD,QAAIb,IAAI,CAACc,aAAT,EAAwB;AACpB,WAAKX,cAAL,GAAsB,KAAKA,cAAL,CAAoBS,MAApB,CAA2BZ,IAAI,CAACc,aAAhC,CAAtB;AACH;;AACD,QAAId,IAAI,CAACe,cAAT,EAAyB;AACrB,WAAKX,eAAL,GAAuB,KAAKA,eAAL,CAAqBQ,MAArB,CAA4BZ,IAAI,CAACe,cAAjC,CAAvB;AACH;AACJ,GAbD;;AAcA,SAAOhB,eAAP;AACH,CAxCoC,EAArC;;AAyCA,SAASA,eAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar CSSDataProvider = /** @class */ (function () {\n    /**\n     * Currently, unversioned data uses the V1 implementation\n     * In the future when the provider handles multiple versions of HTML custom data,\n     * use the latest implementation for unversioned data\n     */\n    function CSSDataProvider(data) {\n        this._properties = [];\n        this._atDirectives = [];\n        this._pseudoClasses = [];\n        this._pseudoElements = [];\n        this.addData(data);\n    }\n    CSSDataProvider.prototype.provideProperties = function () {\n        return this._properties;\n    };\n    CSSDataProvider.prototype.provideAtDirectives = function () {\n        return this._atDirectives;\n    };\n    CSSDataProvider.prototype.providePseudoClasses = function () {\n        return this._pseudoClasses;\n    };\n    CSSDataProvider.prototype.providePseudoElements = function () {\n        return this._pseudoElements;\n    };\n    CSSDataProvider.prototype.addData = function (data) {\n        if (data.properties) {\n            this._properties = this._properties.concat(data.properties);\n        }\n        if (data.atDirectives) {\n            this._atDirectives = this._atDirectives.concat(data.atDirectives);\n        }\n        if (data.pseudoClasses) {\n            this._pseudoClasses = this._pseudoClasses.concat(data.pseudoClasses);\n        }\n        if (data.pseudoElements) {\n            this._pseudoElements = this._pseudoElements.concat(data.pseudoElements);\n        }\n    };\n    return CSSDataProvider;\n}());\nexport { CSSDataProvider };\n"]},"metadata":{},"sourceType":"module"}