{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirst(array, p) {\n  var low = 0,\n      high = array.length;\n\n  if (high === 0) {\n    return 0; // no children\n  }\n\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n\n    if (p(array[mid])) {\n      high = mid;\n    } else {\n      low = mid + 1;\n    }\n  }\n\n  return low;\n}\nexport function binarySearch(array, key, comparator) {\n  var low = 0,\n      high = array.length - 1;\n\n  while (low <= high) {\n    var mid = (low + high) / 2 | 0;\n    var comp = comparator(array[mid], key);\n\n    if (comp < 0) {\n      low = mid + 1;\n    } else if (comp > 0) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -(low + 1);\n}","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/arrays.js"],"names":["findFirst","array","p","low","high","length","mid","Math","floor","binarySearch","key","comparator","comp"],"mappings":"AAAA;;;;;AAIA;;;;;AAKA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,CAA1B,EAA6B;AAChC,MAAIC,GAAG,GAAG,CAAV;AAAA,MAAaC,IAAI,GAAGH,KAAK,CAACI,MAA1B;;AACA,MAAID,IAAI,KAAK,CAAb,EAAgB;AACZ,WAAO,CAAP,CADY,CACF;AACb;;AACD,SAAOD,GAAG,GAAGC,IAAb,EAAmB;AACf,QAAIE,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,GAAG,GAAGC,IAAP,IAAe,CAA1B,CAAV;;AACA,QAAIF,CAAC,CAACD,KAAK,CAACK,GAAD,CAAN,CAAL,EAAmB;AACfF,MAAAA,IAAI,GAAGE,GAAP;AACH,KAFD,MAGK;AACDH,MAAAA,GAAG,GAAGG,GAAG,GAAG,CAAZ;AACH;AACJ;;AACD,SAAOH,GAAP;AACH;AACD,OAAO,SAASM,YAAT,CAAsBR,KAAtB,EAA6BS,GAA7B,EAAkCC,UAAlC,EAA8C;AACjD,MAAIR,GAAG,GAAG,CAAV;AAAA,MAAaC,IAAI,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAnC;;AACA,SAAOF,GAAG,IAAIC,IAAd,EAAoB;AAChB,QAAIE,GAAG,GAAI,CAACH,GAAG,GAAGC,IAAP,IAAe,CAAhB,GAAqB,CAA/B;AACA,QAAIQ,IAAI,GAAGD,UAAU,CAACV,KAAK,CAACK,GAAD,CAAN,EAAaI,GAAb,CAArB;;AACA,QAAIE,IAAI,GAAG,CAAX,EAAc;AACVT,MAAAA,GAAG,GAAGG,GAAG,GAAG,CAAZ;AACH,KAFD,MAGK,IAAIM,IAAI,GAAG,CAAX,EAAc;AACfR,MAAAA,IAAI,GAAGE,GAAG,GAAG,CAAb;AACH,KAFI,MAGA;AACD,aAAOA,GAAP;AACH;AACJ;;AACD,SAAO,EAAEH,GAAG,GAAG,CAAR,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirst(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\nexport function binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n"]},"metadata":{},"sourceType":"module"}