{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { TokenType, Scanner } from './cssScanner.js';\nimport * as nodes from './cssNodes.js';\nimport { ParseError } from './cssErrors.js';\nimport * as languageFacts from '../languageFacts/facts.js';\nimport { isDefined } from '../utils/objects.js'; /// <summary>\n/// A parser for the css core specification. See for reference:\n/// https://www.w3.org/TR/CSS21/grammar.html\n/// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n/// </summary>\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser(scnr) {\n    if (scnr === void 0) {\n      scnr = new Scanner();\n    }\n\n    this.keyframeRegex = /^@(\\-(webkit|ms|moz|o)\\-)?keyframes$/i;\n    this.scanner = scnr;\n    this.token = {\n      type: TokenType.EOF,\n      offset: -1,\n      len: 0,\n      text: ''\n    };\n    this.prevToken = undefined;\n  }\n\n  Parser.prototype.peekIdent = function (text) {\n    return TokenType.Ident === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n  };\n\n  Parser.prototype.peekKeyword = function (text) {\n    return TokenType.AtKeyword === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n  };\n\n  Parser.prototype.peekDelim = function (text) {\n    return TokenType.Delim === this.token.type && text === this.token.text;\n  };\n\n  Parser.prototype.peek = function (type) {\n    return type === this.token.type;\n  };\n\n  Parser.prototype.peekRegExp = function (type, regEx) {\n    if (type !== this.token.type) {\n      return false;\n    }\n\n    return regEx.test(this.token.text);\n  };\n\n  Parser.prototype.hasWhitespace = function () {\n    return !!this.prevToken && this.prevToken.offset + this.prevToken.len !== this.token.offset;\n  };\n\n  Parser.prototype.consumeToken = function () {\n    this.prevToken = this.token;\n    this.token = this.scanner.scan();\n  };\n\n  Parser.prototype.mark = function () {\n    return {\n      prev: this.prevToken,\n      curr: this.token,\n      pos: this.scanner.pos()\n    };\n  };\n\n  Parser.prototype.restoreAtMark = function (mark) {\n    this.prevToken = mark.prev;\n    this.token = mark.curr;\n    this.scanner.goBackTo(mark.pos);\n  };\n\n  Parser.prototype.try = function (func) {\n    var pos = this.mark();\n    var node = func();\n\n    if (!node) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    return node;\n  };\n\n  Parser.prototype.acceptOneKeyword = function (keywords) {\n    if (TokenType.AtKeyword === this.token.type) {\n      for (var _i = 0, keywords_1 = keywords; _i < keywords_1.length; _i++) {\n        var keyword = keywords_1[_i];\n\n        if (keyword.length === this.token.text.length && keyword === this.token.text.toLowerCase()) {\n          this.consumeToken();\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  Parser.prototype.accept = function (type) {\n    if (type === this.token.type) {\n      this.consumeToken();\n      return true;\n    }\n\n    return false;\n  };\n\n  Parser.prototype.acceptIdent = function (text) {\n    if (this.peekIdent(text)) {\n      this.consumeToken();\n      return true;\n    }\n\n    return false;\n  };\n\n  Parser.prototype.acceptKeyword = function (text) {\n    if (this.peekKeyword(text)) {\n      this.consumeToken();\n      return true;\n    }\n\n    return false;\n  };\n\n  Parser.prototype.acceptDelim = function (text) {\n    if (this.peekDelim(text)) {\n      this.consumeToken();\n      return true;\n    }\n\n    return false;\n  };\n\n  Parser.prototype.acceptRegexp = function (regEx) {\n    if (regEx.test(this.token.text)) {\n      this.consumeToken();\n      return true;\n    }\n\n    return false;\n  };\n\n  Parser.prototype._parseRegexp = function (regEx) {\n    var node = this.createNode(nodes.NodeType.Identifier);\n\n    do {} while (this.acceptRegexp(regEx));\n\n    return this.finish(node);\n  };\n\n  Parser.prototype.acceptUnquotedString = function () {\n    var pos = this.scanner.pos();\n    this.scanner.goBackTo(this.token.offset);\n    var unquoted = this.scanner.scanUnquotedString();\n\n    if (unquoted) {\n      this.token = unquoted;\n      this.consumeToken();\n      return true;\n    }\n\n    this.scanner.goBackTo(pos);\n    return false;\n  };\n\n  Parser.prototype.resync = function (resyncTokens, resyncStopTokens) {\n    while (true) {\n      if (resyncTokens && resyncTokens.indexOf(this.token.type) !== -1) {\n        this.consumeToken();\n        return true;\n      } else if (resyncStopTokens && resyncStopTokens.indexOf(this.token.type) !== -1) {\n        return true;\n      } else {\n        if (this.token.type === TokenType.EOF) {\n          return false;\n        }\n\n        this.token = this.scanner.scan();\n      }\n    }\n  };\n\n  Parser.prototype.createNode = function (nodeType) {\n    return new nodes.Node(this.token.offset, this.token.len, nodeType);\n  };\n\n  Parser.prototype.create = function (ctor) {\n    return new ctor(this.token.offset, this.token.len);\n  };\n\n  Parser.prototype.finish = function (node, error, resyncTokens, resyncStopTokens) {\n    // parseNumeric misuses error for boolean flagging (however the real error mustn't be a false)\n    // + nodelist offsets mustn't be modified, because there is a offset hack in rulesets for smartselection\n    if (!(node instanceof nodes.Nodelist)) {\n      if (error) {\n        this.markError(node, error, resyncTokens, resyncStopTokens);\n      } // set the node end position\n\n\n      if (this.prevToken) {\n        // length with more elements belonging together\n        var prevEnd = this.prevToken.offset + this.prevToken.len;\n        node.length = prevEnd > node.offset ? prevEnd - node.offset : 0; // offset is taken from current token, end from previous: Use 0 for empty nodes\n      }\n    }\n\n    return node;\n  };\n\n  Parser.prototype.markError = function (node, error, resyncTokens, resyncStopTokens) {\n    if (this.token !== this.lastErrorToken) {\n      // do not report twice on the same token\n      node.addIssue(new nodes.Marker(node, error, nodes.Level.Error, undefined, this.token.offset, this.token.len));\n      this.lastErrorToken = this.token;\n    }\n\n    if (resyncTokens || resyncStopTokens) {\n      this.resync(resyncTokens, resyncStopTokens);\n    }\n  };\n\n  Parser.prototype.parseStylesheet = function (textDocument) {\n    var versionId = textDocument.version;\n    var text = textDocument.getText();\n\n    var textProvider = function (offset, length) {\n      if (textDocument.version !== versionId) {\n        throw new Error('Underlying model has changed, AST is no longer valid');\n      }\n\n      return text.substr(offset, length);\n    };\n\n    return this.internalParse(text, this._parseStylesheet, textProvider);\n  };\n\n  Parser.prototype.internalParse = function (input, parseFunc, textProvider) {\n    this.scanner.setSource(input);\n    this.token = this.scanner.scan();\n    var node = parseFunc.bind(this)();\n\n    if (node) {\n      if (textProvider) {\n        node.textProvider = textProvider;\n      } else {\n        node.textProvider = function (offset, length) {\n          return input.substr(offset, length);\n        };\n      }\n    }\n\n    return node;\n  };\n\n  Parser.prototype._parseStylesheet = function () {\n    var node = this.create(nodes.Stylesheet);\n\n    while (node.addChild(this._parseStylesheetStart())) {// Parse statements only valid at the beginning of stylesheets.\n    }\n\n    var inRecovery = false;\n\n    do {\n      var hasMatch = false;\n\n      do {\n        hasMatch = false;\n\n        var statement = this._parseStylesheetStatement();\n\n        if (statement) {\n          node.addChild(statement);\n          hasMatch = true;\n          inRecovery = false;\n\n          if (!this.peek(TokenType.EOF) && this._needsSemicolonAfter(statement) && !this.accept(TokenType.SemiColon)) {\n            this.markError(node, ParseError.SemiColonExpected);\n          }\n        }\n\n        while (this.accept(TokenType.SemiColon) || this.accept(TokenType.CDO) || this.accept(TokenType.CDC)) {\n          // accept empty statements\n          hasMatch = true;\n          inRecovery = false;\n        }\n      } while (hasMatch);\n\n      if (this.peek(TokenType.EOF)) {\n        break;\n      }\n\n      if (!inRecovery) {\n        if (this.peek(TokenType.AtKeyword)) {\n          this.markError(node, ParseError.UnknownAtRule);\n        } else {\n          this.markError(node, ParseError.RuleOrSelectorExpected);\n        }\n\n        inRecovery = true;\n      }\n\n      this.consumeToken();\n    } while (!this.peek(TokenType.EOF));\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseStylesheetStart = function () {\n    return this._parseCharset();\n  };\n\n  Parser.prototype._parseStylesheetStatement = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseStylesheetAtStatement(isNested);\n    }\n\n    return this._parseRuleset(isNested);\n  };\n\n  Parser.prototype._parseStylesheetAtStatement = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n\n    return this._parseImport() || this._parseMedia(isNested) || this._parsePage() || this._parseFontFace() || this._parseKeyframe() || this._parseSupports(isNested) || this._parseViewPort() || this._parseNamespace() || this._parseDocument() || this._parseUnknownAtRule();\n  };\n\n  Parser.prototype._tryParseRuleset = function (isNested) {\n    var mark = this.mark();\n\n    if (this._parseSelector(isNested)) {\n      while (this.accept(TokenType.Comma) && this._parseSelector(isNested)) {// loop\n      }\n\n      if (this.accept(TokenType.CurlyL)) {\n        this.restoreAtMark(mark);\n        return this._parseRuleset(isNested);\n      }\n    }\n\n    this.restoreAtMark(mark);\n    return null;\n  };\n\n  Parser.prototype._parseRuleset = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n\n    var node = this.create(nodes.RuleSet);\n    var selectors = node.getSelectors();\n\n    if (!selectors.addChild(this._parseSelector(isNested))) {\n      return null;\n    }\n\n    while (this.accept(TokenType.Comma)) {\n      if (!selectors.addChild(this._parseSelector(isNested))) {\n        return this.finish(node, ParseError.SelectorExpected);\n      }\n    }\n\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n\n  Parser.prototype._parseRuleSetDeclaration = function () {\n    // https://www.w3.org/TR/css-syntax-3/#consume-a-list-of-declarations0\n    return this._parseAtApply() || this._tryParseCustomPropertyDeclaration() || this._parseDeclaration() || this._parseUnknownAtRule();\n  };\n  /**\n   * Parses declarations like:\n   *   @apply --my-theme;\n   *\n   * Follows https://tabatkins.github.io/specs/css-apply-rule/#using\n   */\n\n\n  Parser.prototype._parseAtApply = function () {\n    if (!this.peekKeyword('@apply')) {\n      return null;\n    }\n\n    var node = this.create(nodes.AtApplyRule);\n    this.consumeToken();\n\n    if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Variable]))) {\n      return this.finish(node, ParseError.IdentifierExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._needsSemicolonAfter = function (node) {\n    switch (node.type) {\n      case nodes.NodeType.Keyframe:\n      case nodes.NodeType.ViewPort:\n      case nodes.NodeType.Media:\n      case nodes.NodeType.Ruleset:\n      case nodes.NodeType.Namespace:\n      case nodes.NodeType.If:\n      case nodes.NodeType.For:\n      case nodes.NodeType.Each:\n      case nodes.NodeType.While:\n      case nodes.NodeType.MixinDeclaration:\n      case nodes.NodeType.FunctionDeclaration:\n        return false;\n\n      case nodes.NodeType.ExtendsReference:\n      case nodes.NodeType.MixinContent:\n      case nodes.NodeType.ReturnStatement:\n      case nodes.NodeType.MediaQuery:\n      case nodes.NodeType.Debug:\n      case nodes.NodeType.Import:\n      case nodes.NodeType.AtApplyRule:\n      case nodes.NodeType.CustomPropertyDeclaration:\n        return true;\n\n      case nodes.NodeType.VariableDeclaration:\n        return node.needsSemicolon;\n\n      case nodes.NodeType.MixinReference:\n        return !node.getContent();\n\n      case nodes.NodeType.Declaration:\n        return !node.getNestedProperties();\n    }\n\n    return false;\n  };\n\n  Parser.prototype._parseDeclarations = function (parseDeclaration) {\n    var node = this.create(nodes.Declarations);\n\n    if (!this.accept(TokenType.CurlyL)) {\n      return null;\n    }\n\n    var decl = parseDeclaration();\n\n    while (node.addChild(decl)) {\n      if (this.peek(TokenType.CurlyR)) {\n        break;\n      }\n\n      if (this._needsSemicolonAfter(decl) && !this.accept(TokenType.SemiColon)) {\n        return this.finish(node, ParseError.SemiColonExpected, [TokenType.SemiColon, TokenType.CurlyR]);\n      } // We accepted semicolon token. Link it to declaration.\n\n\n      if (decl && this.prevToken && this.prevToken.type === TokenType.SemiColon) {\n        decl.semicolonPosition = this.prevToken.offset;\n      }\n\n      while (this.accept(TokenType.SemiColon)) {// accept empty statements\n      }\n\n      decl = parseDeclaration();\n    }\n\n    if (!this.accept(TokenType.CurlyR)) {\n      return this.finish(node, ParseError.RightCurlyExpected, [TokenType.CurlyR, TokenType.SemiColon]);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseBody = function (node, parseDeclaration) {\n    if (!node.setDeclarations(this._parseDeclarations(parseDeclaration))) {\n      return this.finish(node, ParseError.LeftCurlyExpected, [TokenType.CurlyR, TokenType.SemiColon]);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseSelector = function (isNested) {\n    var node = this.create(nodes.Selector);\n    var hasContent = false;\n\n    if (isNested) {\n      // nested selectors can start with a combinator\n      hasContent = node.addChild(this._parseCombinator());\n    }\n\n    while (node.addChild(this._parseSimpleSelector())) {\n      hasContent = true;\n      node.addChild(this._parseCombinator()); // optional\n    }\n\n    return hasContent ? this.finish(node) : null;\n  };\n\n  Parser.prototype._parseDeclaration = function (resyncStopTokens) {\n    var node = this.create(nodes.Declaration);\n\n    if (!node.setProperty(this._parseProperty())) {\n      return null;\n    }\n\n    if (!this.accept(TokenType.Colon)) {\n      var stopTokens = resyncStopTokens ? __spreadArrays(resyncStopTokens, [TokenType.SemiColon]) : [TokenType.SemiColon];\n      return this.finish(node, ParseError.ColonExpected, [TokenType.Colon], stopTokens);\n    }\n\n    if (this.prevToken) {\n      node.colonPosition = this.prevToken.offset;\n    }\n\n    if (!node.setValue(this._parseExpr())) {\n      return this.finish(node, ParseError.PropertyValueExpected);\n    }\n\n    node.addChild(this._parsePrio());\n\n    if (this.peek(TokenType.SemiColon)) {\n      node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._tryParseCustomPropertyDeclaration = function () {\n    if (!this.peekRegExp(TokenType.Ident, /^--/)) {\n      return null;\n    }\n\n    var node = this.create(nodes.CustomPropertyDeclaration);\n\n    if (!node.setProperty(this._parseProperty())) {\n      return null;\n    }\n\n    if (!this.accept(TokenType.Colon)) {\n      return this.finish(node, ParseError.ColonExpected, [TokenType.Colon]);\n    }\n\n    if (this.prevToken) {\n      node.colonPosition = this.prevToken.offset;\n    }\n\n    var mark = this.mark();\n\n    if (this.peek(TokenType.CurlyL)) {\n      // try to parse it as nested declaration\n      var propertySet = this.create(nodes.CustomPropertySet);\n\n      var declarations = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));\n\n      if (propertySet.setDeclarations(declarations) && !declarations.isErroneous(true)) {\n        propertySet.addChild(this._parsePrio());\n\n        if (this.peek(TokenType.SemiColon)) {\n          this.finish(propertySet);\n          node.setPropertySet(propertySet);\n          node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n\n          return this.finish(node);\n        }\n      }\n\n      this.restoreAtMark(mark);\n    } // try tp parse as expression\n\n\n    var expression = this._parseExpr();\n\n    if (expression && !expression.isErroneous(true)) {\n      this._parsePrio();\n\n      if (this.peek(TokenType.SemiColon)) {\n        node.setValue(expression);\n        node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n\n        return this.finish(node);\n      }\n    }\n\n    this.restoreAtMark(mark);\n    node.addChild(this._parseCustomPropertyValue());\n    node.addChild(this._parsePrio());\n\n    if (isDefined(node.colonPosition) && this.token.offset === node.colonPosition + 1) {\n      return this.finish(node, ParseError.PropertyValueExpected);\n    }\n\n    return this.finish(node);\n  };\n  /**\n   * Parse custom property values.\n   *\n   * Based on https://www.w3.org/TR/css-variables/#syntax\n   *\n   * This code is somewhat unusual, as the allowed syntax is incredibly broad,\n   * parsing almost any sequence of tokens, save for a small set of exceptions.\n   * Unbalanced delimitors, invalid tokens, and declaration\n   * terminators like semicolons and !important directives (when not inside\n   * of delimitors).\n   */\n\n\n  Parser.prototype._parseCustomPropertyValue = function () {\n    var node = this.create(nodes.Node);\n\n    var isTopLevel = function () {\n      return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0;\n    };\n\n    var curlyDepth = 0;\n    var parensDepth = 0;\n    var bracketsDepth = 0;\n\n    done: while (true) {\n      switch (this.token.type) {\n        case TokenType.SemiColon:\n          // A semicolon only ends things if we're not inside a delimitor.\n          if (isTopLevel()) {\n            break done;\n          }\n\n          break;\n\n        case TokenType.Exclamation:\n          // An exclamation ends the value if we're not inside delims.\n          if (isTopLevel()) {\n            break done;\n          }\n\n          break;\n\n        case TokenType.CurlyL:\n          curlyDepth++;\n          break;\n\n        case TokenType.CurlyR:\n          curlyDepth--;\n\n          if (curlyDepth < 0) {\n            // The property value has been terminated without a semicolon, and\n            // this is the last declaration in the ruleset.\n            if (parensDepth === 0 && bracketsDepth === 0) {\n              break done;\n            }\n\n            return this.finish(node, ParseError.LeftCurlyExpected);\n          }\n\n          break;\n\n        case TokenType.ParenthesisL:\n          parensDepth++;\n          break;\n\n        case TokenType.ParenthesisR:\n          parensDepth--;\n\n          if (parensDepth < 0) {\n            return this.finish(node, ParseError.LeftParenthesisExpected);\n          }\n\n          break;\n\n        case TokenType.BracketL:\n          bracketsDepth++;\n          break;\n\n        case TokenType.BracketR:\n          bracketsDepth--;\n\n          if (bracketsDepth < 0) {\n            return this.finish(node, ParseError.LeftSquareBracketExpected);\n          }\n\n          break;\n\n        case TokenType.BadString:\n          // fall through\n          break done;\n\n        case TokenType.EOF:\n          // We shouldn't have reached the end of input, something is\n          // unterminated.\n          var error = ParseError.RightCurlyExpected;\n\n          if (bracketsDepth > 0) {\n            error = ParseError.RightSquareBracketExpected;\n          } else if (parensDepth > 0) {\n            error = ParseError.RightParenthesisExpected;\n          }\n\n          return this.finish(node, error);\n      }\n\n      this.consumeToken();\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._tryToParseDeclaration = function () {\n    var mark = this.mark();\n\n    if (this._parseProperty() && this.accept(TokenType.Colon)) {\n      // looks like a declaration, go ahead\n      this.restoreAtMark(mark);\n      return this._parseDeclaration();\n    }\n\n    this.restoreAtMark(mark);\n    return null;\n  };\n\n  Parser.prototype._parseProperty = function () {\n    var node = this.create(nodes.Property);\n    var mark = this.mark();\n\n    if (this.acceptDelim('*') || this.acceptDelim('_')) {\n      // support for  IE 5.x, 6 and 7 star hack: see http://en.wikipedia.org/wiki/CSS_filter#Star_hack\n      if (this.hasWhitespace()) {\n        this.restoreAtMark(mark);\n        return null;\n      }\n    }\n\n    if (node.setIdentifier(this._parsePropertyIdentifier())) {\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  Parser.prototype._parsePropertyIdentifier = function () {\n    return this._parseIdent();\n  };\n\n  Parser.prototype._parseCharset = function () {\n    if (!this.peek(TokenType.Charset)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Node);\n    this.consumeToken(); // charset\n\n    if (!this.accept(TokenType.String)) {\n      return this.finish(node, ParseError.IdentifierExpected);\n    }\n\n    if (!this.accept(TokenType.SemiColon)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseImport = function () {\n    if (!this.peekKeyword('@import')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Import);\n    this.consumeToken(); // @import\n\n    if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.URIOrStringExpected);\n    }\n\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      node.setMedialist(this._parseMediaQueryList());\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseNamespace = function () {\n    // http://www.w3.org/TR/css3-namespace/\n    // namespace  : NAMESPACE_SYM S* [IDENT S*]? [STRING|URI] S* ';' S*\n    if (!this.peekKeyword('@namespace')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Namespace);\n    this.consumeToken(); // @namespace\n\n    if (!node.addChild(this._parseURILiteral())) {\n      // url literal also starts with ident\n      node.addChild(this._parseIdent()); // optional prefix\n\n      if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n        return this.finish(node, ParseError.URIExpected, [TokenType.SemiColon]);\n      }\n    }\n\n    if (!this.accept(TokenType.SemiColon)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseFontFace = function () {\n    if (!this.peekKeyword('@font-face')) {\n      return null;\n    }\n\n    var node = this.create(nodes.FontFace);\n    this.consumeToken(); // @font-face\n\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n\n  Parser.prototype._parseViewPort = function () {\n    if (!this.peekKeyword('@-ms-viewport') && !this.peekKeyword('@-o-viewport') && !this.peekKeyword('@viewport')) {\n      return null;\n    }\n\n    var node = this.create(nodes.ViewPort);\n    this.consumeToken(); // @-ms-viewport\n\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n\n  Parser.prototype._parseKeyframe = function () {\n    if (!this.peekRegExp(TokenType.AtKeyword, this.keyframeRegex)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Keyframe);\n    var atNode = this.create(nodes.Node);\n    this.consumeToken(); // atkeyword\n\n    node.setKeyword(this.finish(atNode));\n\n    if (atNode.matches('@-ms-keyframes')) {\n      // -ms-keyframes never existed\n      this.markError(atNode, ParseError.UnknownKeyword);\n    }\n\n    if (!node.setIdentifier(this._parseKeyframeIdent())) {\n      return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n    }\n\n    return this._parseBody(node, this._parseKeyframeSelector.bind(this));\n  };\n\n  Parser.prototype._parseKeyframeIdent = function () {\n    return this._parseIdent([nodes.ReferenceType.Keyframe]);\n  };\n\n  Parser.prototype._parseKeyframeSelector = function () {\n    var node = this.create(nodes.KeyframeSelector);\n\n    if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n      return null;\n    }\n\n    while (this.accept(TokenType.Comma)) {\n      if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n        return this.finish(node, ParseError.PercentageExpected);\n      }\n    }\n\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n\n  Parser.prototype._tryParseKeyframeSelector = function () {\n    var node = this.create(nodes.KeyframeSelector);\n    var pos = this.mark();\n\n    if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n      return null;\n    }\n\n    while (this.accept(TokenType.Comma)) {\n      if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n        this.restoreAtMark(pos);\n        return null;\n      }\n    }\n\n    if (!this.peek(TokenType.CurlyL)) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n\n  Parser.prototype._parseSupports = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    } // SUPPORTS_SYM S* supports_condition '{' S* ruleset* '}' S*\n\n\n    if (!this.peekKeyword('@supports')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Supports);\n    this.consumeToken(); // @supports\n\n    node.addChild(this._parseSupportsCondition());\n    return this._parseBody(node, this._parseSupportsDeclaration.bind(this, isNested));\n  };\n\n  Parser.prototype._parseSupportsDeclaration = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n\n    if (isNested) {\n      // if nested, the body can contain rulesets, but also declarations\n      return this._tryParseRuleset(true) || this._tryToParseDeclaration() || this._parseStylesheetStatement(true);\n    }\n\n    return this._parseStylesheetStatement(false);\n  };\n\n  Parser.prototype._parseSupportsCondition = function () {\n    // supports_condition : supports_negation | supports_conjunction | supports_disjunction | supports_condition_in_parens ;\n    // supports_condition_in_parens: ( '(' S* supports_condition S* ')' ) | supports_declaration_condition | general_enclosed ;\n    // supports_negation: NOT S+ supports_condition_in_parens ;\n    // supports_conjunction: supports_condition_in_parens ( S+ AND S+ supports_condition_in_parens )+;\n    // supports_disjunction: supports_condition_in_parens ( S+ OR S+ supports_condition_in_parens )+;\n    // supports_declaration_condition: '(' S* declaration ')';\n    // general_enclosed: ( FUNCTION | '(' ) ( any | unused )* ')' ;\n    var node = this.create(nodes.SupportsCondition);\n\n    if (this.acceptIdent('not')) {\n      node.addChild(this._parseSupportsConditionInParens());\n    } else {\n      node.addChild(this._parseSupportsConditionInParens());\n\n      if (this.peekRegExp(TokenType.Ident, /^(and|or)$/i)) {\n        var text = this.token.text.toLowerCase();\n\n        while (this.acceptIdent(text)) {\n          node.addChild(this._parseSupportsConditionInParens());\n        }\n      }\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseSupportsConditionInParens = function () {\n    var node = this.create(nodes.SupportsCondition);\n\n    if (this.accept(TokenType.ParenthesisL)) {\n      if (this.prevToken) {\n        node.lParent = this.prevToken.offset;\n      }\n\n      if (!node.addChild(this._tryToParseDeclaration())) {\n        if (!this._parseSupportsCondition()) {\n          return this.finish(node, ParseError.ConditionExpected);\n        }\n      }\n\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.ParenthesisR], []);\n      }\n\n      if (this.prevToken) {\n        node.rParent = this.prevToken.offset;\n      }\n\n      return this.finish(node);\n    } else if (this.peek(TokenType.Ident)) {\n      var pos = this.mark();\n      this.consumeToken();\n\n      if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n        var openParentCount = 1;\n\n        while (this.token.type !== TokenType.EOF && openParentCount !== 0) {\n          if (this.token.type === TokenType.ParenthesisL) {\n            openParentCount++;\n          } else if (this.token.type === TokenType.ParenthesisR) {\n            openParentCount--;\n          }\n\n          this.consumeToken();\n        }\n\n        return this.finish(node);\n      } else {\n        this.restoreAtMark(pos);\n      }\n    }\n\n    return this.finish(node, ParseError.LeftParenthesisExpected, [], [TokenType.ParenthesisL]);\n  };\n\n  Parser.prototype._parseMediaDeclaration = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n\n    if (isNested) {\n      // if nested, the body can contain rulesets, but also declarations\n      return this._tryParseRuleset(true) || this._tryToParseDeclaration() || this._parseStylesheetStatement(true);\n    }\n\n    return this._parseStylesheetStatement(false);\n  };\n\n  Parser.prototype._parseMedia = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    } // MEDIA_SYM S* media_query_list '{' S* ruleset* '}' S*\n    // media_query_list : S* [media_query [ ',' S* media_query ]* ]?\n\n\n    if (!this.peekKeyword('@media')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Media);\n    this.consumeToken(); // @media\n\n    if (!node.addChild(this._parseMediaQueryList())) {\n      return this.finish(node, ParseError.MediaQueryExpected);\n    }\n\n    return this._parseBody(node, this._parseMediaDeclaration.bind(this, isNested));\n  };\n\n  Parser.prototype._parseMediaQueryList = function () {\n    var node = this.create(nodes.Medialist);\n\n    if (!node.addChild(this._parseMediaQuery([TokenType.CurlyL]))) {\n      return this.finish(node, ParseError.MediaQueryExpected);\n    }\n\n    while (this.accept(TokenType.Comma)) {\n      if (!node.addChild(this._parseMediaQuery([TokenType.CurlyL]))) {\n        return this.finish(node, ParseError.MediaQueryExpected);\n      }\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseMediaQuery = function (resyncStopToken) {\n    // http://www.w3.org/TR/css3-mediaqueries/\n    // media_query : [ONLY | NOT]? S* IDENT S* [ AND S* expression ]* | expression [ AND S* expression ]*\n    // expression : '(' S* IDENT S* [ ':' S* expr ]? ')' S*\n    var node = this.create(nodes.MediaQuery);\n    var parseExpression = true;\n    var hasContent = false;\n\n    if (!this.peek(TokenType.ParenthesisL)) {\n      if (this.acceptIdent('only') || this.acceptIdent('not')) {// optional\n      }\n\n      if (!node.addChild(this._parseIdent())) {\n        return null;\n      }\n\n      hasContent = true;\n      parseExpression = this.acceptIdent('and');\n    }\n\n    while (parseExpression) {\n      // Allow short-circuting for other language constructs.\n      if (node.addChild(this._parseMediaContentStart())) {\n        parseExpression = this.acceptIdent('and');\n        continue;\n      }\n\n      if (!this.accept(TokenType.ParenthesisL)) {\n        if (hasContent) {\n          return this.finish(node, ParseError.LeftParenthesisExpected, [], resyncStopToken);\n        }\n\n        return null;\n      }\n\n      if (!node.addChild(this._parseMediaFeatureName())) {\n        return this.finish(node, ParseError.IdentifierExpected, [], resyncStopToken);\n      }\n\n      if (this.accept(TokenType.Colon)) {\n        if (!node.addChild(this._parseExpr())) {\n          return this.finish(node, ParseError.TermExpected, [], resyncStopToken);\n        }\n      }\n\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected, [], resyncStopToken);\n      }\n\n      parseExpression = this.acceptIdent('and');\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseMediaContentStart = function () {\n    return null;\n  };\n\n  Parser.prototype._parseMediaFeatureName = function () {\n    return this._parseIdent();\n  };\n\n  Parser.prototype._parseMedium = function () {\n    var node = this.create(nodes.Node);\n\n    if (node.addChild(this._parseIdent())) {\n      return this.finish(node);\n    } else {\n      return null;\n    }\n  };\n\n  Parser.prototype._parsePageDeclaration = function () {\n    return this._parsePageMarginBox() || this._parseRuleSetDeclaration();\n  };\n\n  Parser.prototype._parsePage = function () {\n    // http://www.w3.org/TR/css3-page/\n    // page_rule : PAGE_SYM S* page_selector_list '{' S* page_body '}' S*\n    // page_body :  /* Can be empty */ declaration? [ ';' S* page_body ]? | page_margin_box page_body\n    if (!this.peekKeyword('@page')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Page);\n    this.consumeToken();\n\n    if (node.addChild(this._parsePageSelector())) {\n      while (this.accept(TokenType.Comma)) {\n        if (!node.addChild(this._parsePageSelector())) {\n          return this.finish(node, ParseError.IdentifierExpected);\n        }\n      }\n    }\n\n    return this._parseBody(node, this._parsePageDeclaration.bind(this));\n  };\n\n  Parser.prototype._parsePageMarginBox = function () {\n    // page_margin_box :  margin_sym S* '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n    if (!this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n\n    var node = this.create(nodes.PageBoxMarginBox);\n\n    if (!this.acceptOneKeyword(languageFacts.pageBoxDirectives)) {\n      this.markError(node, ParseError.UnknownAtRule, [], [TokenType.CurlyL]);\n    }\n\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n\n  Parser.prototype._parsePageSelector = function () {\n    // page_selector : pseudo_page+ | IDENT pseudo_page*\n    // pseudo_page :  ':' [ \"left\" | \"right\" | \"first\" | \"blank\" ];\n    if (!this.peek(TokenType.Ident) && !this.peek(TokenType.Colon)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Node);\n    node.addChild(this._parseIdent()); // optional ident\n\n    if (this.accept(TokenType.Colon)) {\n      if (!node.addChild(this._parseIdent())) {\n        // optional ident\n        return this.finish(node, ParseError.IdentifierExpected);\n      }\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseDocument = function () {\n    // -moz-document is experimental but has been pushed to css4\n    if (!this.peekKeyword('@-moz-document')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Document);\n    this.consumeToken(); // @-moz-document\n\n    this.resync([], [TokenType.CurlyL]); // ignore all the rules\n\n    return this._parseBody(node, this._parseStylesheetStatement.bind(this));\n  }; // https://www.w3.org/TR/css-syntax-3/#consume-an-at-rule\n\n\n  Parser.prototype._parseUnknownAtRule = function () {\n    if (!this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n\n    var node = this.create(nodes.UnknownAtRule);\n    node.addChild(this._parseUnknownAtRuleName());\n\n    var isTopLevel = function () {\n      return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0;\n    };\n\n    var curlyLCount = 0;\n    var curlyDepth = 0;\n    var parensDepth = 0;\n    var bracketsDepth = 0;\n\n    done: while (true) {\n      switch (this.token.type) {\n        case TokenType.SemiColon:\n          if (isTopLevel()) {\n            break done;\n          }\n\n          break;\n\n        case TokenType.EOF:\n          if (curlyDepth > 0) {\n            return this.finish(node, ParseError.RightCurlyExpected);\n          } else if (bracketsDepth > 0) {\n            return this.finish(node, ParseError.RightSquareBracketExpected);\n          } else if (parensDepth > 0) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n          } else {\n            return this.finish(node);\n          }\n\n        case TokenType.CurlyL:\n          curlyLCount++;\n          curlyDepth++;\n          break;\n\n        case TokenType.CurlyR:\n          curlyDepth--; // End of at-rule, consume CurlyR and return node\n\n          if (curlyLCount > 0 && curlyDepth === 0) {\n            this.consumeToken();\n\n            if (bracketsDepth > 0) {\n              return this.finish(node, ParseError.RightSquareBracketExpected);\n            } else if (parensDepth > 0) {\n              return this.finish(node, ParseError.RightParenthesisExpected);\n            }\n\n            break done;\n          }\n\n          if (curlyDepth < 0) {\n            // The property value has been terminated without a semicolon, and\n            // this is the last declaration in the ruleset.\n            if (parensDepth === 0 && bracketsDepth === 0) {\n              break done;\n            }\n\n            return this.finish(node, ParseError.LeftCurlyExpected);\n          }\n\n          break;\n\n        case TokenType.ParenthesisL:\n          parensDepth++;\n          break;\n\n        case TokenType.ParenthesisR:\n          parensDepth--;\n\n          if (parensDepth < 0) {\n            return this.finish(node, ParseError.LeftParenthesisExpected);\n          }\n\n          break;\n\n        case TokenType.BracketL:\n          bracketsDepth++;\n          break;\n\n        case TokenType.BracketR:\n          bracketsDepth--;\n\n          if (bracketsDepth < 0) {\n            return this.finish(node, ParseError.LeftSquareBracketExpected);\n          }\n\n          break;\n      }\n\n      this.consumeToken();\n    }\n\n    return node;\n  };\n\n  Parser.prototype._parseUnknownAtRuleName = function () {\n    var node = this.create(nodes.Node);\n\n    if (this.accept(TokenType.AtKeyword)) {\n      return this.finish(node);\n    }\n\n    return node;\n  };\n\n  Parser.prototype._parseOperator = function () {\n    // these are operators for binary expressions\n    if (this.peekDelim('/') || this.peekDelim('*') || this.peekDelim('+') || this.peekDelim('-') || this.peek(TokenType.Dashmatch) || this.peek(TokenType.Includes) || this.peek(TokenType.SubstringOperator) || this.peek(TokenType.PrefixOperator) || this.peek(TokenType.SuffixOperator) || this.peekDelim('=')) {\n      // doesn't stick to the standard here\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      return this.finish(node);\n    } else {\n      return null;\n    }\n  };\n\n  Parser.prototype._parseUnaryOperator = function () {\n    if (!this.peekDelim('+') && !this.peekDelim('-')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Node);\n    this.consumeToken();\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseCombinator = function () {\n    if (this.peekDelim('>')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      var mark = this.mark();\n\n      if (!this.hasWhitespace() && this.acceptDelim('>')) {\n        if (!this.hasWhitespace() && this.acceptDelim('>')) {\n          node.type = nodes.NodeType.SelectorCombinatorShadowPiercingDescendant;\n          return this.finish(node);\n        }\n\n        this.restoreAtMark(mark);\n      }\n\n      node.type = nodes.NodeType.SelectorCombinatorParent;\n      return this.finish(node);\n    } else if (this.peekDelim('+')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      node.type = nodes.NodeType.SelectorCombinatorSibling;\n      return this.finish(node);\n    } else if (this.peekDelim('~')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      node.type = nodes.NodeType.SelectorCombinatorAllSiblings;\n      return this.finish(node);\n    } else if (this.peekDelim('/')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      var mark = this.mark();\n\n      if (!this.hasWhitespace() && this.acceptIdent('deep') && !this.hasWhitespace() && this.acceptDelim('/')) {\n        node.type = nodes.NodeType.SelectorCombinatorShadowPiercingDescendant;\n        return this.finish(node);\n      }\n\n      this.restoreAtMark(mark);\n    }\n\n    return null;\n  };\n\n  Parser.prototype._parseSimpleSelector = function () {\n    // simple_selector\n    //  : element_name [ HASH | class | attrib | pseudo ]* | [ HASH | class | attrib | pseudo ]+ ;\n    var node = this.create(nodes.SimpleSelector);\n    var c = 0;\n\n    if (node.addChild(this._parseElementName())) {\n      c++;\n    }\n\n    while ((c === 0 || !this.hasWhitespace()) && node.addChild(this._parseSimpleSelectorBody())) {\n      c++;\n    }\n\n    return c > 0 ? this.finish(node) : null;\n  };\n\n  Parser.prototype._parseSimpleSelectorBody = function () {\n    return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();\n  };\n\n  Parser.prototype._parseSelectorIdent = function () {\n    return this._parseIdent();\n  };\n\n  Parser.prototype._parseHash = function () {\n    if (!this.peek(TokenType.Hash) && !this.peekDelim('#')) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.IdentifierSelector);\n\n    if (this.acceptDelim('#')) {\n      if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n        return this.finish(node, ParseError.IdentifierExpected);\n      }\n    } else {\n      this.consumeToken(); // TokenType.Hash\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseClass = function () {\n    // class: '.' IDENT ;\n    if (!this.peekDelim('.')) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.ClassSelector);\n    this.consumeToken(); // '.'\n\n    if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n      return this.finish(node, ParseError.IdentifierExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseElementName = function () {\n    // element_name: (ns? '|')? IDENT | '*';\n    var pos = this.mark();\n    var node = this.createNode(nodes.NodeType.ElementNameSelector);\n    node.addChild(this._parseNamespacePrefix());\n\n    if (!node.addChild(this._parseSelectorIdent()) && !this.acceptDelim('*')) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseNamespacePrefix = function () {\n    var pos = this.mark();\n    var node = this.createNode(nodes.NodeType.NamespacePrefix);\n\n    if (!node.addChild(this._parseIdent()) && !this.acceptDelim('*')) {// ns is optional\n    }\n\n    if (!this.acceptDelim('|')) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseAttrib = function () {\n    // attrib : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*   [ IDENT | STRING ] S* ]? ']'\n    if (!this.peek(TokenType.BracketL)) {\n      return null;\n    }\n\n    var node = this.create(nodes.AttributeSelector);\n    this.consumeToken(); // BracketL\n    // Optional attrib namespace\n\n    node.setNamespacePrefix(this._parseNamespacePrefix());\n\n    if (!node.setIdentifier(this._parseIdent())) {\n      return this.finish(node, ParseError.IdentifierExpected);\n    }\n\n    if (node.setOperator(this._parseOperator())) {\n      node.setValue(this._parseBinaryExpr());\n      this.acceptIdent('i'); // case insensitive matching\n    }\n\n    if (!this.accept(TokenType.BracketR)) {\n      return this.finish(node, ParseError.RightSquareBracketExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parsePseudo = function () {\n    var _this = this; // pseudo: ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n\n\n    var node = this._tryParsePseudoIdentifier();\n\n    if (node) {\n      if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n        var tryAsSelector = function () {\n          var selectors = _this.create(nodes.Node);\n\n          if (!selectors.addChild(_this._parseSelector(false))) {\n            return null;\n          }\n\n          while (_this.accept(TokenType.Comma) && selectors.addChild(_this._parseSelector(false))) {// loop\n          }\n\n          if (_this.peek(TokenType.ParenthesisR)) {\n            return _this.finish(selectors);\n          }\n\n          return null;\n        };\n\n        node.addChild(this.try(tryAsSelector) || this._parseBinaryExpr());\n\n        if (!this.accept(TokenType.ParenthesisR)) {\n          return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n      }\n\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  Parser.prototype._tryParsePseudoIdentifier = function () {\n    if (!this.peek(TokenType.Colon)) {\n      return null;\n    }\n\n    var pos = this.mark();\n    var node = this.createNode(nodes.NodeType.PseudoSelector);\n    this.consumeToken(); // Colon\n\n    if (this.hasWhitespace()) {\n      this.restoreAtMark(pos);\n      return null;\n    } // optional, support ::\n\n\n    if (this.accept(TokenType.Colon) && this.hasWhitespace()) {\n      this.markError(node, ParseError.IdentifierExpected);\n    }\n\n    if (!node.addChild(this._parseIdent())) {\n      this.markError(node, ParseError.IdentifierExpected);\n    }\n\n    return node;\n  };\n\n  Parser.prototype._tryParsePrio = function () {\n    var mark = this.mark();\n\n    var prio = this._parsePrio();\n\n    if (prio) {\n      return prio;\n    }\n\n    this.restoreAtMark(mark);\n    return null;\n  };\n\n  Parser.prototype._parsePrio = function () {\n    if (!this.peek(TokenType.Exclamation)) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.Prio);\n\n    if (this.accept(TokenType.Exclamation) && this.acceptIdent('important')) {\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  Parser.prototype._parseExpr = function (stopOnComma) {\n    if (stopOnComma === void 0) {\n      stopOnComma = false;\n    }\n\n    var node = this.create(nodes.Expression);\n\n    if (!node.addChild(this._parseBinaryExpr())) {\n      return null;\n    }\n\n    while (true) {\n      if (this.peek(TokenType.Comma)) {\n        // optional\n        if (stopOnComma) {\n          return this.finish(node);\n        }\n\n        this.consumeToken();\n      }\n\n      if (!node.addChild(this._parseBinaryExpr())) {\n        break;\n      }\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseNamedLine = function () {\n    // https://www.w3.org/TR/css-grid-1/#named-lines\n    if (!this.peek(TokenType.BracketL)) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.GridLine);\n    this.consumeToken();\n\n    while (node.addChild(this._parseIdent())) {// repeat\n    }\n\n    if (!this.accept(TokenType.BracketR)) {\n      return this.finish(node, ParseError.RightSquareBracketExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseBinaryExpr = function (preparsedLeft, preparsedOper) {\n    var node = this.create(nodes.BinaryExpression);\n\n    if (!node.setLeft(preparsedLeft || this._parseTerm())) {\n      return null;\n    }\n\n    if (!node.setOperator(preparsedOper || this._parseOperator())) {\n      return this.finish(node);\n    }\n\n    if (!node.setRight(this._parseTerm())) {\n      return this.finish(node, ParseError.TermExpected);\n    } // things needed for multiple binary expressions\n\n\n    node = this.finish(node);\n\n    var operator = this._parseOperator();\n\n    if (operator) {\n      node = this._parseBinaryExpr(node, operator);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseTerm = function () {\n    var node = this.create(nodes.Term);\n    node.setOperator(this._parseUnaryOperator()); // optional\n\n    if (node.setExpression(this._parseURILiteral()) || // url before function\n    node.setExpression(this._parseFunction()) || // function before ident\n    node.setExpression(this._parseIdent()) || node.setExpression(this._parseStringLiteral()) || node.setExpression(this._parseNumeric()) || node.setExpression(this._parseHexColor()) || node.setExpression(this._parseOperation()) || node.setExpression(this._parseNamedLine())) {\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  Parser.prototype._parseOperation = function () {\n    if (!this.peek(TokenType.ParenthesisL)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Node);\n    this.consumeToken(); // ParenthesisL\n\n    node.addChild(this._parseExpr());\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseNumeric = function () {\n    if (this.peek(TokenType.Num) || this.peek(TokenType.Percentage) || this.peek(TokenType.Resolution) || this.peek(TokenType.Length) || this.peek(TokenType.EMS) || this.peek(TokenType.EXS) || this.peek(TokenType.Angle) || this.peek(TokenType.Time) || this.peek(TokenType.Dimension) || this.peek(TokenType.Freq)) {\n      var node = this.create(nodes.NumericValue);\n      this.consumeToken();\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  Parser.prototype._parseStringLiteral = function () {\n    if (!this.peek(TokenType.String) && !this.peek(TokenType.BadString)) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.StringLiteral);\n    this.consumeToken();\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseURILiteral = function () {\n    if (!this.peekRegExp(TokenType.Ident, /^url(-prefix)?$/i)) {\n      return null;\n    }\n\n    var pos = this.mark();\n    var node = this.createNode(nodes.NodeType.URILiteral);\n    this.accept(TokenType.Ident);\n\n    if (this.hasWhitespace() || !this.peek(TokenType.ParenthesisL)) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    this.scanner.inURL = true;\n    this.consumeToken(); // consume ()\n\n    node.addChild(this._parseURLArgument()); // argument is optional\n\n    this.scanner.inURL = false;\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseURLArgument = function () {\n    var node = this.create(nodes.Node);\n\n    if (!this.accept(TokenType.String) && !this.accept(TokenType.BadString) && !this.acceptUnquotedString()) {\n      return null;\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseIdent = function (referenceTypes) {\n    if (!this.peek(TokenType.Ident)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Identifier);\n\n    if (referenceTypes) {\n      node.referenceTypes = referenceTypes;\n    }\n\n    node.isCustomProperty = this.peekRegExp(TokenType.Ident, /^--/);\n    this.consumeToken();\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseFunction = function () {\n    var pos = this.mark();\n    var node = this.create(nodes.Function);\n\n    if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n      return null;\n    }\n\n    if (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL)) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    if (node.getArguments().addChild(this._parseFunctionArgument())) {\n      while (this.accept(TokenType.Comma)) {\n        if (this.peek(TokenType.ParenthesisR)) {\n          break;\n        }\n\n        if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n          this.markError(node, ParseError.ExpressionExpected);\n        }\n      }\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseFunctionIdentifier = function () {\n    if (!this.peek(TokenType.Ident)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Identifier);\n    node.referenceTypes = [nodes.ReferenceType.Function];\n\n    if (this.acceptIdent('progid')) {\n      // support for IE7 specific filters: 'progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)'\n      if (this.accept(TokenType.Colon)) {\n        while (this.accept(TokenType.Ident) && this.acceptDelim('.')) {// loop\n        }\n      }\n\n      return this.finish(node);\n    }\n\n    this.consumeToken();\n    return this.finish(node);\n  };\n\n  Parser.prototype._parseFunctionArgument = function () {\n    var node = this.create(nodes.FunctionArgument);\n\n    if (node.setValue(this._parseExpr(true))) {\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  Parser.prototype._parseHexColor = function () {\n    if (this.peekRegExp(TokenType.Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {\n      var node = this.create(nodes.HexColorValue);\n      this.consumeToken();\n      return this.finish(node);\n    } else {\n      return null;\n    }\n  };\n\n  return Parser;\n}();\n\nexport { Parser };","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","TokenType","Scanner","nodes","ParseError","languageFacts","isDefined","Parser","scnr","keyframeRegex","scanner","token","type","EOF","offset","len","text","prevToken","undefined","prototype","peekIdent","Ident","toLowerCase","peekKeyword","AtKeyword","peekDelim","Delim","peek","peekRegExp","regEx","test","hasWhitespace","consumeToken","scan","mark","prev","curr","pos","restoreAtMark","goBackTo","try","func","node","acceptOneKeyword","keywords","_i","keywords_1","keyword","accept","acceptIdent","acceptKeyword","acceptDelim","acceptRegexp","_parseRegexp","createNode","NodeType","Identifier","finish","acceptUnquotedString","unquoted","scanUnquotedString","resync","resyncTokens","resyncStopTokens","indexOf","nodeType","Node","create","ctor","error","Nodelist","markError","prevEnd","lastErrorToken","addIssue","Marker","Level","Error","parseStylesheet","textDocument","versionId","version","getText","textProvider","substr","internalParse","_parseStylesheet","input","parseFunc","setSource","bind","Stylesheet","addChild","_parseStylesheetStart","inRecovery","hasMatch","statement","_parseStylesheetStatement","_needsSemicolonAfter","SemiColon","SemiColonExpected","CDO","CDC","UnknownAtRule","RuleOrSelectorExpected","_parseCharset","isNested","_parseStylesheetAtStatement","_parseRuleset","_parseImport","_parseMedia","_parsePage","_parseFontFace","_parseKeyframe","_parseSupports","_parseViewPort","_parseNamespace","_parseDocument","_parseUnknownAtRule","_tryParseRuleset","_parseSelector","Comma","CurlyL","RuleSet","selectors","getSelectors","SelectorExpected","_parseBody","_parseRuleSetDeclaration","_parseAtApply","_tryParseCustomPropertyDeclaration","_parseDeclaration","AtApplyRule","setIdentifier","_parseIdent","ReferenceType","Variable","IdentifierExpected","Keyframe","ViewPort","Media","Ruleset","Namespace","If","For","Each","While","MixinDeclaration","FunctionDeclaration","ExtendsReference","MixinContent","ReturnStatement","MediaQuery","Debug","Import","CustomPropertyDeclaration","VariableDeclaration","needsSemicolon","MixinReference","getContent","Declaration","getNestedProperties","_parseDeclarations","parseDeclaration","Declarations","decl","CurlyR","semicolonPosition","RightCurlyExpected","setDeclarations","LeftCurlyExpected","Selector","hasContent","_parseCombinator","_parseSimpleSelector","setProperty","_parseProperty","Colon","stopTokens","ColonExpected","colonPosition","setValue","_parseExpr","PropertyValueExpected","_parsePrio","propertySet","CustomPropertySet","declarations","isErroneous","setPropertySet","expression","_parseCustomPropertyValue","isTopLevel","curlyDepth","parensDepth","bracketsDepth","done","Exclamation","ParenthesisL","ParenthesisR","LeftParenthesisExpected","BracketL","BracketR","LeftSquareBracketExpected","BadString","RightSquareBracketExpected","RightParenthesisExpected","_tryToParseDeclaration","Property","_parsePropertyIdentifier","Charset","String","_parseURILiteral","_parseStringLiteral","URIOrStringExpected","setMedialist","_parseMediaQueryList","URIExpected","FontFace","atNode","setKeyword","matches","UnknownKeyword","_parseKeyframeIdent","_parseKeyframeSelector","KeyframeSelector","Percentage","PercentageExpected","_tryParseKeyframeSelector","Supports","_parseSupportsCondition","_parseSupportsDeclaration","SupportsCondition","_parseSupportsConditionInParens","lParent","ConditionExpected","rParent","openParentCount","_parseMediaDeclaration","MediaQueryExpected","Medialist","_parseMediaQuery","resyncStopToken","parseExpression","_parseMediaContentStart","_parseMediaFeatureName","TermExpected","_parseMedium","_parsePageDeclaration","_parsePageMarginBox","Page","_parsePageSelector","PageBoxMarginBox","pageBoxDirectives","Document","_parseUnknownAtRuleName","curlyLCount","_parseOperator","Dashmatch","Includes","SubstringOperator","PrefixOperator","SuffixOperator","Operator","_parseUnaryOperator","SelectorCombinatorShadowPiercingDescendant","SelectorCombinatorParent","SelectorCombinatorSibling","SelectorCombinatorAllSiblings","SimpleSelector","c","_parseElementName","_parseSimpleSelectorBody","_parsePseudo","_parseHash","_parseClass","_parseAttrib","_parseSelectorIdent","Hash","IdentifierSelector","ClassSelector","ElementNameSelector","_parseNamespacePrefix","NamespacePrefix","AttributeSelector","setNamespacePrefix","setOperator","_parseBinaryExpr","_this","_tryParsePseudoIdentifier","tryAsSelector","PseudoSelector","_tryParsePrio","prio","Prio","stopOnComma","Expression","_parseNamedLine","GridLine","preparsedLeft","preparsedOper","BinaryExpression","setLeft","_parseTerm","setRight","operator","Term","setExpression","_parseFunction","_parseNumeric","_parseHexColor","_parseOperation","Num","Resolution","Length","EMS","EXS","Angle","Time","Dimension","Freq","NumericValue","StringLiteral","URILiteral","inURL","_parseURLArgument","referenceTypes","isCustomProperty","Function","_parseFunctionIdentifier","getArguments","_parseFunctionArgument","ExpressionExpected","FunctionArgument","HexColorValue"],"mappings":"AAAA;;;;AAIA;;AACA,IAAIA,cAAc,GAAI,QAAQ,KAAKA,cAAd,IAAiC,YAAY;AAC9D,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAAf,EAAkBC,EAAE,GAAGC,SAAS,CAACC,MAAtC,EAA8CH,CAAC,GAAGC,EAAlD,EAAsDD,CAAC,EAAvD,EAA2DD,CAAC,IAAIG,SAAS,CAACF,CAAD,CAAT,CAAaG,MAAlB;;AAC3D,OAAK,IAAIC,CAAC,GAAGC,KAAK,CAACN,CAAD,CAAb,EAAkBO,CAAC,GAAG,CAAtB,EAAyBN,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGC,EAAzC,EAA6CD,CAAC,EAA9C,EACI,KAAK,IAAIO,CAAC,GAAGL,SAAS,CAACF,CAAD,CAAjB,EAAsBQ,CAAC,GAAG,CAA1B,EAA6BC,EAAE,GAAGF,CAAC,CAACJ,MAAzC,EAAiDK,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIF,CAAC,EAA/D,EACIF,CAAC,CAACE,CAAD,CAAD,GAAOC,CAAC,CAACC,CAAD,CAAR;;AACR,SAAOJ,CAAP;AACH,CAND;;AAOA,SAASM,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAO,KAAKC,aAAZ,MAA+B,2BAA/B;AACA,SAASC,SAAT,QAA0B,qBAA1B,C,CACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM;AAAG;AAAe,YAAY;AACpC,WAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAClB,QAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,MAAAA,IAAI,GAAG,IAAIN,OAAJ,EAAP;AAAuB;;AAC9C,SAAKO,aAAL,GAAqB,uCAArB;AACA,SAAKC,OAAL,GAAeF,IAAf;AACA,SAAKG,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAEX,SAAS,CAACY,GAAlB;AAAuBC,MAAAA,MAAM,EAAE,CAAC,CAAhC;AAAmCC,MAAAA,GAAG,EAAE,CAAxC;AAA2CC,MAAAA,IAAI,EAAE;AAAjD,KAAb;AACA,SAAKC,SAAL,GAAiBC,SAAjB;AACH;;AACDX,EAAAA,MAAM,CAACY,SAAP,CAAiBC,SAAjB,GAA6B,UAAUJ,IAAV,EAAgB;AACzC,WAAOf,SAAS,CAACoB,KAAV,KAAoB,KAAKV,KAAL,CAAWC,IAA/B,IAAuCI,IAAI,CAACtB,MAAL,KAAgB,KAAKiB,KAAL,CAAWK,IAAX,CAAgBtB,MAAvE,IAAiFsB,IAAI,KAAK,KAAKL,KAAL,CAAWK,IAAX,CAAgBM,WAAhB,EAAjG;AACH,GAFD;;AAGAf,EAAAA,MAAM,CAACY,SAAP,CAAiBI,WAAjB,GAA+B,UAAUP,IAAV,EAAgB;AAC3C,WAAOf,SAAS,CAACuB,SAAV,KAAwB,KAAKb,KAAL,CAAWC,IAAnC,IAA2CI,IAAI,CAACtB,MAAL,KAAgB,KAAKiB,KAAL,CAAWK,IAAX,CAAgBtB,MAA3E,IAAqFsB,IAAI,KAAK,KAAKL,KAAL,CAAWK,IAAX,CAAgBM,WAAhB,EAArG;AACH,GAFD;;AAGAf,EAAAA,MAAM,CAACY,SAAP,CAAiBM,SAAjB,GAA6B,UAAUT,IAAV,EAAgB;AACzC,WAAOf,SAAS,CAACyB,KAAV,KAAoB,KAAKf,KAAL,CAAWC,IAA/B,IAAuCI,IAAI,KAAK,KAAKL,KAAL,CAAWK,IAAlE;AACH,GAFD;;AAGAT,EAAAA,MAAM,CAACY,SAAP,CAAiBQ,IAAjB,GAAwB,UAAUf,IAAV,EAAgB;AACpC,WAAOA,IAAI,KAAK,KAAKD,KAAL,CAAWC,IAA3B;AACH,GAFD;;AAGAL,EAAAA,MAAM,CAACY,SAAP,CAAiBS,UAAjB,GAA8B,UAAUhB,IAAV,EAAgBiB,KAAhB,EAAuB;AACjD,QAAIjB,IAAI,KAAK,KAAKD,KAAL,CAAWC,IAAxB,EAA8B;AAC1B,aAAO,KAAP;AACH;;AACD,WAAOiB,KAAK,CAACC,IAAN,CAAW,KAAKnB,KAAL,CAAWK,IAAtB,CAAP;AACH,GALD;;AAMAT,EAAAA,MAAM,CAACY,SAAP,CAAiBY,aAAjB,GAAiC,YAAY;AACzC,WAAO,CAAC,CAAC,KAAKd,SAAP,IAAqB,KAAKA,SAAL,CAAeH,MAAf,GAAwB,KAAKG,SAAL,CAAeF,GAAvC,KAA+C,KAAKJ,KAAL,CAAWG,MAAtF;AACH,GAFD;;AAGAP,EAAAA,MAAM,CAACY,SAAP,CAAiBa,YAAjB,GAAgC,YAAY;AACxC,SAAKf,SAAL,GAAiB,KAAKN,KAAtB;AACA,SAAKA,KAAL,GAAa,KAAKD,OAAL,CAAauB,IAAb,EAAb;AACH,GAHD;;AAIA1B,EAAAA,MAAM,CAACY,SAAP,CAAiBe,IAAjB,GAAwB,YAAY;AAChC,WAAO;AACHC,MAAAA,IAAI,EAAE,KAAKlB,SADR;AAEHmB,MAAAA,IAAI,EAAE,KAAKzB,KAFR;AAGH0B,MAAAA,GAAG,EAAE,KAAK3B,OAAL,CAAa2B,GAAb;AAHF,KAAP;AAKH,GAND;;AAOA9B,EAAAA,MAAM,CAACY,SAAP,CAAiBmB,aAAjB,GAAiC,UAAUJ,IAAV,EAAgB;AAC7C,SAAKjB,SAAL,GAAiBiB,IAAI,CAACC,IAAtB;AACA,SAAKxB,KAAL,GAAauB,IAAI,CAACE,IAAlB;AACA,SAAK1B,OAAL,CAAa6B,QAAb,CAAsBL,IAAI,CAACG,GAA3B;AACH,GAJD;;AAKA9B,EAAAA,MAAM,CAACY,SAAP,CAAiBqB,GAAjB,GAAuB,UAAUC,IAAV,EAAgB;AACnC,QAAIJ,GAAG,GAAG,KAAKH,IAAL,EAAV;AACA,QAAIQ,IAAI,GAAGD,IAAI,EAAf;;AACA,QAAI,CAACC,IAAL,EAAW;AACP,WAAKJ,aAAL,CAAmBD,GAAnB;AACA,aAAO,IAAP;AACH;;AACD,WAAOK,IAAP;AACH,GARD;;AASAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBwB,gBAAjB,GAAoC,UAAUC,QAAV,EAAoB;AACpD,QAAI3C,SAAS,CAACuB,SAAV,KAAwB,KAAKb,KAAL,CAAWC,IAAvC,EAA6C;AACzC,WAAK,IAAIiC,EAAE,GAAG,CAAT,EAAYC,UAAU,GAAGF,QAA9B,EAAwCC,EAAE,GAAGC,UAAU,CAACpD,MAAxD,EAAgEmD,EAAE,EAAlE,EAAsE;AAClE,YAAIE,OAAO,GAAGD,UAAU,CAACD,EAAD,CAAxB;;AACA,YAAIE,OAAO,CAACrD,MAAR,KAAmB,KAAKiB,KAAL,CAAWK,IAAX,CAAgBtB,MAAnC,IAA6CqD,OAAO,KAAK,KAAKpC,KAAL,CAAWK,IAAX,CAAgBM,WAAhB,EAA7D,EAA4F;AACxF,eAAKU,YAAL;AACA,iBAAO,IAAP;AACH;AACJ;AACJ;;AACD,WAAO,KAAP;AACH,GAXD;;AAYAzB,EAAAA,MAAM,CAACY,SAAP,CAAiB6B,MAAjB,GAA0B,UAAUpC,IAAV,EAAgB;AACtC,QAAIA,IAAI,KAAK,KAAKD,KAAL,CAAWC,IAAxB,EAA8B;AAC1B,WAAKoB,YAAL;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOAzB,EAAAA,MAAM,CAACY,SAAP,CAAiB8B,WAAjB,GAA+B,UAAUjC,IAAV,EAAgB;AAC3C,QAAI,KAAKI,SAAL,CAAeJ,IAAf,CAAJ,EAA0B;AACtB,WAAKgB,YAAL;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOAzB,EAAAA,MAAM,CAACY,SAAP,CAAiB+B,aAAjB,GAAiC,UAAUlC,IAAV,EAAgB;AAC7C,QAAI,KAAKO,WAAL,CAAiBP,IAAjB,CAAJ,EAA4B;AACxB,WAAKgB,YAAL;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOAzB,EAAAA,MAAM,CAACY,SAAP,CAAiBgC,WAAjB,GAA+B,UAAUnC,IAAV,EAAgB;AAC3C,QAAI,KAAKS,SAAL,CAAeT,IAAf,CAAJ,EAA0B;AACtB,WAAKgB,YAAL;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOAzB,EAAAA,MAAM,CAACY,SAAP,CAAiBiC,YAAjB,GAAgC,UAAUvB,KAAV,EAAiB;AAC7C,QAAIA,KAAK,CAACC,IAAN,CAAW,KAAKnB,KAAL,CAAWK,IAAtB,CAAJ,EAAiC;AAC7B,WAAKgB,YAAL;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAOAzB,EAAAA,MAAM,CAACY,SAAP,CAAiBkC,YAAjB,GAAgC,UAAUxB,KAAV,EAAiB;AAC7C,QAAIa,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAeC,UAA/B,CAAX;;AACA,OAAG,CAAG,CAAN,QAAc,KAAKJ,YAAL,CAAkBvB,KAAlB,CAAd;;AACA,WAAO,KAAK4B,MAAL,CAAYf,IAAZ,CAAP;AACH,GAJD;;AAKAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBuC,oBAAjB,GAAwC,YAAY;AAChD,QAAIrB,GAAG,GAAG,KAAK3B,OAAL,CAAa2B,GAAb,EAAV;AACA,SAAK3B,OAAL,CAAa6B,QAAb,CAAsB,KAAK5B,KAAL,CAAWG,MAAjC;AACA,QAAI6C,QAAQ,GAAG,KAAKjD,OAAL,CAAakD,kBAAb,EAAf;;AACA,QAAID,QAAJ,EAAc;AACV,WAAKhD,KAAL,GAAagD,QAAb;AACA,WAAK3B,YAAL;AACA,aAAO,IAAP;AACH;;AACD,SAAKtB,OAAL,CAAa6B,QAAb,CAAsBF,GAAtB;AACA,WAAO,KAAP;AACH,GAXD;;AAYA9B,EAAAA,MAAM,CAACY,SAAP,CAAiB0C,MAAjB,GAA0B,UAAUC,YAAV,EAAwBC,gBAAxB,EAA0C;AAChE,WAAO,IAAP,EAAa;AACT,UAAID,YAAY,IAAIA,YAAY,CAACE,OAAb,CAAqB,KAAKrD,KAAL,CAAWC,IAAhC,MAA0C,CAAC,CAA/D,EAAkE;AAC9D,aAAKoB,YAAL;AACA,eAAO,IAAP;AACH,OAHD,MAIK,IAAI+B,gBAAgB,IAAIA,gBAAgB,CAACC,OAAjB,CAAyB,KAAKrD,KAAL,CAAWC,IAApC,MAA8C,CAAC,CAAvE,EAA0E;AAC3E,eAAO,IAAP;AACH,OAFI,MAGA;AACD,YAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoBX,SAAS,CAACY,GAAlC,EAAuC;AACnC,iBAAO,KAAP;AACH;;AACD,aAAKF,KAAL,GAAa,KAAKD,OAAL,CAAauB,IAAb,EAAb;AACH;AACJ;AACJ,GAhBD;;AAiBA1B,EAAAA,MAAM,CAACY,SAAP,CAAiBmC,UAAjB,GAA8B,UAAUW,QAAV,EAAoB;AAC9C,WAAO,IAAI9D,KAAK,CAAC+D,IAAV,CAAe,KAAKvD,KAAL,CAAWG,MAA1B,EAAkC,KAAKH,KAAL,CAAWI,GAA7C,EAAkDkD,QAAlD,CAAP;AACH,GAFD;;AAGA1D,EAAAA,MAAM,CAACY,SAAP,CAAiBgD,MAAjB,GAA0B,UAAUC,IAAV,EAAgB;AACtC,WAAO,IAAIA,IAAJ,CAAS,KAAKzD,KAAL,CAAWG,MAApB,EAA4B,KAAKH,KAAL,CAAWI,GAAvC,CAAP;AACH,GAFD;;AAGAR,EAAAA,MAAM,CAACY,SAAP,CAAiBsC,MAAjB,GAA0B,UAAUf,IAAV,EAAgB2B,KAAhB,EAAuBP,YAAvB,EAAqCC,gBAArC,EAAuD;AAC7E;AACA;AACA,QAAI,EAAErB,IAAI,YAAYvC,KAAK,CAACmE,QAAxB,CAAJ,EAAuC;AACnC,UAAID,KAAJ,EAAW;AACP,aAAKE,SAAL,CAAe7B,IAAf,EAAqB2B,KAArB,EAA4BP,YAA5B,EAA0CC,gBAA1C;AACH,OAHkC,CAInC;;;AACA,UAAI,KAAK9C,SAAT,EAAoB;AAChB;AACA,YAAIuD,OAAO,GAAG,KAAKvD,SAAL,CAAeH,MAAf,GAAwB,KAAKG,SAAL,CAAeF,GAArD;AACA2B,QAAAA,IAAI,CAAChD,MAAL,GAAc8E,OAAO,GAAG9B,IAAI,CAAC5B,MAAf,GAAwB0D,OAAO,GAAG9B,IAAI,CAAC5B,MAAvC,GAAgD,CAA9D,CAHgB,CAGiD;AACpE;AACJ;;AACD,WAAO4B,IAAP;AACH,GAfD;;AAgBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBoD,SAAjB,GAA6B,UAAU7B,IAAV,EAAgB2B,KAAhB,EAAuBP,YAAvB,EAAqCC,gBAArC,EAAuD;AAChF,QAAI,KAAKpD,KAAL,KAAe,KAAK8D,cAAxB,EAAwC;AAAE;AACtC/B,MAAAA,IAAI,CAACgC,QAAL,CAAc,IAAIvE,KAAK,CAACwE,MAAV,CAAiBjC,IAAjB,EAAuB2B,KAAvB,EAA8BlE,KAAK,CAACyE,KAAN,CAAYC,KAA1C,EAAiD3D,SAAjD,EAA4D,KAAKP,KAAL,CAAWG,MAAvE,EAA+E,KAAKH,KAAL,CAAWI,GAA1F,CAAd;AACA,WAAK0D,cAAL,GAAsB,KAAK9D,KAA3B;AACH;;AACD,QAAImD,YAAY,IAAIC,gBAApB,EAAsC;AAClC,WAAKF,MAAL,CAAYC,YAAZ,EAA0BC,gBAA1B;AACH;AACJ,GARD;;AASAxD,EAAAA,MAAM,CAACY,SAAP,CAAiB2D,eAAjB,GAAmC,UAAUC,YAAV,EAAwB;AACvD,QAAIC,SAAS,GAAGD,YAAY,CAACE,OAA7B;AACA,QAAIjE,IAAI,GAAG+D,YAAY,CAACG,OAAb,EAAX;;AACA,QAAIC,YAAY,GAAG,UAAUrE,MAAV,EAAkBpB,MAAlB,EAA0B;AACzC,UAAIqF,YAAY,CAACE,OAAb,KAAyBD,SAA7B,EAAwC;AACpC,cAAM,IAAIH,KAAJ,CAAU,sDAAV,CAAN;AACH;;AACD,aAAO7D,IAAI,CAACoE,MAAL,CAAYtE,MAAZ,EAAoBpB,MAApB,CAAP;AACH,KALD;;AAMA,WAAO,KAAK2F,aAAL,CAAmBrE,IAAnB,EAAyB,KAAKsE,gBAA9B,EAAgDH,YAAhD,CAAP;AACH,GAVD;;AAWA5E,EAAAA,MAAM,CAACY,SAAP,CAAiBkE,aAAjB,GAAiC,UAAUE,KAAV,EAAiBC,SAAjB,EAA4BL,YAA5B,EAA0C;AACvE,SAAKzE,OAAL,CAAa+E,SAAb,CAAuBF,KAAvB;AACA,SAAK5E,KAAL,GAAa,KAAKD,OAAL,CAAauB,IAAb,EAAb;AACA,QAAIS,IAAI,GAAG8C,SAAS,CAACE,IAAV,CAAe,IAAf,GAAX;;AACA,QAAIhD,IAAJ,EAAU;AACN,UAAIyC,YAAJ,EAAkB;AACdzC,QAAAA,IAAI,CAACyC,YAAL,GAAoBA,YAApB;AACH,OAFD,MAGK;AACDzC,QAAAA,IAAI,CAACyC,YAAL,GAAoB,UAAUrE,MAAV,EAAkBpB,MAAlB,EAA0B;AAAE,iBAAO6F,KAAK,CAACH,MAAN,CAAatE,MAAb,EAAqBpB,MAArB,CAAP;AAAsC,SAAtF;AACH;AACJ;;AACD,WAAOgD,IAAP;AACH,GAbD;;AAcAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBmE,gBAAjB,GAAoC,YAAY;AAC5C,QAAI5C,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACwF,UAAlB,CAAX;;AACA,WAAOjD,IAAI,CAACkD,QAAL,CAAc,KAAKC,qBAAL,EAAd,CAAP,EAAoD,CAChD;AACH;;AACD,QAAIC,UAAU,GAAG,KAAjB;;AACA,OAAG;AACC,UAAIC,QAAQ,GAAG,KAAf;;AACA,SAAG;AACCA,QAAAA,QAAQ,GAAG,KAAX;;AACA,YAAIC,SAAS,GAAG,KAAKC,yBAAL,EAAhB;;AACA,YAAID,SAAJ,EAAe;AACXtD,UAAAA,IAAI,CAACkD,QAAL,CAAcI,SAAd;AACAD,UAAAA,QAAQ,GAAG,IAAX;AACAD,UAAAA,UAAU,GAAG,KAAb;;AACA,cAAI,CAAC,KAAKnE,IAAL,CAAU1B,SAAS,CAACY,GAApB,CAAD,IAA6B,KAAKqF,oBAAL,CAA0BF,SAA1B,CAA7B,IAAqE,CAAC,KAAKhD,MAAL,CAAY/C,SAAS,CAACkG,SAAtB,CAA1E,EAA4G;AACxG,iBAAK5B,SAAL,CAAe7B,IAAf,EAAqBtC,UAAU,CAACgG,iBAAhC;AACH;AACJ;;AACD,eAAO,KAAKpD,MAAL,CAAY/C,SAAS,CAACkG,SAAtB,KAAoC,KAAKnD,MAAL,CAAY/C,SAAS,CAACoG,GAAtB,CAApC,IAAkE,KAAKrD,MAAL,CAAY/C,SAAS,CAACqG,GAAtB,CAAzE,EAAqG;AACjG;AACAP,UAAAA,QAAQ,GAAG,IAAX;AACAD,UAAAA,UAAU,GAAG,KAAb;AACH;AACJ,OAhBD,QAgBSC,QAhBT;;AAiBA,UAAI,KAAKpE,IAAL,CAAU1B,SAAS,CAACY,GAApB,CAAJ,EAA8B;AAC1B;AACH;;AACD,UAAI,CAACiF,UAAL,EAAiB;AACb,YAAI,KAAKnE,IAAL,CAAU1B,SAAS,CAACuB,SAApB,CAAJ,EAAoC;AAChC,eAAK+C,SAAL,CAAe7B,IAAf,EAAqBtC,UAAU,CAACmG,aAAhC;AACH,SAFD,MAGK;AACD,eAAKhC,SAAL,CAAe7B,IAAf,EAAqBtC,UAAU,CAACoG,sBAAhC;AACH;;AACDV,QAAAA,UAAU,GAAG,IAAb;AACH;;AACD,WAAK9D,YAAL;AACH,KAhCD,QAgCS,CAAC,KAAKL,IAAL,CAAU1B,SAAS,CAACY,GAApB,CAhCV;;AAiCA,WAAO,KAAK4C,MAAL,CAAYf,IAAZ,CAAP;AACH,GAxCD;;AAyCAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB0E,qBAAjB,GAAyC,YAAY;AACjD,WAAO,KAAKY,aAAL,EAAP;AACH,GAFD;;AAGAlG,EAAAA,MAAM,CAACY,SAAP,CAAiB8E,yBAAjB,GAA6C,UAAUS,QAAV,EAAoB;AAC7D,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,KAAX;AAAmB;;AAC9C,QAAI,KAAK/E,IAAL,CAAU1B,SAAS,CAACuB,SAApB,CAAJ,EAAoC;AAChC,aAAO,KAAKmF,2BAAL,CAAiCD,QAAjC,CAAP;AACH;;AACD,WAAO,KAAKE,aAAL,CAAmBF,QAAnB,CAAP;AACH,GAND;;AAOAnG,EAAAA,MAAM,CAACY,SAAP,CAAiBwF,2BAAjB,GAA+C,UAAUD,QAAV,EAAoB;AAC/D,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,KAAX;AAAmB;;AAC9C,WAAO,KAAKG,YAAL,MACA,KAAKC,WAAL,CAAiBJ,QAAjB,CADA,IAEA,KAAKK,UAAL,EAFA,IAGA,KAAKC,cAAL,EAHA,IAIA,KAAKC,cAAL,EAJA,IAKA,KAAKC,cAAL,CAAoBR,QAApB,CALA,IAMA,KAAKS,cAAL,EANA,IAOA,KAAKC,eAAL,EAPA,IAQA,KAAKC,cAAL,EARA,IASA,KAAKC,mBAAL,EATP;AAUH,GAZD;;AAaA/G,EAAAA,MAAM,CAACY,SAAP,CAAiBoG,gBAAjB,GAAoC,UAAUb,QAAV,EAAoB;AACpD,QAAIxE,IAAI,GAAG,KAAKA,IAAL,EAAX;;AACA,QAAI,KAAKsF,cAAL,CAAoBd,QAApB,CAAJ,EAAmC;AAC/B,aAAO,KAAK1D,MAAL,CAAY/C,SAAS,CAACwH,KAAtB,KAAgC,KAAKD,cAAL,CAAoBd,QAApB,CAAvC,EAAsE,CAClE;AACH;;AACD,UAAI,KAAK1D,MAAL,CAAY/C,SAAS,CAACyH,MAAtB,CAAJ,EAAmC;AAC/B,aAAKpF,aAAL,CAAmBJ,IAAnB;AACA,eAAO,KAAK0E,aAAL,CAAmBF,QAAnB,CAAP;AACH;AACJ;;AACD,SAAKpE,aAAL,CAAmBJ,IAAnB;AACA,WAAO,IAAP;AACH,GAbD;;AAcA3B,EAAAA,MAAM,CAACY,SAAP,CAAiByF,aAAjB,GAAiC,UAAUF,QAAV,EAAoB;AACjD,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,KAAX;AAAmB;;AAC9C,QAAIhE,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACwH,OAAlB,CAAX;AACA,QAAIC,SAAS,GAAGlF,IAAI,CAACmF,YAAL,EAAhB;;AACA,QAAI,CAACD,SAAS,CAAChC,QAAV,CAAmB,KAAK4B,cAAL,CAAoBd,QAApB,CAAnB,CAAL,EAAwD;AACpD,aAAO,IAAP;AACH;;AACD,WAAO,KAAK1D,MAAL,CAAY/C,SAAS,CAACwH,KAAtB,CAAP,EAAqC;AACjC,UAAI,CAACG,SAAS,CAAChC,QAAV,CAAmB,KAAK4B,cAAL,CAAoBd,QAApB,CAAnB,CAAL,EAAwD;AACpD,eAAO,KAAKjD,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0H,gBAA7B,CAAP;AACH;AACJ;;AACD,WAAO,KAAKC,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKsF,wBAAL,CAA8BtC,IAA9B,CAAmC,IAAnC,CAAtB,CAAP;AACH,GAbD;;AAcAnF,EAAAA,MAAM,CAACY,SAAP,CAAiB6G,wBAAjB,GAA4C,YAAY;AACpD;AACA,WAAO,KAAKC,aAAL,MACA,KAAKC,kCAAL,EADA,IAEA,KAAKC,iBAAL,EAFA,IAGA,KAAKb,mBAAL,EAHP;AAIH,GAND;AAOA;;;;;;;;AAMA/G,EAAAA,MAAM,CAACY,SAAP,CAAiB8G,aAAjB,GAAiC,YAAY;AACzC,QAAI,CAAC,KAAK1G,WAAL,CAAiB,QAAjB,CAAL,EAAiC;AAC7B,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACiI,WAAlB,CAAX;AACA,SAAKpG,YAAL;;AACA,QAAI,CAACU,IAAI,CAAC2F,aAAL,CAAmB,KAAKC,WAAL,CAAiB,CAACnI,KAAK,CAACoI,aAAN,CAAoBC,QAArB,CAAjB,CAAnB,CAAL,EAA2E;AACvE,aAAO,KAAK/E,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,CAAP;AACH;;AACD,WAAO,KAAKhF,MAAL,CAAYf,IAAZ,CAAP;AACH,GAVD;;AAWAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB+E,oBAAjB,GAAwC,UAAUxD,IAAV,EAAgB;AACpD,YAAQA,IAAI,CAAC9B,IAAb;AACI,WAAKT,KAAK,CAACoD,QAAN,CAAemF,QAApB;AACA,WAAKvI,KAAK,CAACoD,QAAN,CAAeoF,QAApB;AACA,WAAKxI,KAAK,CAACoD,QAAN,CAAeqF,KAApB;AACA,WAAKzI,KAAK,CAACoD,QAAN,CAAesF,OAApB;AACA,WAAK1I,KAAK,CAACoD,QAAN,CAAeuF,SAApB;AACA,WAAK3I,KAAK,CAACoD,QAAN,CAAewF,EAApB;AACA,WAAK5I,KAAK,CAACoD,QAAN,CAAeyF,GAApB;AACA,WAAK7I,KAAK,CAACoD,QAAN,CAAe0F,IAApB;AACA,WAAK9I,KAAK,CAACoD,QAAN,CAAe2F,KAApB;AACA,WAAK/I,KAAK,CAACoD,QAAN,CAAe4F,gBAApB;AACA,WAAKhJ,KAAK,CAACoD,QAAN,CAAe6F,mBAApB;AACI,eAAO,KAAP;;AACJ,WAAKjJ,KAAK,CAACoD,QAAN,CAAe8F,gBAApB;AACA,WAAKlJ,KAAK,CAACoD,QAAN,CAAe+F,YAApB;AACA,WAAKnJ,KAAK,CAACoD,QAAN,CAAegG,eAApB;AACA,WAAKpJ,KAAK,CAACoD,QAAN,CAAeiG,UAApB;AACA,WAAKrJ,KAAK,CAACoD,QAAN,CAAekG,KAApB;AACA,WAAKtJ,KAAK,CAACoD,QAAN,CAAemG,MAApB;AACA,WAAKvJ,KAAK,CAACoD,QAAN,CAAe6E,WAApB;AACA,WAAKjI,KAAK,CAACoD,QAAN,CAAeoG,yBAApB;AACI,eAAO,IAAP;;AACJ,WAAKxJ,KAAK,CAACoD,QAAN,CAAeqG,mBAApB;AACI,eAAOlH,IAAI,CAACmH,cAAZ;;AACJ,WAAK1J,KAAK,CAACoD,QAAN,CAAeuG,cAApB;AACI,eAAO,CAACpH,IAAI,CAACqH,UAAL,EAAR;;AACJ,WAAK5J,KAAK,CAACoD,QAAN,CAAeyG,WAApB;AACI,eAAO,CAACtH,IAAI,CAACuH,mBAAL,EAAR;AA3BR;;AA6BA,WAAO,KAAP;AACH,GA/BD;;AAgCA1J,EAAAA,MAAM,CAACY,SAAP,CAAiB+I,kBAAjB,GAAsC,UAAUC,gBAAV,EAA4B;AAC9D,QAAIzH,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACiK,YAAlB,CAAX;;AACA,QAAI,CAAC,KAAKpH,MAAL,CAAY/C,SAAS,CAACyH,MAAtB,CAAL,EAAoC;AAChC,aAAO,IAAP;AACH;;AACD,QAAI2C,IAAI,GAAGF,gBAAgB,EAA3B;;AACA,WAAOzH,IAAI,CAACkD,QAAL,CAAcyE,IAAd,CAAP,EAA4B;AACxB,UAAI,KAAK1I,IAAL,CAAU1B,SAAS,CAACqK,MAApB,CAAJ,EAAiC;AAC7B;AACH;;AACD,UAAI,KAAKpE,oBAAL,CAA0BmE,IAA1B,KAAmC,CAAC,KAAKrH,MAAL,CAAY/C,SAAS,CAACkG,SAAtB,CAAxC,EAA0E;AACtE,eAAO,KAAK1C,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACgG,iBAA7B,EAAgD,CAACnG,SAAS,CAACkG,SAAX,EAAsBlG,SAAS,CAACqK,MAAhC,CAAhD,CAAP;AACH,OANuB,CAOxB;;;AACA,UAAID,IAAI,IAAI,KAAKpJ,SAAb,IAA0B,KAAKA,SAAL,CAAeL,IAAf,KAAwBX,SAAS,CAACkG,SAAhE,EAA2E;AACvEkE,QAAAA,IAAI,CAACE,iBAAL,GAAyB,KAAKtJ,SAAL,CAAeH,MAAxC;AACH;;AACD,aAAO,KAAKkC,MAAL,CAAY/C,SAAS,CAACkG,SAAtB,CAAP,EAAyC,CACrC;AACH;;AACDkE,MAAAA,IAAI,GAAGF,gBAAgB,EAAvB;AACH;;AACD,QAAI,CAAC,KAAKnH,MAAL,CAAY/C,SAAS,CAACqK,MAAtB,CAAL,EAAoC;AAChC,aAAO,KAAK7G,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACoK,kBAA7B,EAAiD,CAACvK,SAAS,CAACqK,MAAX,EAAmBrK,SAAS,CAACkG,SAA7B,CAAjD,CAAP;AACH;;AACD,WAAO,KAAK1C,MAAL,CAAYf,IAAZ,CAAP;AACH,GA1BD;;AA2BAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB4G,UAAjB,GAA8B,UAAUrF,IAAV,EAAgByH,gBAAhB,EAAkC;AAC5D,QAAI,CAACzH,IAAI,CAAC+H,eAAL,CAAqB,KAAKP,kBAAL,CAAwBC,gBAAxB,CAArB,CAAL,EAAsE;AAClE,aAAO,KAAK1G,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACsK,iBAA7B,EAAgD,CAACzK,SAAS,CAACqK,MAAX,EAAmBrK,SAAS,CAACkG,SAA7B,CAAhD,CAAP;AACH;;AACD,WAAO,KAAK1C,MAAL,CAAYf,IAAZ,CAAP;AACH,GALD;;AAMAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBqG,cAAjB,GAAkC,UAAUd,QAAV,EAAoB;AAClD,QAAIhE,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACwK,QAAlB,CAAX;AACA,QAAIC,UAAU,GAAG,KAAjB;;AACA,QAAIlE,QAAJ,EAAc;AACV;AACAkE,MAAAA,UAAU,GAAGlI,IAAI,CAACkD,QAAL,CAAc,KAAKiF,gBAAL,EAAd,CAAb;AACH;;AACD,WAAOnI,IAAI,CAACkD,QAAL,CAAc,KAAKkF,oBAAL,EAAd,CAAP,EAAmD;AAC/CF,MAAAA,UAAU,GAAG,IAAb;AACAlI,MAAAA,IAAI,CAACkD,QAAL,CAAc,KAAKiF,gBAAL,EAAd,EAF+C,CAEP;AAC3C;;AACD,WAAOD,UAAU,GAAG,KAAKnH,MAAL,CAAYf,IAAZ,CAAH,GAAuB,IAAxC;AACH,GAZD;;AAaAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBgH,iBAAjB,GAAqC,UAAUpE,gBAAV,EAA4B;AAC7D,QAAIrB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC6J,WAAlB,CAAX;;AACA,QAAI,CAACtH,IAAI,CAACqI,WAAL,CAAiB,KAAKC,cAAL,EAAjB,CAAL,EAA8C;AAC1C,aAAO,IAAP;AACH;;AACD,QAAI,CAAC,KAAKhI,MAAL,CAAY/C,SAAS,CAACgL,KAAtB,CAAL,EAAmC;AAC/B,UAAIC,UAAU,GAAGnH,gBAAgB,GAAG1E,cAAc,CAAC0E,gBAAD,EAAmB,CAAC9D,SAAS,CAACkG,SAAX,CAAnB,CAAjB,GAA6D,CAAClG,SAAS,CAACkG,SAAX,CAA9F;AACA,aAAO,KAAK1C,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC+K,aAA7B,EAA4C,CAAClL,SAAS,CAACgL,KAAX,CAA5C,EAA+DC,UAA/D,CAAP;AACH;;AACD,QAAI,KAAKjK,SAAT,EAAoB;AAChByB,MAAAA,IAAI,CAAC0I,aAAL,GAAqB,KAAKnK,SAAL,CAAeH,MAApC;AACH;;AACD,QAAI,CAAC4B,IAAI,CAAC2I,QAAL,CAAc,KAAKC,UAAL,EAAd,CAAL,EAAuC;AACnC,aAAO,KAAK7H,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACmL,qBAA7B,CAAP;AACH;;AACD7I,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK4F,UAAL,EAAd;;AACA,QAAI,KAAK7J,IAAL,CAAU1B,SAAS,CAACkG,SAApB,CAAJ,EAAoC;AAChCzD,MAAAA,IAAI,CAAC6H,iBAAL,GAAyB,KAAK5J,KAAL,CAAWG,MAApC,CADgC,CACY;AAC/C;;AACD,WAAO,KAAK2C,MAAL,CAAYf,IAAZ,CAAP;AACH,GApBD;;AAqBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB+G,kCAAjB,GAAsD,YAAY;AAC9D,QAAI,CAAC,KAAKtG,UAAL,CAAgB3B,SAAS,CAACoB,KAA1B,EAAiC,KAAjC,CAAL,EAA8C;AAC1C,aAAO,IAAP;AACH;;AACD,QAAIqB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACwJ,yBAAlB,CAAX;;AACA,QAAI,CAACjH,IAAI,CAACqI,WAAL,CAAiB,KAAKC,cAAL,EAAjB,CAAL,EAA8C;AAC1C,aAAO,IAAP;AACH;;AACD,QAAI,CAAC,KAAKhI,MAAL,CAAY/C,SAAS,CAACgL,KAAtB,CAAL,EAAmC;AAC/B,aAAO,KAAKxH,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC+K,aAA7B,EAA4C,CAAClL,SAAS,CAACgL,KAAX,CAA5C,CAAP;AACH;;AACD,QAAI,KAAKhK,SAAT,EAAoB;AAChByB,MAAAA,IAAI,CAAC0I,aAAL,GAAqB,KAAKnK,SAAL,CAAeH,MAApC;AACH;;AACD,QAAIoB,IAAI,GAAG,KAAKA,IAAL,EAAX;;AACA,QAAI,KAAKP,IAAL,CAAU1B,SAAS,CAACyH,MAApB,CAAJ,EAAiC;AAC7B;AACA,UAAI+D,WAAW,GAAG,KAAKtH,MAAL,CAAYhE,KAAK,CAACuL,iBAAlB,CAAlB;;AACA,UAAIC,YAAY,GAAG,KAAKzB,kBAAL,CAAwB,KAAKlC,wBAAL,CAA8BtC,IAA9B,CAAmC,IAAnC,CAAxB,CAAnB;;AACA,UAAI+F,WAAW,CAAChB,eAAZ,CAA4BkB,YAA5B,KAA6C,CAACA,YAAY,CAACC,WAAb,CAAyB,IAAzB,CAAlD,EAAkF;AAC9EH,QAAAA,WAAW,CAAC7F,QAAZ,CAAqB,KAAK4F,UAAL,EAArB;;AACA,YAAI,KAAK7J,IAAL,CAAU1B,SAAS,CAACkG,SAApB,CAAJ,EAAoC;AAChC,eAAK1C,MAAL,CAAYgI,WAAZ;AACA/I,UAAAA,IAAI,CAACmJ,cAAL,CAAoBJ,WAApB;AACA/I,UAAAA,IAAI,CAAC6H,iBAAL,GAAyB,KAAK5J,KAAL,CAAWG,MAApC,CAHgC,CAGY;;AAC5C,iBAAO,KAAK2C,MAAL,CAAYf,IAAZ,CAAP;AACH;AACJ;;AACD,WAAKJ,aAAL,CAAmBJ,IAAnB;AACH,KA7B6D,CA8B9D;;;AACA,QAAI4J,UAAU,GAAG,KAAKR,UAAL,EAAjB;;AACA,QAAIQ,UAAU,IAAI,CAACA,UAAU,CAACF,WAAX,CAAuB,IAAvB,CAAnB,EAAiD;AAC7C,WAAKJ,UAAL;;AACA,UAAI,KAAK7J,IAAL,CAAU1B,SAAS,CAACkG,SAApB,CAAJ,EAAoC;AAChCzD,QAAAA,IAAI,CAAC2I,QAAL,CAAcS,UAAd;AACApJ,QAAAA,IAAI,CAAC6H,iBAAL,GAAyB,KAAK5J,KAAL,CAAWG,MAApC,CAFgC,CAEY;;AAC5C,eAAO,KAAK2C,MAAL,CAAYf,IAAZ,CAAP;AACH;AACJ;;AACD,SAAKJ,aAAL,CAAmBJ,IAAnB;AACAQ,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAKmG,yBAAL,EAAd;AACArJ,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK4F,UAAL,EAAd;;AACA,QAAIlL,SAAS,CAACoC,IAAI,CAAC0I,aAAN,CAAT,IAAiC,KAAKzK,KAAL,CAAWG,MAAX,KAAsB4B,IAAI,CAAC0I,aAAL,GAAqB,CAAhF,EAAmF;AAC/E,aAAO,KAAK3H,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACmL,qBAA7B,CAAP;AACH;;AACD,WAAO,KAAK9H,MAAL,CAAYf,IAAZ,CAAP;AACH,GA/CD;AAgDA;;;;;;;;;;;;;AAWAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB4K,yBAAjB,GAA6C,YAAY;AACrD,QAAIrJ,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;;AACA,QAAI8H,UAAU,GAAG,YAAY;AAAE,aAAOC,UAAU,KAAK,CAAf,IAAoBC,WAAW,KAAK,CAApC,IAAyCC,aAAa,KAAK,CAAlE;AAAsE,KAArG;;AACA,QAAIF,UAAU,GAAG,CAAjB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,aAAa,GAAG,CAApB;;AACAC,IAAAA,IAAI,EAAE,OAAO,IAAP,EAAa;AACf,cAAQ,KAAKzL,KAAL,CAAWC,IAAnB;AACI,aAAKX,SAAS,CAACkG,SAAf;AACI;AACA,cAAI6F,UAAU,EAAd,EAAkB;AACd,kBAAMI,IAAN;AACH;;AACD;;AACJ,aAAKnM,SAAS,CAACoM,WAAf;AACI;AACA,cAAIL,UAAU,EAAd,EAAkB;AACd,kBAAMI,IAAN;AACH;;AACD;;AACJ,aAAKnM,SAAS,CAACyH,MAAf;AACIuE,UAAAA,UAAU;AACV;;AACJ,aAAKhM,SAAS,CAACqK,MAAf;AACI2B,UAAAA,UAAU;;AACV,cAAIA,UAAU,GAAG,CAAjB,EAAoB;AAChB;AACA;AACA,gBAAIC,WAAW,KAAK,CAAhB,IAAqBC,aAAa,KAAK,CAA3C,EAA8C;AAC1C,oBAAMC,IAAN;AACH;;AACD,mBAAO,KAAK3I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACsK,iBAA7B,CAAP;AACH;;AACD;;AACJ,aAAKzK,SAAS,CAACqM,YAAf;AACIJ,UAAAA,WAAW;AACX;;AACJ,aAAKjM,SAAS,CAACsM,YAAf;AACIL,UAAAA,WAAW;;AACX,cAAIA,WAAW,GAAG,CAAlB,EAAqB;AACjB,mBAAO,KAAKzI,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACoM,uBAA7B,CAAP;AACH;;AACD;;AACJ,aAAKvM,SAAS,CAACwM,QAAf;AACIN,UAAAA,aAAa;AACb;;AACJ,aAAKlM,SAAS,CAACyM,QAAf;AACIP,UAAAA,aAAa;;AACb,cAAIA,aAAa,GAAG,CAApB,EAAuB;AACnB,mBAAO,KAAK1I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACuM,yBAA7B,CAAP;AACH;;AACD;;AACJ,aAAK1M,SAAS,CAAC2M,SAAf;AAA0B;AACtB,gBAAMR,IAAN;;AACJ,aAAKnM,SAAS,CAACY,GAAf;AACI;AACA;AACA,cAAIwD,KAAK,GAAGjE,UAAU,CAACoK,kBAAvB;;AACA,cAAI2B,aAAa,GAAG,CAApB,EAAuB;AACnB9H,YAAAA,KAAK,GAAGjE,UAAU,CAACyM,0BAAnB;AACH,WAFD,MAGK,IAAIX,WAAW,GAAG,CAAlB,EAAqB;AACtB7H,YAAAA,KAAK,GAAGjE,UAAU,CAAC0M,wBAAnB;AACH;;AACD,iBAAO,KAAKrJ,MAAL,CAAYf,IAAZ,EAAkB2B,KAAlB,CAAP;AAzDR;;AA2DA,WAAKrC,YAAL;AACH;;AACD,WAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,GArED;;AAsEAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB4L,sBAAjB,GAA0C,YAAY;AAClD,QAAI7K,IAAI,GAAG,KAAKA,IAAL,EAAX;;AACA,QAAI,KAAK8I,cAAL,MAAyB,KAAKhI,MAAL,CAAY/C,SAAS,CAACgL,KAAtB,CAA7B,EAA2D;AACvD;AACA,WAAK3I,aAAL,CAAmBJ,IAAnB;AACA,aAAO,KAAKiG,iBAAL,EAAP;AACH;;AACD,SAAK7F,aAAL,CAAmBJ,IAAnB;AACA,WAAO,IAAP;AACH,GATD;;AAUA3B,EAAAA,MAAM,CAACY,SAAP,CAAiB6J,cAAjB,GAAkC,YAAY;AAC1C,QAAItI,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC6M,QAAlB,CAAX;AACA,QAAI9K,IAAI,GAAG,KAAKA,IAAL,EAAX;;AACA,QAAI,KAAKiB,WAAL,CAAiB,GAAjB,KAAyB,KAAKA,WAAL,CAAiB,GAAjB,CAA7B,EAAoD;AAChD;AACA,UAAI,KAAKpB,aAAL,EAAJ,EAA0B;AACtB,aAAKO,aAAL,CAAmBJ,IAAnB;AACA,eAAO,IAAP;AACH;AACJ;;AACD,QAAIQ,IAAI,CAAC2F,aAAL,CAAmB,KAAK4E,wBAAL,EAAnB,CAAJ,EAAyD;AACrD,aAAO,KAAKxJ,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GAdD;;AAeAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB8L,wBAAjB,GAA4C,YAAY;AACpD,WAAO,KAAK3E,WAAL,EAAP;AACH,GAFD;;AAGA/H,EAAAA,MAAM,CAACY,SAAP,CAAiBsF,aAAjB,GAAiC,YAAY;AACzC,QAAI,CAAC,KAAK9E,IAAL,CAAU1B,SAAS,CAACiN,OAApB,CAAL,EAAmC;AAC/B,aAAO,IAAP;AACH;;AACD,QAAIxK,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;AACA,SAAKlC,YAAL,GALyC,CAKpB;;AACrB,QAAI,CAAC,KAAKgB,MAAL,CAAY/C,SAAS,CAACkN,MAAtB,CAAL,EAAoC;AAChC,aAAO,KAAK1J,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,CAAP;AACH;;AACD,QAAI,CAAC,KAAKzF,MAAL,CAAY/C,SAAS,CAACkG,SAAtB,CAAL,EAAuC;AACnC,aAAO,KAAK1C,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACgG,iBAA7B,CAAP;AACH;;AACD,WAAO,KAAK3C,MAAL,CAAYf,IAAZ,CAAP;AACH,GAbD;;AAcAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB0F,YAAjB,GAAgC,YAAY;AACxC,QAAI,CAAC,KAAKtF,WAAL,CAAiB,SAAjB,CAAL,EAAkC;AAC9B,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACuJ,MAAlB,CAAX;AACA,SAAK1H,YAAL,GALwC,CAKnB;;AACrB,QAAI,CAACU,IAAI,CAACkD,QAAL,CAAc,KAAKwH,gBAAL,EAAd,CAAD,IAA2C,CAAC1K,IAAI,CAACkD,QAAL,CAAc,KAAKyH,mBAAL,EAAd,CAAhD,EAA2F;AACvF,aAAO,KAAK5J,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACkN,mBAA7B,CAAP;AACH;;AACD,QAAI,CAAC,KAAK3L,IAAL,CAAU1B,SAAS,CAACkG,SAApB,CAAD,IAAmC,CAAC,KAAKxE,IAAL,CAAU1B,SAAS,CAACY,GAApB,CAAxC,EAAkE;AAC9D6B,MAAAA,IAAI,CAAC6K,YAAL,CAAkB,KAAKC,oBAAL,EAAlB;AACH;;AACD,WAAO,KAAK/J,MAAL,CAAYf,IAAZ,CAAP;AACH,GAbD;;AAcAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBiG,eAAjB,GAAmC,YAAY;AAC3C;AACA;AACA,QAAI,CAAC,KAAK7F,WAAL,CAAiB,YAAjB,CAAL,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC2I,SAAlB,CAAX;AACA,SAAK9G,YAAL,GAP2C,CAOtB;;AACrB,QAAI,CAACU,IAAI,CAACkD,QAAL,CAAc,KAAKwH,gBAAL,EAAd,CAAL,EAA6C;AAAE;AAC3C1K,MAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,EADyC,CACN;;AACnC,UAAI,CAAC5F,IAAI,CAACkD,QAAL,CAAc,KAAKwH,gBAAL,EAAd,CAAD,IAA2C,CAAC1K,IAAI,CAACkD,QAAL,CAAc,KAAKyH,mBAAL,EAAd,CAAhD,EAA2F;AACvF,eAAO,KAAK5J,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqN,WAA7B,EAA0C,CAACxN,SAAS,CAACkG,SAAX,CAA1C,CAAP;AACH;AACJ;;AACD,QAAI,CAAC,KAAKnD,MAAL,CAAY/C,SAAS,CAACkG,SAAtB,CAAL,EAAuC;AACnC,aAAO,KAAK1C,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACgG,iBAA7B,CAAP;AACH;;AACD,WAAO,KAAK3C,MAAL,CAAYf,IAAZ,CAAP;AACH,GAlBD;;AAmBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB6F,cAAjB,GAAkC,YAAY;AAC1C,QAAI,CAAC,KAAKzF,WAAL,CAAiB,YAAjB,CAAL,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACuN,QAAlB,CAAX;AACA,SAAK1L,YAAL,GAL0C,CAKrB;;AACrB,WAAO,KAAK+F,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKsF,wBAAL,CAA8BtC,IAA9B,CAAmC,IAAnC,CAAtB,CAAP;AACH,GAPD;;AAQAnF,EAAAA,MAAM,CAACY,SAAP,CAAiBgG,cAAjB,GAAkC,YAAY;AAC1C,QAAI,CAAC,KAAK5F,WAAL,CAAiB,eAAjB,CAAD,IACA,CAAC,KAAKA,WAAL,CAAiB,cAAjB,CADD,IAEA,CAAC,KAAKA,WAAL,CAAiB,WAAjB,CAFL,EAEoC;AAChC,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACwI,QAAlB,CAAX;AACA,SAAK3G,YAAL,GAP0C,CAOrB;;AACrB,WAAO,KAAK+F,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKsF,wBAAL,CAA8BtC,IAA9B,CAAmC,IAAnC,CAAtB,CAAP;AACH,GATD;;AAUAnF,EAAAA,MAAM,CAACY,SAAP,CAAiB8F,cAAjB,GAAkC,YAAY;AAC1C,QAAI,CAAC,KAAKrF,UAAL,CAAgB3B,SAAS,CAACuB,SAA1B,EAAqC,KAAKf,aAA1C,CAAL,EAA+D;AAC3D,aAAO,IAAP;AACH;;AACD,QAAIiC,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACuI,QAAlB,CAAX;AACA,QAAIiF,MAAM,GAAG,KAAKxJ,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAb;AACA,SAAKlC,YAAL,GAN0C,CAMrB;;AACrBU,IAAAA,IAAI,CAACkL,UAAL,CAAgB,KAAKnK,MAAL,CAAYkK,MAAZ,CAAhB;;AACA,QAAIA,MAAM,CAACE,OAAP,CAAe,gBAAf,CAAJ,EAAsC;AAAE;AACpC,WAAKtJ,SAAL,CAAeoJ,MAAf,EAAuBvN,UAAU,CAAC0N,cAAlC;AACH;;AACD,QAAI,CAACpL,IAAI,CAAC2F,aAAL,CAAmB,KAAK0F,mBAAL,EAAnB,CAAL,EAAqD;AACjD,aAAO,KAAKtK,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,EAAiD,CAACxI,SAAS,CAACqK,MAAX,CAAjD,CAAP;AACH;;AACD,WAAO,KAAKvC,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKsL,sBAAL,CAA4BtI,IAA5B,CAAiC,IAAjC,CAAtB,CAAP;AACH,GAfD;;AAgBAnF,EAAAA,MAAM,CAACY,SAAP,CAAiB4M,mBAAjB,GAAuC,YAAY;AAC/C,WAAO,KAAKzF,WAAL,CAAiB,CAACnI,KAAK,CAACoI,aAAN,CAAoBG,QAArB,CAAjB,CAAP;AACH,GAFD;;AAGAnI,EAAAA,MAAM,CAACY,SAAP,CAAiB6M,sBAAjB,GAA0C,YAAY;AAClD,QAAItL,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC8N,gBAAlB,CAAX;;AACA,QAAI,CAACvL,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAD,IAAsC,CAAC,KAAKtF,MAAL,CAAY/C,SAAS,CAACiO,UAAtB,CAA3C,EAA8E;AAC1E,aAAO,IAAP;AACH;;AACD,WAAO,KAAKlL,MAAL,CAAY/C,SAAS,CAACwH,KAAtB,CAAP,EAAqC;AACjC,UAAI,CAAC/E,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAD,IAAsC,CAAC,KAAKtF,MAAL,CAAY/C,SAAS,CAACiO,UAAtB,CAA3C,EAA8E;AAC1E,eAAO,KAAKzK,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC+N,kBAA7B,CAAP;AACH;AACJ;;AACD,WAAO,KAAKpG,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKsF,wBAAL,CAA8BtC,IAA9B,CAAmC,IAAnC,CAAtB,CAAP;AACH,GAXD;;AAYAnF,EAAAA,MAAM,CAACY,SAAP,CAAiBiN,yBAAjB,GAA6C,YAAY;AACrD,QAAI1L,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC8N,gBAAlB,CAAX;AACA,QAAI5L,GAAG,GAAG,KAAKH,IAAL,EAAV;;AACA,QAAI,CAACQ,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAD,IAAsC,CAAC,KAAKtF,MAAL,CAAY/C,SAAS,CAACiO,UAAtB,CAA3C,EAA8E;AAC1E,aAAO,IAAP;AACH;;AACD,WAAO,KAAKlL,MAAL,CAAY/C,SAAS,CAACwH,KAAtB,CAAP,EAAqC;AACjC,UAAI,CAAC/E,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAD,IAAsC,CAAC,KAAKtF,MAAL,CAAY/C,SAAS,CAACiO,UAAtB,CAA3C,EAA8E;AAC1E,aAAK5L,aAAL,CAAmBD,GAAnB;AACA,eAAO,IAAP;AACH;AACJ;;AACD,QAAI,CAAC,KAAKV,IAAL,CAAU1B,SAAS,CAACyH,MAApB,CAAL,EAAkC;AAC9B,WAAKpF,aAAL,CAAmBD,GAAnB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAK0F,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKsF,wBAAL,CAA8BtC,IAA9B,CAAmC,IAAnC,CAAtB,CAAP;AACH,GAjBD;;AAkBAnF,EAAAA,MAAM,CAACY,SAAP,CAAiB+F,cAAjB,GAAkC,UAAUR,QAAV,EAAoB;AAClD,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,KAAX;AAAmB,KADI,CAElD;;;AACA,QAAI,CAAC,KAAKnF,WAAL,CAAiB,WAAjB,CAAL,EAAoC;AAChC,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACkO,QAAlB,CAAX;AACA,SAAKrM,YAAL,GAPkD,CAO7B;;AACrBU,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK0I,uBAAL,EAAd;AACA,WAAO,KAAKvG,UAAL,CAAgBrF,IAAhB,EAAsB,KAAK6L,yBAAL,CAA+B7I,IAA/B,CAAoC,IAApC,EAA0CgB,QAA1C,CAAtB,CAAP;AACH,GAVD;;AAWAnG,EAAAA,MAAM,CAACY,SAAP,CAAiBoN,yBAAjB,GAA6C,UAAU7H,QAAV,EAAoB;AAC7D,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,KAAX;AAAmB;;AAC9C,QAAIA,QAAJ,EAAc;AACV;AACA,aAAO,KAAKa,gBAAL,CAAsB,IAAtB,KACA,KAAKwF,sBAAL,EADA,IAEA,KAAK9G,yBAAL,CAA+B,IAA/B,CAFP;AAGH;;AACD,WAAO,KAAKA,yBAAL,CAA+B,KAA/B,CAAP;AACH,GATD;;AAUA1F,EAAAA,MAAM,CAACY,SAAP,CAAiBmN,uBAAjB,GAA2C,YAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI5L,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACqO,iBAAlB,CAAX;;AACA,QAAI,KAAKvL,WAAL,CAAiB,KAAjB,CAAJ,EAA6B;AACzBP,MAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK6I,+BAAL,EAAd;AACH,KAFD,MAGK;AACD/L,MAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK6I,+BAAL,EAAd;;AACA,UAAI,KAAK7M,UAAL,CAAgB3B,SAAS,CAACoB,KAA1B,EAAiC,aAAjC,CAAJ,EAAqD;AACjD,YAAIL,IAAI,GAAG,KAAKL,KAAL,CAAWK,IAAX,CAAgBM,WAAhB,EAAX;;AACA,eAAO,KAAK2B,WAAL,CAAiBjC,IAAjB,CAAP,EAA+B;AAC3B0B,UAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK6I,+BAAL,EAAd;AACH;AACJ;AACJ;;AACD,WAAO,KAAKhL,MAAL,CAAYf,IAAZ,CAAP;AACH,GAtBD;;AAuBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBsN,+BAAjB,GAAmD,YAAY;AAC3D,QAAI/L,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACqO,iBAAlB,CAAX;;AACA,QAAI,KAAKxL,MAAL,CAAY/C,SAAS,CAACqM,YAAtB,CAAJ,EAAyC;AACrC,UAAI,KAAKrL,SAAT,EAAoB;AAChByB,QAAAA,IAAI,CAACgM,OAAL,GAAe,KAAKzN,SAAL,CAAeH,MAA9B;AACH;;AACD,UAAI,CAAC4B,IAAI,CAACkD,QAAL,CAAc,KAAKmH,sBAAL,EAAd,CAAL,EAAmD;AAC/C,YAAI,CAAC,KAAKuB,uBAAL,EAAL,EAAqC;AACjC,iBAAO,KAAK7K,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACuO,iBAA7B,CAAP;AACH;AACJ;;AACD,UAAI,CAAC,KAAK3L,MAAL,CAAY/C,SAAS,CAACsM,YAAtB,CAAL,EAA0C;AACtC,eAAO,KAAK9I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0M,wBAA7B,EAAuD,CAAC7M,SAAS,CAACsM,YAAX,CAAvD,EAAiF,EAAjF,CAAP;AACH;;AACD,UAAI,KAAKtL,SAAT,EAAoB;AAChByB,QAAAA,IAAI,CAACkM,OAAL,GAAe,KAAK3N,SAAL,CAAeH,MAA9B;AACH;;AACD,aAAO,KAAK2C,MAAL,CAAYf,IAAZ,CAAP;AACH,KAhBD,MAiBK,IAAI,KAAKf,IAAL,CAAU1B,SAAS,CAACoB,KAApB,CAAJ,EAAgC;AACjC,UAAIgB,GAAG,GAAG,KAAKH,IAAL,EAAV;AACA,WAAKF,YAAL;;AACA,UAAI,CAAC,KAAKD,aAAL,EAAD,IAAyB,KAAKiB,MAAL,CAAY/C,SAAS,CAACqM,YAAtB,CAA7B,EAAkE;AAC9D,YAAIuC,eAAe,GAAG,CAAtB;;AACA,eAAO,KAAKlO,KAAL,CAAWC,IAAX,KAAoBX,SAAS,CAACY,GAA9B,IAAqCgO,eAAe,KAAK,CAAhE,EAAmE;AAC/D,cAAI,KAAKlO,KAAL,CAAWC,IAAX,KAAoBX,SAAS,CAACqM,YAAlC,EAAgD;AAC5CuC,YAAAA,eAAe;AAClB,WAFD,MAGK,IAAI,KAAKlO,KAAL,CAAWC,IAAX,KAAoBX,SAAS,CAACsM,YAAlC,EAAgD;AACjDsC,YAAAA,eAAe;AAClB;;AACD,eAAK7M,YAAL;AACH;;AACD,eAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,OAZD,MAaK;AACD,aAAKJ,aAAL,CAAmBD,GAAnB;AACH;AACJ;;AACD,WAAO,KAAKoB,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACoM,uBAA7B,EAAsD,EAAtD,EAA0D,CAACvM,SAAS,CAACqM,YAAX,CAA1D,CAAP;AACH,GAxCD;;AAyCA/L,EAAAA,MAAM,CAACY,SAAP,CAAiB2N,sBAAjB,GAA0C,UAAUpI,QAAV,EAAoB;AAC1D,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,KAAX;AAAmB;;AAC9C,QAAIA,QAAJ,EAAc;AACV;AACA,aAAO,KAAKa,gBAAL,CAAsB,IAAtB,KACA,KAAKwF,sBAAL,EADA,IAEA,KAAK9G,yBAAL,CAA+B,IAA/B,CAFP;AAGH;;AACD,WAAO,KAAKA,yBAAL,CAA+B,KAA/B,CAAP;AACH,GATD;;AAUA1F,EAAAA,MAAM,CAACY,SAAP,CAAiB2F,WAAjB,GAA+B,UAAUJ,QAAV,EAAoB;AAC/C,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,KAAX;AAAmB,KADC,CAE/C;AACA;;;AACA,QAAI,CAAC,KAAKnF,WAAL,CAAiB,QAAjB,CAAL,EAAiC;AAC7B,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACyI,KAAlB,CAAX;AACA,SAAK5G,YAAL,GAR+C,CAQ1B;;AACrB,QAAI,CAACU,IAAI,CAACkD,QAAL,CAAc,KAAK4H,oBAAL,EAAd,CAAL,EAAiD;AAC7C,aAAO,KAAK/J,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC2O,kBAA7B,CAAP;AACH;;AACD,WAAO,KAAKhH,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKoM,sBAAL,CAA4BpJ,IAA5B,CAAiC,IAAjC,EAAuCgB,QAAvC,CAAtB,CAAP;AACH,GAbD;;AAcAnG,EAAAA,MAAM,CAACY,SAAP,CAAiBqM,oBAAjB,GAAwC,YAAY;AAChD,QAAI9K,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC6O,SAAlB,CAAX;;AACA,QAAI,CAACtM,IAAI,CAACkD,QAAL,CAAc,KAAKqJ,gBAAL,CAAsB,CAAChP,SAAS,CAACyH,MAAX,CAAtB,CAAd,CAAL,EAA+D;AAC3D,aAAO,KAAKjE,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC2O,kBAA7B,CAAP;AACH;;AACD,WAAO,KAAK/L,MAAL,CAAY/C,SAAS,CAACwH,KAAtB,CAAP,EAAqC;AACjC,UAAI,CAAC/E,IAAI,CAACkD,QAAL,CAAc,KAAKqJ,gBAAL,CAAsB,CAAChP,SAAS,CAACyH,MAAX,CAAtB,CAAd,CAAL,EAA+D;AAC3D,eAAO,KAAKjE,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC2O,kBAA7B,CAAP;AACH;AACJ;;AACD,WAAO,KAAKtL,MAAL,CAAYf,IAAZ,CAAP;AACH,GAXD;;AAYAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB8N,gBAAjB,GAAoC,UAAUC,eAAV,EAA2B;AAC3D;AACA;AACA;AACA,QAAIxM,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACqJ,UAAlB,CAAX;AACA,QAAI2F,eAAe,GAAG,IAAtB;AACA,QAAIvE,UAAU,GAAG,KAAjB;;AACA,QAAI,CAAC,KAAKjJ,IAAL,CAAU1B,SAAS,CAACqM,YAApB,CAAL,EAAwC;AACpC,UAAI,KAAKrJ,WAAL,CAAiB,MAAjB,KAA4B,KAAKA,WAAL,CAAiB,KAAjB,CAAhC,EAAyD,CACrD;AACH;;AACD,UAAI,CAACP,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAL,EAAwC;AACpC,eAAO,IAAP;AACH;;AACDsC,MAAAA,UAAU,GAAG,IAAb;AACAuE,MAAAA,eAAe,GAAG,KAAKlM,WAAL,CAAiB,KAAjB,CAAlB;AACH;;AACD,WAAOkM,eAAP,EAAwB;AACpB;AACA,UAAIzM,IAAI,CAACkD,QAAL,CAAc,KAAKwJ,uBAAL,EAAd,CAAJ,EAAmD;AAC/CD,QAAAA,eAAe,GAAG,KAAKlM,WAAL,CAAiB,KAAjB,CAAlB;AACA;AACH;;AACD,UAAI,CAAC,KAAKD,MAAL,CAAY/C,SAAS,CAACqM,YAAtB,CAAL,EAA0C;AACtC,YAAI1B,UAAJ,EAAgB;AACZ,iBAAO,KAAKnH,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACoM,uBAA7B,EAAsD,EAAtD,EAA0D0C,eAA1D,CAAP;AACH;;AACD,eAAO,IAAP;AACH;;AACD,UAAI,CAACxM,IAAI,CAACkD,QAAL,CAAc,KAAKyJ,sBAAL,EAAd,CAAL,EAAmD;AAC/C,eAAO,KAAK5L,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,EAAiD,EAAjD,EAAqDyG,eAArD,CAAP;AACH;;AACD,UAAI,KAAKlM,MAAL,CAAY/C,SAAS,CAACgL,KAAtB,CAAJ,EAAkC;AAC9B,YAAI,CAACvI,IAAI,CAACkD,QAAL,CAAc,KAAK0F,UAAL,EAAd,CAAL,EAAuC;AACnC,iBAAO,KAAK7H,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACkP,YAA7B,EAA2C,EAA3C,EAA+CJ,eAA/C,CAAP;AACH;AACJ;;AACD,UAAI,CAAC,KAAKlM,MAAL,CAAY/C,SAAS,CAACsM,YAAtB,CAAL,EAA0C;AACtC,eAAO,KAAK9I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0M,wBAA7B,EAAuD,EAAvD,EAA2DoC,eAA3D,CAAP;AACH;;AACDC,MAAAA,eAAe,GAAG,KAAKlM,WAAL,CAAiB,KAAjB,CAAlB;AACH;;AACD,WAAO,KAAKQ,MAAL,CAAYf,IAAZ,CAAP;AACH,GA3CD;;AA4CAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBiO,uBAAjB,GAA2C,YAAY;AACnD,WAAO,IAAP;AACH,GAFD;;AAGA7O,EAAAA,MAAM,CAACY,SAAP,CAAiBkO,sBAAjB,GAA0C,YAAY;AAClD,WAAO,KAAK/G,WAAL,EAAP;AACH,GAFD;;AAGA/H,EAAAA,MAAM,CAACY,SAAP,CAAiBoO,YAAjB,GAAgC,YAAY;AACxC,QAAI7M,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;;AACA,QAAIxB,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAJ,EAAuC;AACnC,aAAO,KAAK7E,MAAL,CAAYf,IAAZ,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ,GARD;;AASAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBqO,qBAAjB,GAAyC,YAAY;AACjD,WAAO,KAAKC,mBAAL,MAA8B,KAAKzH,wBAAL,EAArC;AACH,GAFD;;AAGAzH,EAAAA,MAAM,CAACY,SAAP,CAAiB4F,UAAjB,GAA8B,YAAY;AACtC;AACA;AACA;AACA,QAAI,CAAC,KAAKxF,WAAL,CAAiB,OAAjB,CAAL,EAAgC;AAC5B,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACuP,IAAlB,CAAX;AACA,SAAK1N,YAAL;;AACA,QAAIU,IAAI,CAACkD,QAAL,CAAc,KAAK+J,kBAAL,EAAd,CAAJ,EAA8C;AAC1C,aAAO,KAAK3M,MAAL,CAAY/C,SAAS,CAACwH,KAAtB,CAAP,EAAqC;AACjC,YAAI,CAAC/E,IAAI,CAACkD,QAAL,CAAc,KAAK+J,kBAAL,EAAd,CAAL,EAA+C;AAC3C,iBAAO,KAAKlM,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,CAAP;AACH;AACJ;AACJ;;AACD,WAAO,KAAKV,UAAL,CAAgBrF,IAAhB,EAAsB,KAAK8M,qBAAL,CAA2B9J,IAA3B,CAAgC,IAAhC,CAAtB,CAAP;AACH,GAjBD;;AAkBAnF,EAAAA,MAAM,CAACY,SAAP,CAAiBsO,mBAAjB,GAAuC,YAAY;AAC/C;AACA,QAAI,CAAC,KAAK9N,IAAL,CAAU1B,SAAS,CAACuB,SAApB,CAAL,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,QAAIkB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACyP,gBAAlB,CAAX;;AACA,QAAI,CAAC,KAAKjN,gBAAL,CAAsBtC,aAAa,CAACwP,iBAApC,CAAL,EAA6D;AACzD,WAAKtL,SAAL,CAAe7B,IAAf,EAAqBtC,UAAU,CAACmG,aAAhC,EAA+C,EAA/C,EAAmD,CAACtG,SAAS,CAACyH,MAAX,CAAnD;AACH;;AACD,WAAO,KAAKK,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKsF,wBAAL,CAA8BtC,IAA9B,CAAmC,IAAnC,CAAtB,CAAP;AACH,GAVD;;AAWAnF,EAAAA,MAAM,CAACY,SAAP,CAAiBwO,kBAAjB,GAAsC,YAAY;AAC9C;AACA;AACA,QAAI,CAAC,KAAKhO,IAAL,CAAU1B,SAAS,CAACoB,KAApB,CAAD,IAA+B,CAAC,KAAKM,IAAL,CAAU1B,SAAS,CAACgL,KAApB,CAApC,EAAgE;AAC5D,aAAO,IAAP;AACH;;AACD,QAAIvI,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;AACAxB,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,EAP8C,CAOX;;AACnC,QAAI,KAAKtF,MAAL,CAAY/C,SAAS,CAACgL,KAAtB,CAAJ,EAAkC;AAC9B,UAAI,CAACvI,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAL,EAAwC;AAAE;AACtC,eAAO,KAAK7E,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,CAAP;AACH;AACJ;;AACD,WAAO,KAAKhF,MAAL,CAAYf,IAAZ,CAAP;AACH,GAdD;;AAeAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBkG,cAAjB,GAAkC,YAAY;AAC1C;AACA,QAAI,CAAC,KAAK9F,WAAL,CAAiB,gBAAjB,CAAL,EAAyC;AACrC,aAAO,IAAP;AACH;;AACD,QAAImB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC2P,QAAlB,CAAX;AACA,SAAK9N,YAAL,GAN0C,CAMrB;;AACrB,SAAK6B,MAAL,CAAY,EAAZ,EAAgB,CAAC5D,SAAS,CAACyH,MAAX,CAAhB,EAP0C,CAOL;;AACrC,WAAO,KAAKK,UAAL,CAAgBrF,IAAhB,EAAsB,KAAKuD,yBAAL,CAA+BP,IAA/B,CAAoC,IAApC,CAAtB,CAAP;AACH,GATD,CAx4BoC,CAk5BpC;;;AACAnF,EAAAA,MAAM,CAACY,SAAP,CAAiBmG,mBAAjB,GAAuC,YAAY;AAC/C,QAAI,CAAC,KAAK3F,IAAL,CAAU1B,SAAS,CAACuB,SAApB,CAAL,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,QAAIkB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACoG,aAAlB,CAAX;AACA7D,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAKmK,uBAAL,EAAd;;AACA,QAAI/D,UAAU,GAAG,YAAY;AAAE,aAAOC,UAAU,KAAK,CAAf,IAAoBC,WAAW,KAAK,CAApC,IAAyCC,aAAa,KAAK,CAAlE;AAAsE,KAArG;;AACA,QAAI6D,WAAW,GAAG,CAAlB;AACA,QAAI/D,UAAU,GAAG,CAAjB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,aAAa,GAAG,CAApB;;AACAC,IAAAA,IAAI,EAAE,OAAO,IAAP,EAAa;AACf,cAAQ,KAAKzL,KAAL,CAAWC,IAAnB;AACI,aAAKX,SAAS,CAACkG,SAAf;AACI,cAAI6F,UAAU,EAAd,EAAkB;AACd,kBAAMI,IAAN;AACH;;AACD;;AACJ,aAAKnM,SAAS,CAACY,GAAf;AACI,cAAIoL,UAAU,GAAG,CAAjB,EAAoB;AAChB,mBAAO,KAAKxI,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACoK,kBAA7B,CAAP;AACH,WAFD,MAGK,IAAI2B,aAAa,GAAG,CAApB,EAAuB;AACxB,mBAAO,KAAK1I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACyM,0BAA7B,CAAP;AACH,WAFI,MAGA,IAAIX,WAAW,GAAG,CAAlB,EAAqB;AACtB,mBAAO,KAAKzI,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0M,wBAA7B,CAAP;AACH,WAFI,MAGA;AACD,mBAAO,KAAKrJ,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACL,aAAKzC,SAAS,CAACyH,MAAf;AACIsI,UAAAA,WAAW;AACX/D,UAAAA,UAAU;AACV;;AACJ,aAAKhM,SAAS,CAACqK,MAAf;AACI2B,UAAAA,UAAU,GADd,CAEI;;AACA,cAAI+D,WAAW,GAAG,CAAd,IAAmB/D,UAAU,KAAK,CAAtC,EAAyC;AACrC,iBAAKjK,YAAL;;AACA,gBAAImK,aAAa,GAAG,CAApB,EAAuB;AACnB,qBAAO,KAAK1I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACyM,0BAA7B,CAAP;AACH,aAFD,MAGK,IAAIX,WAAW,GAAG,CAAlB,EAAqB;AACtB,qBAAO,KAAKzI,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0M,wBAA7B,CAAP;AACH;;AACD,kBAAMV,IAAN;AACH;;AACD,cAAIH,UAAU,GAAG,CAAjB,EAAoB;AAChB;AACA;AACA,gBAAIC,WAAW,KAAK,CAAhB,IAAqBC,aAAa,KAAK,CAA3C,EAA8C;AAC1C,oBAAMC,IAAN;AACH;;AACD,mBAAO,KAAK3I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACsK,iBAA7B,CAAP;AACH;;AACD;;AACJ,aAAKzK,SAAS,CAACqM,YAAf;AACIJ,UAAAA,WAAW;AACX;;AACJ,aAAKjM,SAAS,CAACsM,YAAf;AACIL,UAAAA,WAAW;;AACX,cAAIA,WAAW,GAAG,CAAlB,EAAqB;AACjB,mBAAO,KAAKzI,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACoM,uBAA7B,CAAP;AACH;;AACD;;AACJ,aAAKvM,SAAS,CAACwM,QAAf;AACIN,UAAAA,aAAa;AACb;;AACJ,aAAKlM,SAAS,CAACyM,QAAf;AACIP,UAAAA,aAAa;;AACb,cAAIA,aAAa,GAAG,CAApB,EAAuB;AACnB,mBAAO,KAAK1I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACuM,yBAA7B,CAAP;AACH;;AACD;AA9DR;;AAgEA,WAAK3K,YAAL;AACH;;AACD,WAAOU,IAAP;AACH,GA/ED;;AAgFAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB4O,uBAAjB,GAA2C,YAAY;AACnD,QAAIrN,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;;AACA,QAAI,KAAKlB,MAAL,CAAY/C,SAAS,CAACuB,SAAtB,CAAJ,EAAsC;AAClC,aAAO,KAAKiC,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GAND;;AAOAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB8O,cAAjB,GAAkC,YAAY;AAC1C;AACA,QAAI,KAAKxO,SAAL,CAAe,GAAf,KACA,KAAKA,SAAL,CAAe,GAAf,CADA,IAEA,KAAKA,SAAL,CAAe,GAAf,CAFA,IAGA,KAAKA,SAAL,CAAe,GAAf,CAHA,IAIA,KAAKE,IAAL,CAAU1B,SAAS,CAACiQ,SAApB,CAJA,IAKA,KAAKvO,IAAL,CAAU1B,SAAS,CAACkQ,QAApB,CALA,IAMA,KAAKxO,IAAL,CAAU1B,SAAS,CAACmQ,iBAApB,CANA,IAOA,KAAKzO,IAAL,CAAU1B,SAAS,CAACoQ,cAApB,CAPA,IAQA,KAAK1O,IAAL,CAAU1B,SAAS,CAACqQ,cAApB,CARA,IASA,KAAK7O,SAAL,CAAe,GAAf,CATJ,EASyB;AAAE;AACvB,UAAIiB,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAegN,QAA/B,CAAX;AACA,WAAKvO,YAAL;AACA,aAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,KAbD,MAcK;AACD,aAAO,IAAP;AACH;AACJ,GAnBD;;AAoBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBqP,mBAAjB,GAAuC,YAAY;AAC/C,QAAI,CAAC,KAAK/O,SAAL,CAAe,GAAf,CAAD,IAAwB,CAAC,KAAKA,SAAL,CAAe,GAAf,CAA7B,EAAkD;AAC9C,aAAO,IAAP;AACH;;AACD,QAAIiB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;AACA,SAAKlC,YAAL;AACA,WAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,GAPD;;AAQAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB0J,gBAAjB,GAAoC,YAAY;AAC5C,QAAI,KAAKpJ,SAAL,CAAe,GAAf,CAAJ,EAAyB;AACrB,UAAIiB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;AACA,WAAKlC,YAAL;AACA,UAAIE,IAAI,GAAG,KAAKA,IAAL,EAAX;;AACA,UAAI,CAAC,KAAKH,aAAL,EAAD,IAAyB,KAAKoB,WAAL,CAAiB,GAAjB,CAA7B,EAAoD;AAChD,YAAI,CAAC,KAAKpB,aAAL,EAAD,IAAyB,KAAKoB,WAAL,CAAiB,GAAjB,CAA7B,EAAoD;AAChDT,UAAAA,IAAI,CAAC9B,IAAL,GAAYT,KAAK,CAACoD,QAAN,CAAekN,0CAA3B;AACA,iBAAO,KAAKhN,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,aAAKJ,aAAL,CAAmBJ,IAAnB;AACH;;AACDQ,MAAAA,IAAI,CAAC9B,IAAL,GAAYT,KAAK,CAACoD,QAAN,CAAemN,wBAA3B;AACA,aAAO,KAAKjN,MAAL,CAAYf,IAAZ,CAAP;AACH,KAbD,MAcK,IAAI,KAAKjB,SAAL,CAAe,GAAf,CAAJ,EAAyB;AAC1B,UAAIiB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;AACA,WAAKlC,YAAL;AACAU,MAAAA,IAAI,CAAC9B,IAAL,GAAYT,KAAK,CAACoD,QAAN,CAAeoN,yBAA3B;AACA,aAAO,KAAKlN,MAAL,CAAYf,IAAZ,CAAP;AACH,KALI,MAMA,IAAI,KAAKjB,SAAL,CAAe,GAAf,CAAJ,EAAyB;AAC1B,UAAIiB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;AACA,WAAKlC,YAAL;AACAU,MAAAA,IAAI,CAAC9B,IAAL,GAAYT,KAAK,CAACoD,QAAN,CAAeqN,6BAA3B;AACA,aAAO,KAAKnN,MAAL,CAAYf,IAAZ,CAAP;AACH,KALI,MAMA,IAAI,KAAKjB,SAAL,CAAe,GAAf,CAAJ,EAAyB;AAC1B,UAAIiB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;AACA,WAAKlC,YAAL;AACA,UAAIE,IAAI,GAAG,KAAKA,IAAL,EAAX;;AACA,UAAI,CAAC,KAAKH,aAAL,EAAD,IAAyB,KAAKkB,WAAL,CAAiB,MAAjB,CAAzB,IAAqD,CAAC,KAAKlB,aAAL,EAAtD,IAA8E,KAAKoB,WAAL,CAAiB,GAAjB,CAAlF,EAAyG;AACrGT,QAAAA,IAAI,CAAC9B,IAAL,GAAYT,KAAK,CAACoD,QAAN,CAAekN,0CAA3B;AACA,eAAO,KAAKhN,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,WAAKJ,aAAL,CAAmBJ,IAAnB;AACH;;AACD,WAAO,IAAP;AACH,GAtCD;;AAuCA3B,EAAAA,MAAM,CAACY,SAAP,CAAiB2J,oBAAjB,GAAwC,YAAY;AAChD;AACA;AACA,QAAIpI,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC0Q,cAAlB,CAAX;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,QAAIpO,IAAI,CAACkD,QAAL,CAAc,KAAKmL,iBAAL,EAAd,CAAJ,EAA6C;AACzCD,MAAAA,CAAC;AACJ;;AACD,WAAO,CAACA,CAAC,KAAK,CAAN,IAAW,CAAC,KAAK/O,aAAL,EAAb,KAAsCW,IAAI,CAACkD,QAAL,CAAc,KAAKoL,wBAAL,EAAd,CAA7C,EAA6F;AACzFF,MAAAA,CAAC;AACJ;;AACD,WAAOA,CAAC,GAAG,CAAJ,GAAQ,KAAKrN,MAAL,CAAYf,IAAZ,CAAR,GAA4B,IAAnC;AACH,GAZD;;AAaAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB6P,wBAAjB,GAA4C,YAAY;AACpD,WAAO,KAAKC,YAAL,MAAuB,KAAKC,UAAL,EAAvB,IAA4C,KAAKC,WAAL,EAA5C,IAAkE,KAAKC,YAAL,EAAzE;AACH,GAFD;;AAGA7Q,EAAAA,MAAM,CAACY,SAAP,CAAiBkQ,mBAAjB,GAAuC,YAAY;AAC/C,WAAO,KAAK/I,WAAL,EAAP;AACH,GAFD;;AAGA/H,EAAAA,MAAM,CAACY,SAAP,CAAiB+P,UAAjB,GAA8B,YAAY;AACtC,QAAI,CAAC,KAAKvP,IAAL,CAAU1B,SAAS,CAACqR,IAApB,CAAD,IAA8B,CAAC,KAAK7P,SAAL,CAAe,GAAf,CAAnC,EAAwD;AACpD,aAAO,IAAP;AACH;;AACD,QAAIiB,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAegO,kBAA/B,CAAX;;AACA,QAAI,KAAKpO,WAAL,CAAiB,GAAjB,CAAJ,EAA2B;AACvB,UAAI,KAAKpB,aAAL,MAAwB,CAACW,IAAI,CAACkD,QAAL,CAAc,KAAKyL,mBAAL,EAAd,CAA7B,EAAwE;AACpE,eAAO,KAAK5N,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,CAAP;AACH;AACJ,KAJD,MAKK;AACD,WAAKzG,YAAL,GADC,CACoB;AACxB;;AACD,WAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,GAdD;;AAeAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBgQ,WAAjB,GAA+B,YAAY;AACvC;AACA,QAAI,CAAC,KAAK1P,SAAL,CAAe,GAAf,CAAL,EAA0B;AACtB,aAAO,IAAP;AACH;;AACD,QAAIiB,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAeiO,aAA/B,CAAX;AACA,SAAKxP,YAAL,GANuC,CAMlB;;AACrB,QAAI,KAAKD,aAAL,MAAwB,CAACW,IAAI,CAACkD,QAAL,CAAc,KAAKyL,mBAAL,EAAd,CAA7B,EAAwE;AACpE,aAAO,KAAK5N,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,CAAP;AACH;;AACD,WAAO,KAAKhF,MAAL,CAAYf,IAAZ,CAAP;AACH,GAXD;;AAYAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB4P,iBAAjB,GAAqC,YAAY;AAC7C;AACA,QAAI1O,GAAG,GAAG,KAAKH,IAAL,EAAV;AACA,QAAIQ,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAekO,mBAA/B,CAAX;AACA/O,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK8L,qBAAL,EAAd;;AACA,QAAI,CAAChP,IAAI,CAACkD,QAAL,CAAc,KAAKyL,mBAAL,EAAd,CAAD,IAA8C,CAAC,KAAKlO,WAAL,CAAiB,GAAjB,CAAnD,EAA0E;AACtE,WAAKb,aAAL,CAAmBD,GAAnB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAKoB,MAAL,CAAYf,IAAZ,CAAP;AACH,GAVD;;AAWAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBuQ,qBAAjB,GAAyC,YAAY;AACjD,QAAIrP,GAAG,GAAG,KAAKH,IAAL,EAAV;AACA,QAAIQ,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAeoO,eAA/B,CAAX;;AACA,QAAI,CAACjP,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAD,IAAsC,CAAC,KAAKnF,WAAL,CAAiB,GAAjB,CAA3C,EAAkE,CAC9D;AACH;;AACD,QAAI,CAAC,KAAKA,WAAL,CAAiB,GAAjB,CAAL,EAA4B;AACxB,WAAKb,aAAL,CAAmBD,GAAnB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAKoB,MAAL,CAAYf,IAAZ,CAAP;AACH,GAXD;;AAYAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBiQ,YAAjB,GAAgC,YAAY;AACxC;AACA,QAAI,CAAC,KAAKzP,IAAL,CAAU1B,SAAS,CAACwM,QAApB,CAAL,EAAoC;AAChC,aAAO,IAAP;AACH;;AACD,QAAI/J,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACyR,iBAAlB,CAAX;AACA,SAAK5P,YAAL,GANwC,CAMnB;AACrB;;AACAU,IAAAA,IAAI,CAACmP,kBAAL,CAAwB,KAAKH,qBAAL,EAAxB;;AACA,QAAI,CAAChP,IAAI,CAAC2F,aAAL,CAAmB,KAAKC,WAAL,EAAnB,CAAL,EAA6C;AACzC,aAAO,KAAK7E,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACqI,kBAA7B,CAAP;AACH;;AACD,QAAI/F,IAAI,CAACoP,WAAL,CAAiB,KAAK7B,cAAL,EAAjB,CAAJ,EAA6C;AACzCvN,MAAAA,IAAI,CAAC2I,QAAL,CAAc,KAAK0G,gBAAL,EAAd;AACA,WAAK9O,WAAL,CAAiB,GAAjB,EAFyC,CAElB;AAC1B;;AACD,QAAI,CAAC,KAAKD,MAAL,CAAY/C,SAAS,CAACyM,QAAtB,CAAL,EAAsC;AAClC,aAAO,KAAKjJ,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACyM,0BAA7B,CAAP;AACH;;AACD,WAAO,KAAKpJ,MAAL,CAAYf,IAAZ,CAAP;AACH,GApBD;;AAqBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB8P,YAAjB,GAAgC,YAAY;AACxC,QAAIe,KAAK,GAAG,IAAZ,CADwC,CAExC;;;AACA,QAAItP,IAAI,GAAG,KAAKuP,yBAAL,EAAX;;AACA,QAAIvP,IAAJ,EAAU;AACN,UAAI,CAAC,KAAKX,aAAL,EAAD,IAAyB,KAAKiB,MAAL,CAAY/C,SAAS,CAACqM,YAAtB,CAA7B,EAAkE;AAC9D,YAAI4F,aAAa,GAAG,YAAY;AAC5B,cAAItK,SAAS,GAAGoK,KAAK,CAAC7N,MAAN,CAAahE,KAAK,CAAC+D,IAAnB,CAAhB;;AACA,cAAI,CAAC0D,SAAS,CAAChC,QAAV,CAAmBoM,KAAK,CAACxK,cAAN,CAAqB,KAArB,CAAnB,CAAL,EAAsD;AAClD,mBAAO,IAAP;AACH;;AACD,iBAAOwK,KAAK,CAAChP,MAAN,CAAa/C,SAAS,CAACwH,KAAvB,KAAiCG,SAAS,CAAChC,QAAV,CAAmBoM,KAAK,CAACxK,cAAN,CAAqB,KAArB,CAAnB,CAAxC,EAAyF,CACrF;AACH;;AACD,cAAIwK,KAAK,CAACrQ,IAAN,CAAW1B,SAAS,CAACsM,YAArB,CAAJ,EAAwC;AACpC,mBAAOyF,KAAK,CAACvO,MAAN,CAAamE,SAAb,CAAP;AACH;;AACD,iBAAO,IAAP;AACH,SAZD;;AAaAlF,QAAAA,IAAI,CAACkD,QAAL,CAAc,KAAKpD,GAAL,CAAS0P,aAAT,KAA2B,KAAKH,gBAAL,EAAzC;;AACA,YAAI,CAAC,KAAK/O,MAAL,CAAY/C,SAAS,CAACsM,YAAtB,CAAL,EAA0C;AACtC,iBAAO,KAAK9I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0M,wBAA7B,CAAP;AACH;AACJ;;AACD,aAAO,KAAKrJ,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GA3BD;;AA4BAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB8Q,yBAAjB,GAA6C,YAAY;AACrD,QAAI,CAAC,KAAKtQ,IAAL,CAAU1B,SAAS,CAACgL,KAApB,CAAL,EAAiC;AAC7B,aAAO,IAAP;AACH;;AACD,QAAI5I,GAAG,GAAG,KAAKH,IAAL,EAAV;AACA,QAAIQ,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAe4O,cAA/B,CAAX;AACA,SAAKnQ,YAAL,GANqD,CAMhC;;AACrB,QAAI,KAAKD,aAAL,EAAJ,EAA0B;AACtB,WAAKO,aAAL,CAAmBD,GAAnB;AACA,aAAO,IAAP;AACH,KAVoD,CAWrD;;;AACA,QAAI,KAAKW,MAAL,CAAY/C,SAAS,CAACgL,KAAtB,KAAgC,KAAKlJ,aAAL,EAApC,EAA0D;AACtD,WAAKwC,SAAL,CAAe7B,IAAf,EAAqBtC,UAAU,CAACqI,kBAAhC;AACH;;AACD,QAAI,CAAC/F,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAL,EAAwC;AACpC,WAAK/D,SAAL,CAAe7B,IAAf,EAAqBtC,UAAU,CAACqI,kBAAhC;AACH;;AACD,WAAO/F,IAAP;AACH,GAnBD;;AAoBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBiR,aAAjB,GAAiC,YAAY;AACzC,QAAIlQ,IAAI,GAAG,KAAKA,IAAL,EAAX;;AACA,QAAImQ,IAAI,GAAG,KAAK7G,UAAL,EAAX;;AACA,QAAI6G,IAAJ,EAAU;AACN,aAAOA,IAAP;AACH;;AACD,SAAK/P,aAAL,CAAmBJ,IAAnB;AACA,WAAO,IAAP;AACH,GARD;;AASA3B,EAAAA,MAAM,CAACY,SAAP,CAAiBqK,UAAjB,GAA8B,YAAY;AACtC,QAAI,CAAC,KAAK7J,IAAL,CAAU1B,SAAS,CAACoM,WAApB,CAAL,EAAuC;AACnC,aAAO,IAAP;AACH;;AACD,QAAI3J,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAe+O,IAA/B,CAAX;;AACA,QAAI,KAAKtP,MAAL,CAAY/C,SAAS,CAACoM,WAAtB,KAAsC,KAAKpJ,WAAL,CAAiB,WAAjB,CAA1C,EAAyE;AACrE,aAAO,KAAKQ,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GATD;;AAUAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBmK,UAAjB,GAA8B,UAAUiH,WAAV,EAAuB;AACjD,QAAIA,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAAEA,MAAAA,WAAW,GAAG,KAAd;AAAsB;;AACpD,QAAI7P,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACqS,UAAlB,CAAX;;AACA,QAAI,CAAC9P,IAAI,CAACkD,QAAL,CAAc,KAAKmM,gBAAL,EAAd,CAAL,EAA6C;AACzC,aAAO,IAAP;AACH;;AACD,WAAO,IAAP,EAAa;AACT,UAAI,KAAKpQ,IAAL,CAAU1B,SAAS,CAACwH,KAApB,CAAJ,EAAgC;AAAE;AAC9B,YAAI8K,WAAJ,EAAiB;AACb,iBAAO,KAAK9O,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,aAAKV,YAAL;AACH;;AACD,UAAI,CAACU,IAAI,CAACkD,QAAL,CAAc,KAAKmM,gBAAL,EAAd,CAAL,EAA6C;AACzC;AACH;AACJ;;AACD,WAAO,KAAKtO,MAAL,CAAYf,IAAZ,CAAP;AACH,GAlBD;;AAmBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBsR,eAAjB,GAAmC,YAAY;AAC3C;AACA,QAAI,CAAC,KAAK9Q,IAAL,CAAU1B,SAAS,CAACwM,QAApB,CAAL,EAAoC;AAChC,aAAO,IAAP;AACH;;AACD,QAAI/J,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAemP,QAA/B,CAAX;AACA,SAAK1Q,YAAL;;AACA,WAAOU,IAAI,CAACkD,QAAL,CAAc,KAAK0C,WAAL,EAAd,CAAP,EAA0C,CACtC;AACH;;AACD,QAAI,CAAC,KAAKtF,MAAL,CAAY/C,SAAS,CAACyM,QAAtB,CAAL,EAAsC;AAClC,aAAO,KAAKjJ,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACyM,0BAA7B,CAAP;AACH;;AACD,WAAO,KAAKpJ,MAAL,CAAYf,IAAZ,CAAP;AACH,GAdD;;AAeAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB4Q,gBAAjB,GAAoC,UAAUY,aAAV,EAAyBC,aAAzB,EAAwC;AACxE,QAAIlQ,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC0S,gBAAlB,CAAX;;AACA,QAAI,CAACnQ,IAAI,CAACoQ,OAAL,CAAcH,aAAa,IAAI,KAAKI,UAAL,EAA/B,CAAL,EAAyD;AACrD,aAAO,IAAP;AACH;;AACD,QAAI,CAACrQ,IAAI,CAACoP,WAAL,CAAiBc,aAAa,IAAI,KAAK3C,cAAL,EAAlC,CAAL,EAA+D;AAC3D,aAAO,KAAKxM,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,QAAI,CAACA,IAAI,CAACsQ,QAAL,CAAc,KAAKD,UAAL,EAAd,CAAL,EAAuC;AACnC,aAAO,KAAKtP,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAACkP,YAA7B,CAAP;AACH,KAVuE,CAWxE;;;AACA5M,IAAAA,IAAI,GAAG,KAAKe,MAAL,CAAYf,IAAZ,CAAP;;AACA,QAAIuQ,QAAQ,GAAG,KAAKhD,cAAL,EAAf;;AACA,QAAIgD,QAAJ,EAAc;AACVvQ,MAAAA,IAAI,GAAG,KAAKqP,gBAAL,CAAsBrP,IAAtB,EAA4BuQ,QAA5B,CAAP;AACH;;AACD,WAAO,KAAKxP,MAAL,CAAYf,IAAZ,CAAP;AACH,GAlBD;;AAmBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiB4R,UAAjB,GAA8B,YAAY;AACtC,QAAIrQ,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+S,IAAlB,CAAX;AACAxQ,IAAAA,IAAI,CAACoP,WAAL,CAAiB,KAAKtB,mBAAL,EAAjB,EAFsC,CAEQ;;AAC9C,QAAI9N,IAAI,CAACyQ,aAAL,CAAmB,KAAK/F,gBAAL,EAAnB,KAA+C;AAC/C1K,IAAAA,IAAI,CAACyQ,aAAL,CAAmB,KAAKC,cAAL,EAAnB,CADA,IAC6C;AAC7C1Q,IAAAA,IAAI,CAACyQ,aAAL,CAAmB,KAAK7K,WAAL,EAAnB,CAFA,IAGA5F,IAAI,CAACyQ,aAAL,CAAmB,KAAK9F,mBAAL,EAAnB,CAHA,IAIA3K,IAAI,CAACyQ,aAAL,CAAmB,KAAKE,aAAL,EAAnB,CAJA,IAKA3Q,IAAI,CAACyQ,aAAL,CAAmB,KAAKG,cAAL,EAAnB,CALA,IAMA5Q,IAAI,CAACyQ,aAAL,CAAmB,KAAKI,eAAL,EAAnB,CANA,IAOA7Q,IAAI,CAACyQ,aAAL,CAAmB,KAAKV,eAAL,EAAnB,CAPJ,EAOgD;AAC5C,aAAO,KAAKhP,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GAdD;;AAeAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBoS,eAAjB,GAAmC,YAAY;AAC3C,QAAI,CAAC,KAAK5R,IAAL,CAAU1B,SAAS,CAACqM,YAApB,CAAL,EAAwC;AACpC,aAAO,IAAP;AACH;;AACD,QAAI5J,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;AACA,SAAKlC,YAAL,GAL2C,CAKtB;;AACrBU,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAK0F,UAAL,EAAd;;AACA,QAAI,CAAC,KAAKtI,MAAL,CAAY/C,SAAS,CAACsM,YAAtB,CAAL,EAA0C;AACtC,aAAO,KAAK9I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0M,wBAA7B,CAAP;AACH;;AACD,WAAO,KAAKrJ,MAAL,CAAYf,IAAZ,CAAP;AACH,GAXD;;AAYAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBkS,aAAjB,GAAiC,YAAY;AACzC,QAAI,KAAK1R,IAAL,CAAU1B,SAAS,CAACuT,GAApB,KACA,KAAK7R,IAAL,CAAU1B,SAAS,CAACiO,UAApB,CADA,IAEA,KAAKvM,IAAL,CAAU1B,SAAS,CAACwT,UAApB,CAFA,IAGA,KAAK9R,IAAL,CAAU1B,SAAS,CAACyT,MAApB,CAHA,IAIA,KAAK/R,IAAL,CAAU1B,SAAS,CAAC0T,GAApB,CAJA,IAKA,KAAKhS,IAAL,CAAU1B,SAAS,CAAC2T,GAApB,CALA,IAMA,KAAKjS,IAAL,CAAU1B,SAAS,CAAC4T,KAApB,CANA,IAOA,KAAKlS,IAAL,CAAU1B,SAAS,CAAC6T,IAApB,CAPA,IAQA,KAAKnS,IAAL,CAAU1B,SAAS,CAAC8T,SAApB,CARA,IASA,KAAKpS,IAAL,CAAU1B,SAAS,CAAC+T,IAApB,CATJ,EAS+B;AAC3B,UAAItR,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC8T,YAAlB,CAAX;AACA,WAAKjS,YAAL;AACA,aAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GAhBD;;AAiBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBkM,mBAAjB,GAAuC,YAAY;AAC/C,QAAI,CAAC,KAAK1L,IAAL,CAAU1B,SAAS,CAACkN,MAApB,CAAD,IAAgC,CAAC,KAAKxL,IAAL,CAAU1B,SAAS,CAAC2M,SAApB,CAArC,EAAqE;AACjE,aAAO,IAAP;AACH;;AACD,QAAIlK,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAe2Q,aAA/B,CAAX;AACA,SAAKlS,YAAL;AACA,WAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,GAPD;;AAQAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBiM,gBAAjB,GAAoC,YAAY;AAC5C,QAAI,CAAC,KAAKxL,UAAL,CAAgB3B,SAAS,CAACoB,KAA1B,EAAiC,kBAAjC,CAAL,EAA2D;AACvD,aAAO,IAAP;AACH;;AACD,QAAIgB,GAAG,GAAG,KAAKH,IAAL,EAAV;AACA,QAAIQ,IAAI,GAAG,KAAKY,UAAL,CAAgBnD,KAAK,CAACoD,QAAN,CAAe4Q,UAA/B,CAAX;AACA,SAAKnR,MAAL,CAAY/C,SAAS,CAACoB,KAAtB;;AACA,QAAI,KAAKU,aAAL,MAAwB,CAAC,KAAKJ,IAAL,CAAU1B,SAAS,CAACqM,YAApB,CAA7B,EAAgE;AAC5D,WAAKhK,aAAL,CAAmBD,GAAnB;AACA,aAAO,IAAP;AACH;;AACD,SAAK3B,OAAL,CAAa0T,KAAb,GAAqB,IAArB;AACA,SAAKpS,YAAL,GAZ4C,CAYvB;;AACrBU,IAAAA,IAAI,CAACkD,QAAL,CAAc,KAAKyO,iBAAL,EAAd,EAb4C,CAaH;;AACzC,SAAK3T,OAAL,CAAa0T,KAAb,GAAqB,KAArB;;AACA,QAAI,CAAC,KAAKpR,MAAL,CAAY/C,SAAS,CAACsM,YAAtB,CAAL,EAA0C;AACtC,aAAO,KAAK9I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0M,wBAA7B,CAAP;AACH;;AACD,WAAO,KAAKrJ,MAAL,CAAYf,IAAZ,CAAP;AACH,GAnBD;;AAoBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBkT,iBAAjB,GAAqC,YAAY;AAC7C,QAAI3R,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC+D,IAAlB,CAAX;;AACA,QAAI,CAAC,KAAKlB,MAAL,CAAY/C,SAAS,CAACkN,MAAtB,CAAD,IAAkC,CAAC,KAAKnK,MAAL,CAAY/C,SAAS,CAAC2M,SAAtB,CAAnC,IAAuE,CAAC,KAAKlJ,oBAAL,EAA5E,EAAyG;AACrG,aAAO,IAAP;AACH;;AACD,WAAO,KAAKD,MAAL,CAAYf,IAAZ,CAAP;AACH,GAND;;AAOAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBmH,WAAjB,GAA+B,UAAUgM,cAAV,EAA0B;AACrD,QAAI,CAAC,KAAK3S,IAAL,CAAU1B,SAAS,CAACoB,KAApB,CAAL,EAAiC;AAC7B,aAAO,IAAP;AACH;;AACD,QAAIqB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACqD,UAAlB,CAAX;;AACA,QAAI8Q,cAAJ,EAAoB;AAChB5R,MAAAA,IAAI,CAAC4R,cAAL,GAAsBA,cAAtB;AACH;;AACD5R,IAAAA,IAAI,CAAC6R,gBAAL,GAAwB,KAAK3S,UAAL,CAAgB3B,SAAS,CAACoB,KAA1B,EAAiC,KAAjC,CAAxB;AACA,SAAKW,YAAL;AACA,WAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,GAXD;;AAYAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBiS,cAAjB,GAAkC,YAAY;AAC1C,QAAI/Q,GAAG,GAAG,KAAKH,IAAL,EAAV;AACA,QAAIQ,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACqU,QAAlB,CAAX;;AACA,QAAI,CAAC9R,IAAI,CAAC2F,aAAL,CAAmB,KAAKoM,wBAAL,EAAnB,CAAL,EAA0D;AACtD,aAAO,IAAP;AACH;;AACD,QAAI,KAAK1S,aAAL,MAAwB,CAAC,KAAKiB,MAAL,CAAY/C,SAAS,CAACqM,YAAtB,CAA7B,EAAkE;AAC9D,WAAKhK,aAAL,CAAmBD,GAAnB;AACA,aAAO,IAAP;AACH;;AACD,QAAIK,IAAI,CAACgS,YAAL,GAAoB9O,QAApB,CAA6B,KAAK+O,sBAAL,EAA7B,CAAJ,EAAiE;AAC7D,aAAO,KAAK3R,MAAL,CAAY/C,SAAS,CAACwH,KAAtB,CAAP,EAAqC;AACjC,YAAI,KAAK9F,IAAL,CAAU1B,SAAS,CAACsM,YAApB,CAAJ,EAAuC;AACnC;AACH;;AACD,YAAI,CAAC7J,IAAI,CAACgS,YAAL,GAAoB9O,QAApB,CAA6B,KAAK+O,sBAAL,EAA7B,CAAL,EAAkE;AAC9D,eAAKpQ,SAAL,CAAe7B,IAAf,EAAqBtC,UAAU,CAACwU,kBAAhC;AACH;AACJ;AACJ;;AACD,QAAI,CAAC,KAAK5R,MAAL,CAAY/C,SAAS,CAACsM,YAAtB,CAAL,EAA0C;AACtC,aAAO,KAAK9I,MAAL,CAAYf,IAAZ,EAAkBtC,UAAU,CAAC0M,wBAA7B,CAAP;AACH;;AACD,WAAO,KAAKrJ,MAAL,CAAYf,IAAZ,CAAP;AACH,GAxBD;;AAyBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBsT,wBAAjB,GAA4C,YAAY;AACpD,QAAI,CAAC,KAAK9S,IAAL,CAAU1B,SAAS,CAACoB,KAApB,CAAL,EAAiC;AAC7B,aAAO,IAAP;AACH;;AACD,QAAIqB,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAACqD,UAAlB,CAAX;AACAd,IAAAA,IAAI,CAAC4R,cAAL,GAAsB,CAACnU,KAAK,CAACoI,aAAN,CAAoBiM,QAArB,CAAtB;;AACA,QAAI,KAAKvR,WAAL,CAAiB,QAAjB,CAAJ,EAAgC;AAC5B;AACA,UAAI,KAAKD,MAAL,CAAY/C,SAAS,CAACgL,KAAtB,CAAJ,EAAkC;AAC9B,eAAO,KAAKjI,MAAL,CAAY/C,SAAS,CAACoB,KAAtB,KAAgC,KAAK8B,WAAL,CAAiB,GAAjB,CAAvC,EAA8D,CAC1D;AACH;AACJ;;AACD,aAAO,KAAKM,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,SAAKV,YAAL;AACA,WAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,GAjBD;;AAkBAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBwT,sBAAjB,GAA0C,YAAY;AAClD,QAAIjS,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC0U,gBAAlB,CAAX;;AACA,QAAInS,IAAI,CAAC2I,QAAL,CAAc,KAAKC,UAAL,CAAgB,IAAhB,CAAd,CAAJ,EAA0C;AACtC,aAAO,KAAK7H,MAAL,CAAYf,IAAZ,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GAND;;AAOAnC,EAAAA,MAAM,CAACY,SAAP,CAAiBmS,cAAjB,GAAkC,YAAY;AAC1C,QAAI,KAAK1R,UAAL,CAAgB3B,SAAS,CAACqR,IAA1B,EAAgC,mEAAhC,CAAJ,EAA0G;AACtG,UAAI5O,IAAI,GAAG,KAAKyB,MAAL,CAAYhE,KAAK,CAAC2U,aAAlB,CAAX;AACA,WAAK9S,YAAL;AACA,aAAO,KAAKyB,MAAL,CAAYf,IAAZ,CAAP;AACH,KAJD,MAKK;AACD,aAAO,IAAP;AACH;AACJ,GATD;;AAUA,SAAOnC,MAAP;AACH,CAv5C2B,EAA5B;;AAw5CA,SAASA,MAAT","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { TokenType, Scanner } from './cssScanner.js';\nimport * as nodes from './cssNodes.js';\nimport { ParseError } from './cssErrors.js';\nimport * as languageFacts from '../languageFacts/facts.js';\nimport { isDefined } from '../utils/objects.js';\n/// <summary>\n/// A parser for the css core specification. See for reference:\n/// https://www.w3.org/TR/CSS21/grammar.html\n/// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n/// </summary>\nvar Parser = /** @class */ (function () {\n    function Parser(scnr) {\n        if (scnr === void 0) { scnr = new Scanner(); }\n        this.keyframeRegex = /^@(\\-(webkit|ms|moz|o)\\-)?keyframes$/i;\n        this.scanner = scnr;\n        this.token = { type: TokenType.EOF, offset: -1, len: 0, text: '' };\n        this.prevToken = undefined;\n    }\n    Parser.prototype.peekIdent = function (text) {\n        return TokenType.Ident === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekKeyword = function (text) {\n        return TokenType.AtKeyword === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekDelim = function (text) {\n        return TokenType.Delim === this.token.type && text === this.token.text;\n    };\n    Parser.prototype.peek = function (type) {\n        return type === this.token.type;\n    };\n    Parser.prototype.peekRegExp = function (type, regEx) {\n        if (type !== this.token.type) {\n            return false;\n        }\n        return regEx.test(this.token.text);\n    };\n    Parser.prototype.hasWhitespace = function () {\n        return !!this.prevToken && (this.prevToken.offset + this.prevToken.len !== this.token.offset);\n    };\n    Parser.prototype.consumeToken = function () {\n        this.prevToken = this.token;\n        this.token = this.scanner.scan();\n    };\n    Parser.prototype.mark = function () {\n        return {\n            prev: this.prevToken,\n            curr: this.token,\n            pos: this.scanner.pos()\n        };\n    };\n    Parser.prototype.restoreAtMark = function (mark) {\n        this.prevToken = mark.prev;\n        this.token = mark.curr;\n        this.scanner.goBackTo(mark.pos);\n    };\n    Parser.prototype.try = function (func) {\n        var pos = this.mark();\n        var node = func();\n        if (!node) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    Parser.prototype.acceptOneKeyword = function (keywords) {\n        if (TokenType.AtKeyword === this.token.type) {\n            for (var _i = 0, keywords_1 = keywords; _i < keywords_1.length; _i++) {\n                var keyword = keywords_1[_i];\n                if (keyword.length === this.token.text.length && keyword === this.token.text.toLowerCase()) {\n                    this.consumeToken();\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Parser.prototype.accept = function (type) {\n        if (type === this.token.type) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptIdent = function (text) {\n        if (this.peekIdent(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptKeyword = function (text) {\n        if (this.peekKeyword(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptDelim = function (text) {\n        if (this.peekDelim(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptRegexp = function (regEx) {\n        if (regEx.test(this.token.text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype._parseRegexp = function (regEx) {\n        var node = this.createNode(nodes.NodeType.Identifier);\n        do { } while (this.acceptRegexp(regEx));\n        return this.finish(node);\n    };\n    Parser.prototype.acceptUnquotedString = function () {\n        var pos = this.scanner.pos();\n        this.scanner.goBackTo(this.token.offset);\n        var unquoted = this.scanner.scanUnquotedString();\n        if (unquoted) {\n            this.token = unquoted;\n            this.consumeToken();\n            return true;\n        }\n        this.scanner.goBackTo(pos);\n        return false;\n    };\n    Parser.prototype.resync = function (resyncTokens, resyncStopTokens) {\n        while (true) {\n            if (resyncTokens && resyncTokens.indexOf(this.token.type) !== -1) {\n                this.consumeToken();\n                return true;\n            }\n            else if (resyncStopTokens && resyncStopTokens.indexOf(this.token.type) !== -1) {\n                return true;\n            }\n            else {\n                if (this.token.type === TokenType.EOF) {\n                    return false;\n                }\n                this.token = this.scanner.scan();\n            }\n        }\n    };\n    Parser.prototype.createNode = function (nodeType) {\n        return new nodes.Node(this.token.offset, this.token.len, nodeType);\n    };\n    Parser.prototype.create = function (ctor) {\n        return new ctor(this.token.offset, this.token.len);\n    };\n    Parser.prototype.finish = function (node, error, resyncTokens, resyncStopTokens) {\n        // parseNumeric misuses error for boolean flagging (however the real error mustn't be a false)\n        // + nodelist offsets mustn't be modified, because there is a offset hack in rulesets for smartselection\n        if (!(node instanceof nodes.Nodelist)) {\n            if (error) {\n                this.markError(node, error, resyncTokens, resyncStopTokens);\n            }\n            // set the node end position\n            if (this.prevToken) {\n                // length with more elements belonging together\n                var prevEnd = this.prevToken.offset + this.prevToken.len;\n                node.length = prevEnd > node.offset ? prevEnd - node.offset : 0; // offset is taken from current token, end from previous: Use 0 for empty nodes\n            }\n        }\n        return node;\n    };\n    Parser.prototype.markError = function (node, error, resyncTokens, resyncStopTokens) {\n        if (this.token !== this.lastErrorToken) { // do not report twice on the same token\n            node.addIssue(new nodes.Marker(node, error, nodes.Level.Error, undefined, this.token.offset, this.token.len));\n            this.lastErrorToken = this.token;\n        }\n        if (resyncTokens || resyncStopTokens) {\n            this.resync(resyncTokens, resyncStopTokens);\n        }\n    };\n    Parser.prototype.parseStylesheet = function (textDocument) {\n        var versionId = textDocument.version;\n        var text = textDocument.getText();\n        var textProvider = function (offset, length) {\n            if (textDocument.version !== versionId) {\n                throw new Error('Underlying model has changed, AST is no longer valid');\n            }\n            return text.substr(offset, length);\n        };\n        return this.internalParse(text, this._parseStylesheet, textProvider);\n    };\n    Parser.prototype.internalParse = function (input, parseFunc, textProvider) {\n        this.scanner.setSource(input);\n        this.token = this.scanner.scan();\n        var node = parseFunc.bind(this)();\n        if (node) {\n            if (textProvider) {\n                node.textProvider = textProvider;\n            }\n            else {\n                node.textProvider = function (offset, length) { return input.substr(offset, length); };\n            }\n        }\n        return node;\n    };\n    Parser.prototype._parseStylesheet = function () {\n        var node = this.create(nodes.Stylesheet);\n        while (node.addChild(this._parseStylesheetStart())) {\n            // Parse statements only valid at the beginning of stylesheets.\n        }\n        var inRecovery = false;\n        do {\n            var hasMatch = false;\n            do {\n                hasMatch = false;\n                var statement = this._parseStylesheetStatement();\n                if (statement) {\n                    node.addChild(statement);\n                    hasMatch = true;\n                    inRecovery = false;\n                    if (!this.peek(TokenType.EOF) && this._needsSemicolonAfter(statement) && !this.accept(TokenType.SemiColon)) {\n                        this.markError(node, ParseError.SemiColonExpected);\n                    }\n                }\n                while (this.accept(TokenType.SemiColon) || this.accept(TokenType.CDO) || this.accept(TokenType.CDC)) {\n                    // accept empty statements\n                    hasMatch = true;\n                    inRecovery = false;\n                }\n            } while (hasMatch);\n            if (this.peek(TokenType.EOF)) {\n                break;\n            }\n            if (!inRecovery) {\n                if (this.peek(TokenType.AtKeyword)) {\n                    this.markError(node, ParseError.UnknownAtRule);\n                }\n                else {\n                    this.markError(node, ParseError.RuleOrSelectorExpected);\n                }\n                inRecovery = true;\n            }\n            this.consumeToken();\n        } while (!this.peek(TokenType.EOF));\n        return this.finish(node);\n    };\n    Parser.prototype._parseStylesheetStart = function () {\n        return this._parseCharset();\n    };\n    Parser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseStylesheetAtStatement(isNested);\n        }\n        return this._parseRuleset(isNested);\n    };\n    Parser.prototype._parseStylesheetAtStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._parseImport()\n            || this._parseMedia(isNested)\n            || this._parsePage()\n            || this._parseFontFace()\n            || this._parseKeyframe()\n            || this._parseSupports(isNested)\n            || this._parseViewPort()\n            || this._parseNamespace()\n            || this._parseDocument()\n            || this._parseUnknownAtRule();\n    };\n    Parser.prototype._tryParseRuleset = function (isNested) {\n        var mark = this.mark();\n        if (this._parseSelector(isNested)) {\n            while (this.accept(TokenType.Comma) && this._parseSelector(isNested)) {\n                // loop\n            }\n            if (this.accept(TokenType.CurlyL)) {\n                this.restoreAtMark(mark);\n                return this._parseRuleset(isNested);\n            }\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseRuleset = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        var node = this.create(nodes.RuleSet);\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(isNested))) {\n            return null;\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!selectors.addChild(this._parseSelector(isNested))) {\n                return this.finish(node, ParseError.SelectorExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseRuleSetDeclaration = function () {\n        // https://www.w3.org/TR/css-syntax-3/#consume-a-list-of-declarations0\n        return this._parseAtApply()\n            || this._tryParseCustomPropertyDeclaration()\n            || this._parseDeclaration()\n            || this._parseUnknownAtRule();\n    };\n    /**\n     * Parses declarations like:\n     *   @apply --my-theme;\n     *\n     * Follows https://tabatkins.github.io/specs/css-apply-rule/#using\n     */\n    Parser.prototype._parseAtApply = function () {\n        if (!this.peekKeyword('@apply')) {\n            return null;\n        }\n        var node = this.create(nodes.AtApplyRule);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Variable]))) {\n            return this.finish(node, ParseError.IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._needsSemicolonAfter = function (node) {\n        switch (node.type) {\n            case nodes.NodeType.Keyframe:\n            case nodes.NodeType.ViewPort:\n            case nodes.NodeType.Media:\n            case nodes.NodeType.Ruleset:\n            case nodes.NodeType.Namespace:\n            case nodes.NodeType.If:\n            case nodes.NodeType.For:\n            case nodes.NodeType.Each:\n            case nodes.NodeType.While:\n            case nodes.NodeType.MixinDeclaration:\n            case nodes.NodeType.FunctionDeclaration:\n                return false;\n            case nodes.NodeType.ExtendsReference:\n            case nodes.NodeType.MixinContent:\n            case nodes.NodeType.ReturnStatement:\n            case nodes.NodeType.MediaQuery:\n            case nodes.NodeType.Debug:\n            case nodes.NodeType.Import:\n            case nodes.NodeType.AtApplyRule:\n            case nodes.NodeType.CustomPropertyDeclaration:\n                return true;\n            case nodes.NodeType.VariableDeclaration:\n                return node.needsSemicolon;\n            case nodes.NodeType.MixinReference:\n                return !node.getContent();\n            case nodes.NodeType.Declaration:\n                return !node.getNestedProperties();\n        }\n        return false;\n    };\n    Parser.prototype._parseDeclarations = function (parseDeclaration) {\n        var node = this.create(nodes.Declarations);\n        if (!this.accept(TokenType.CurlyL)) {\n            return null;\n        }\n        var decl = parseDeclaration();\n        while (node.addChild(decl)) {\n            if (this.peek(TokenType.CurlyR)) {\n                break;\n            }\n            if (this._needsSemicolonAfter(decl) && !this.accept(TokenType.SemiColon)) {\n                return this.finish(node, ParseError.SemiColonExpected, [TokenType.SemiColon, TokenType.CurlyR]);\n            }\n            // We accepted semicolon token. Link it to declaration.\n            if (decl && this.prevToken && this.prevToken.type === TokenType.SemiColon) {\n                decl.semicolonPosition = this.prevToken.offset;\n            }\n            while (this.accept(TokenType.SemiColon)) {\n                // accept empty statements\n            }\n            decl = parseDeclaration();\n        }\n        if (!this.accept(TokenType.CurlyR)) {\n            return this.finish(node, ParseError.RightCurlyExpected, [TokenType.CurlyR, TokenType.SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBody = function (node, parseDeclaration) {\n        if (!node.setDeclarations(this._parseDeclarations(parseDeclaration))) {\n            return this.finish(node, ParseError.LeftCurlyExpected, [TokenType.CurlyR, TokenType.SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSelector = function (isNested) {\n        var node = this.create(nodes.Selector);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    Parser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(nodes.Declaration);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon)) {\n            var stopTokens = resyncStopTokens ? __spreadArrays(resyncStopTokens, [TokenType.SemiColon]) : [TokenType.SemiColon];\n            return this.finish(node, ParseError.ColonExpected, [TokenType.Colon], stopTokens);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, ParseError.PropertyValueExpected);\n        }\n        node.addChild(this._parsePrio());\n        if (this.peek(TokenType.SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryParseCustomPropertyDeclaration = function () {\n        if (!this.peekRegExp(TokenType.Ident, /^--/)) {\n            return null;\n        }\n        var node = this.create(nodes.CustomPropertyDeclaration);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon)) {\n            return this.finish(node, ParseError.ColonExpected, [TokenType.Colon]);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        var mark = this.mark();\n        if (this.peek(TokenType.CurlyL)) {\n            // try to parse it as nested declaration\n            var propertySet = this.create(nodes.CustomPropertySet);\n            var declarations = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));\n            if (propertySet.setDeclarations(declarations) && !declarations.isErroneous(true)) {\n                propertySet.addChild(this._parsePrio());\n                if (this.peek(TokenType.SemiColon)) {\n                    this.finish(propertySet);\n                    node.setPropertySet(propertySet);\n                    node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                    return this.finish(node);\n                }\n            }\n            this.restoreAtMark(mark);\n        }\n        // try tp parse as expression\n        var expression = this._parseExpr();\n        if (expression && !expression.isErroneous(true)) {\n            this._parsePrio();\n            if (this.peek(TokenType.SemiColon)) {\n                node.setValue(expression);\n                node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                return this.finish(node);\n            }\n        }\n        this.restoreAtMark(mark);\n        node.addChild(this._parseCustomPropertyValue());\n        node.addChild(this._parsePrio());\n        if (isDefined(node.colonPosition) && this.token.offset === node.colonPosition + 1) {\n            return this.finish(node, ParseError.PropertyValueExpected);\n        }\n        return this.finish(node);\n    };\n    /**\n     * Parse custom property values.\n     *\n     * Based on https://www.w3.org/TR/css-variables/#syntax\n     *\n     * This code is somewhat unusual, as the allowed syntax is incredibly broad,\n     * parsing almost any sequence of tokens, save for a small set of exceptions.\n     * Unbalanced delimitors, invalid tokens, and declaration\n     * terminators like semicolons and !important directives (when not inside\n     * of delimitors).\n     */\n    Parser.prototype._parseCustomPropertyValue = function () {\n        var node = this.create(nodes.Node);\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case TokenType.SemiColon:\n                    // A semicolon only ends things if we're not inside a delimitor.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case TokenType.Exclamation:\n                    // An exclamation ends the value if we're not inside delims.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case TokenType.CurlyL:\n                    curlyDepth++;\n                    break;\n                case TokenType.CurlyR:\n                    curlyDepth--;\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, ParseError.LeftCurlyExpected);\n                    }\n                    break;\n                case TokenType.ParenthesisL:\n                    parensDepth++;\n                    break;\n                case TokenType.ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, ParseError.LeftParenthesisExpected);\n                    }\n                    break;\n                case TokenType.BracketL:\n                    bracketsDepth++;\n                    break;\n                case TokenType.BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, ParseError.LeftSquareBracketExpected);\n                    }\n                    break;\n                case TokenType.BadString: // fall through\n                    break done;\n                case TokenType.EOF:\n                    // We shouldn't have reached the end of input, something is\n                    // unterminated.\n                    var error = ParseError.RightCurlyExpected;\n                    if (bracketsDepth > 0) {\n                        error = ParseError.RightSquareBracketExpected;\n                    }\n                    else if (parensDepth > 0) {\n                        error = ParseError.RightParenthesisExpected;\n                    }\n                    return this.finish(node, error);\n            }\n            this.consumeToken();\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryToParseDeclaration = function () {\n        var mark = this.mark();\n        if (this._parseProperty() && this.accept(TokenType.Colon)) {\n            // looks like a declaration, go ahead\n            this.restoreAtMark(mark);\n            return this._parseDeclaration();\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseProperty = function () {\n        var node = this.create(nodes.Property);\n        var mark = this.mark();\n        if (this.acceptDelim('*') || this.acceptDelim('_')) {\n            // support for  IE 5.x, 6 and 7 star hack: see http://en.wikipedia.org/wiki/CSS_filter#Star_hack\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (node.setIdentifier(this._parsePropertyIdentifier())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parsePropertyIdentifier = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseCharset = function () {\n        if (!this.peek(TokenType.Charset)) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        this.consumeToken(); // charset\n        if (!this.accept(TokenType.String)) {\n            return this.finish(node, ParseError.IdentifierExpected);\n        }\n        if (!this.accept(TokenType.SemiColon)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(nodes.Import);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.URIOrStringExpected);\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespace = function () {\n        // http://www.w3.org/TR/css3-namespace/\n        // namespace  : NAMESPACE_SYM S* [IDENT S*]? [STRING|URI] S* ';' S*\n        if (!this.peekKeyword('@namespace')) {\n            return null;\n        }\n        var node = this.create(nodes.Namespace);\n        this.consumeToken(); // @namespace\n        if (!node.addChild(this._parseURILiteral())) { // url literal also starts with ident\n            node.addChild(this._parseIdent()); // optional prefix\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, ParseError.URIExpected, [TokenType.SemiColon]);\n            }\n        }\n        if (!this.accept(TokenType.SemiColon)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFontFace = function () {\n        if (!this.peekKeyword('@font-face')) {\n            return null;\n        }\n        var node = this.create(nodes.FontFace);\n        this.consumeToken(); // @font-face\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseViewPort = function () {\n        if (!this.peekKeyword('@-ms-viewport') &&\n            !this.peekKeyword('@-o-viewport') &&\n            !this.peekKeyword('@viewport')) {\n            return null;\n        }\n        var node = this.create(nodes.ViewPort);\n        this.consumeToken(); // @-ms-viewport\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseKeyframe = function () {\n        if (!this.peekRegExp(TokenType.AtKeyword, this.keyframeRegex)) {\n            return null;\n        }\n        var node = this.create(nodes.Keyframe);\n        var atNode = this.create(nodes.Node);\n        this.consumeToken(); // atkeyword\n        node.setKeyword(this.finish(atNode));\n        if (atNode.matches('@-ms-keyframes')) { // -ms-keyframes never existed\n            this.markError(atNode, ParseError.UnknownKeyword);\n        }\n        if (!node.setIdentifier(this._parseKeyframeIdent())) {\n            return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, this._parseKeyframeSelector.bind(this));\n    };\n    Parser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([nodes.ReferenceType.Keyframe]);\n    };\n    Parser.prototype._parseKeyframeSelector = function () {\n        var node = this.create(nodes.KeyframeSelector);\n        if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n            return null;\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n                return this.finish(node, ParseError.PercentageExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._tryParseKeyframeSelector = function () {\n        var node = this.create(nodes.KeyframeSelector);\n        var pos = this.mark();\n        if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n            return null;\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(TokenType.Percentage)) {\n                this.restoreAtMark(pos);\n                return null;\n            }\n        }\n        if (!this.peek(TokenType.CurlyL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseSupports = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // SUPPORTS_SYM S* supports_condition '{' S* ruleset* '}' S*\n        if (!this.peekKeyword('@supports')) {\n            return null;\n        }\n        var node = this.create(nodes.Supports);\n        this.consumeToken(); // @supports\n        node.addChild(this._parseSupportsCondition());\n        return this._parseBody(node, this._parseSupportsDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseSupportsDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(true)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement(true);\n        }\n        return this._parseStylesheetStatement(false);\n    };\n    Parser.prototype._parseSupportsCondition = function () {\n        // supports_condition : supports_negation | supports_conjunction | supports_disjunction | supports_condition_in_parens ;\n        // supports_condition_in_parens: ( '(' S* supports_condition S* ')' ) | supports_declaration_condition | general_enclosed ;\n        // supports_negation: NOT S+ supports_condition_in_parens ;\n        // supports_conjunction: supports_condition_in_parens ( S+ AND S+ supports_condition_in_parens )+;\n        // supports_disjunction: supports_condition_in_parens ( S+ OR S+ supports_condition_in_parens )+;\n        // supports_declaration_condition: '(' S* declaration ')';\n        // general_enclosed: ( FUNCTION | '(' ) ( any | unused )* ')' ;\n        var node = this.create(nodes.SupportsCondition);\n        if (this.acceptIdent('not')) {\n            node.addChild(this._parseSupportsConditionInParens());\n        }\n        else {\n            node.addChild(this._parseSupportsConditionInParens());\n            if (this.peekRegExp(TokenType.Ident, /^(and|or)$/i)) {\n                var text = this.token.text.toLowerCase();\n                while (this.acceptIdent(text)) {\n                    node.addChild(this._parseSupportsConditionInParens());\n                }\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSupportsConditionInParens = function () {\n        var node = this.create(nodes.SupportsCondition);\n        if (this.accept(TokenType.ParenthesisL)) {\n            if (this.prevToken) {\n                node.lParent = this.prevToken.offset;\n            }\n            if (!node.addChild(this._tryToParseDeclaration())) {\n                if (!this._parseSupportsCondition()) {\n                    return this.finish(node, ParseError.ConditionExpected);\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.ParenthesisR], []);\n            }\n            if (this.prevToken) {\n                node.rParent = this.prevToken.offset;\n            }\n            return this.finish(node);\n        }\n        else if (this.peek(TokenType.Ident)) {\n            var pos = this.mark();\n            this.consumeToken();\n            if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n                var openParentCount = 1;\n                while (this.token.type !== TokenType.EOF && openParentCount !== 0) {\n                    if (this.token.type === TokenType.ParenthesisL) {\n                        openParentCount++;\n                    }\n                    else if (this.token.type === TokenType.ParenthesisR) {\n                        openParentCount--;\n                    }\n                    this.consumeToken();\n                }\n                return this.finish(node);\n            }\n            else {\n                this.restoreAtMark(pos);\n            }\n        }\n        return this.finish(node, ParseError.LeftParenthesisExpected, [], [TokenType.ParenthesisL]);\n    };\n    Parser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(true)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement(true);\n        }\n        return this._parseStylesheetStatement(false);\n    };\n    Parser.prototype._parseMedia = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // MEDIA_SYM S* media_query_list '{' S* ruleset* '}' S*\n        // media_query_list : S* [media_query [ ',' S* media_query ]* ]?\n        if (!this.peekKeyword('@media')) {\n            return null;\n        }\n        var node = this.create(nodes.Media);\n        this.consumeToken(); // @media\n        if (!node.addChild(this._parseMediaQueryList())) {\n            return this.finish(node, ParseError.MediaQueryExpected);\n        }\n        return this._parseBody(node, this._parseMediaDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseMediaQueryList = function () {\n        var node = this.create(nodes.Medialist);\n        if (!node.addChild(this._parseMediaQuery([TokenType.CurlyL]))) {\n            return this.finish(node, ParseError.MediaQueryExpected);\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!node.addChild(this._parseMediaQuery([TokenType.CurlyL]))) {\n                return this.finish(node, ParseError.MediaQueryExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaQuery = function (resyncStopToken) {\n        // http://www.w3.org/TR/css3-mediaqueries/\n        // media_query : [ONLY | NOT]? S* IDENT S* [ AND S* expression ]* | expression [ AND S* expression ]*\n        // expression : '(' S* IDENT S* [ ':' S* expr ]? ')' S*\n        var node = this.create(nodes.MediaQuery);\n        var parseExpression = true;\n        var hasContent = false;\n        if (!this.peek(TokenType.ParenthesisL)) {\n            if (this.acceptIdent('only') || this.acceptIdent('not')) {\n                // optional\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return null;\n            }\n            hasContent = true;\n            parseExpression = this.acceptIdent('and');\n        }\n        while (parseExpression) {\n            // Allow short-circuting for other language constructs.\n            if (node.addChild(this._parseMediaContentStart())) {\n                parseExpression = this.acceptIdent('and');\n                continue;\n            }\n            if (!this.accept(TokenType.ParenthesisL)) {\n                if (hasContent) {\n                    return this.finish(node, ParseError.LeftParenthesisExpected, [], resyncStopToken);\n                }\n                return null;\n            }\n            if (!node.addChild(this._parseMediaFeatureName())) {\n                return this.finish(node, ParseError.IdentifierExpected, [], resyncStopToken);\n            }\n            if (this.accept(TokenType.Colon)) {\n                if (!node.addChild(this._parseExpr())) {\n                    return this.finish(node, ParseError.TermExpected, [], resyncStopToken);\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected, [], resyncStopToken);\n            }\n            parseExpression = this.acceptIdent('and');\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaContentStart = function () {\n        return null;\n    };\n    Parser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseMedium = function () {\n        var node = this.create(nodes.Node);\n        if (node.addChild(this._parseIdent())) {\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parsePageDeclaration = function () {\n        return this._parsePageMarginBox() || this._parseRuleSetDeclaration();\n    };\n    Parser.prototype._parsePage = function () {\n        // http://www.w3.org/TR/css3-page/\n        // page_rule : PAGE_SYM S* page_selector_list '{' S* page_body '}' S*\n        // page_body :  /* Can be empty */ declaration? [ ';' S* page_body ]? | page_margin_box page_body\n        if (!this.peekKeyword('@page')) {\n            return null;\n        }\n        var node = this.create(nodes.Page);\n        this.consumeToken();\n        if (node.addChild(this._parsePageSelector())) {\n            while (this.accept(TokenType.Comma)) {\n                if (!node.addChild(this._parsePageSelector())) {\n                    return this.finish(node, ParseError.IdentifierExpected);\n                }\n            }\n        }\n        return this._parseBody(node, this._parsePageDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageMarginBox = function () {\n        // page_margin_box :  margin_sym S* '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n        if (!this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        var node = this.create(nodes.PageBoxMarginBox);\n        if (!this.acceptOneKeyword(languageFacts.pageBoxDirectives)) {\n            this.markError(node, ParseError.UnknownAtRule, [], [TokenType.CurlyL]);\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageSelector = function () {\n        // page_selector : pseudo_page+ | IDENT pseudo_page*\n        // pseudo_page :  ':' [ \"left\" | \"right\" | \"first\" | \"blank\" ];\n        if (!this.peek(TokenType.Ident) && !this.peek(TokenType.Colon)) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        node.addChild(this._parseIdent()); // optional ident\n        if (this.accept(TokenType.Colon)) {\n            if (!node.addChild(this._parseIdent())) { // optional ident\n                return this.finish(node, ParseError.IdentifierExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseDocument = function () {\n        // -moz-document is experimental but has been pushed to css4\n        if (!this.peekKeyword('@-moz-document')) {\n            return null;\n        }\n        var node = this.create(nodes.Document);\n        this.consumeToken(); // @-moz-document\n        this.resync([], [TokenType.CurlyL]); // ignore all the rules\n        return this._parseBody(node, this._parseStylesheetStatement.bind(this));\n    };\n    // https://www.w3.org/TR/css-syntax-3/#consume-an-at-rule\n    Parser.prototype._parseUnknownAtRule = function () {\n        if (!this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        var node = this.create(nodes.UnknownAtRule);\n        node.addChild(this._parseUnknownAtRuleName());\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyLCount = 0;\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case TokenType.SemiColon:\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case TokenType.EOF:\n                    if (curlyDepth > 0) {\n                        return this.finish(node, ParseError.RightCurlyExpected);\n                    }\n                    else if (bracketsDepth > 0) {\n                        return this.finish(node, ParseError.RightSquareBracketExpected);\n                    }\n                    else if (parensDepth > 0) {\n                        return this.finish(node, ParseError.RightParenthesisExpected);\n                    }\n                    else {\n                        return this.finish(node);\n                    }\n                case TokenType.CurlyL:\n                    curlyLCount++;\n                    curlyDepth++;\n                    break;\n                case TokenType.CurlyR:\n                    curlyDepth--;\n                    // End of at-rule, consume CurlyR and return node\n                    if (curlyLCount > 0 && curlyDepth === 0) {\n                        this.consumeToken();\n                        if (bracketsDepth > 0) {\n                            return this.finish(node, ParseError.RightSquareBracketExpected);\n                        }\n                        else if (parensDepth > 0) {\n                            return this.finish(node, ParseError.RightParenthesisExpected);\n                        }\n                        break done;\n                    }\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, ParseError.LeftCurlyExpected);\n                    }\n                    break;\n                case TokenType.ParenthesisL:\n                    parensDepth++;\n                    break;\n                case TokenType.ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, ParseError.LeftParenthesisExpected);\n                    }\n                    break;\n                case TokenType.BracketL:\n                    bracketsDepth++;\n                    break;\n                case TokenType.BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, ParseError.LeftSquareBracketExpected);\n                    }\n                    break;\n            }\n            this.consumeToken();\n        }\n        return node;\n    };\n    Parser.prototype._parseUnknownAtRuleName = function () {\n        var node = this.create(nodes.Node);\n        if (this.accept(TokenType.AtKeyword)) {\n            return this.finish(node);\n        }\n        return node;\n    };\n    Parser.prototype._parseOperator = function () {\n        // these are operators for binary expressions\n        if (this.peekDelim('/') ||\n            this.peekDelim('*') ||\n            this.peekDelim('+') ||\n            this.peekDelim('-') ||\n            this.peek(TokenType.Dashmatch) ||\n            this.peek(TokenType.Includes) ||\n            this.peek(TokenType.SubstringOperator) ||\n            this.peek(TokenType.PrefixOperator) ||\n            this.peek(TokenType.SuffixOperator) ||\n            this.peekDelim('=')) { // doesn't stick to the standard here\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parseUnaryOperator = function () {\n        if (!this.peekDelim('+') && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseCombinator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                    node.type = nodes.NodeType.SelectorCombinatorShadowPiercingDescendant;\n                    return this.finish(node);\n                }\n                this.restoreAtMark(mark);\n            }\n            node.type = nodes.NodeType.SelectorCombinatorParent;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('+')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            node.type = nodes.NodeType.SelectorCombinatorSibling;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('~')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            node.type = nodes.NodeType.SelectorCombinatorAllSiblings;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('/')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptIdent('deep') && !this.hasWhitespace() && this.acceptDelim('/')) {\n                node.type = nodes.NodeType.SelectorCombinatorShadowPiercingDescendant;\n                return this.finish(node);\n            }\n            this.restoreAtMark(mark);\n        }\n        return null;\n    };\n    Parser.prototype._parseSimpleSelector = function () {\n        // simple_selector\n        //  : element_name [ HASH | class | attrib | pseudo ]* | [ HASH | class | attrib | pseudo ]+ ;\n        var node = this.create(nodes.SimpleSelector);\n        var c = 0;\n        if (node.addChild(this._parseElementName())) {\n            c++;\n        }\n        while ((c === 0 || !this.hasWhitespace()) && node.addChild(this._parseSimpleSelectorBody())) {\n            c++;\n        }\n        return c > 0 ? this.finish(node) : null;\n    };\n    Parser.prototype._parseSimpleSelectorBody = function () {\n        return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();\n    };\n    Parser.prototype._parseSelectorIdent = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseHash = function () {\n        if (!this.peek(TokenType.Hash) && !this.peekDelim('#')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.IdentifierSelector);\n        if (this.acceptDelim('#')) {\n            if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n                return this.finish(node, ParseError.IdentifierExpected);\n            }\n        }\n        else {\n            this.consumeToken(); // TokenType.Hash\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseClass = function () {\n        // class: '.' IDENT ;\n        if (!this.peekDelim('.')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.ClassSelector);\n        this.consumeToken(); // '.'\n        if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n            return this.finish(node, ParseError.IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseElementName = function () {\n        // element_name: (ns? '|')? IDENT | '*';\n        var pos = this.mark();\n        var node = this.createNode(nodes.NodeType.ElementNameSelector);\n        node.addChild(this._parseNamespacePrefix());\n        if (!node.addChild(this._parseSelectorIdent()) && !this.acceptDelim('*')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespacePrefix = function () {\n        var pos = this.mark();\n        var node = this.createNode(nodes.NodeType.NamespacePrefix);\n        if (!node.addChild(this._parseIdent()) && !this.acceptDelim('*')) {\n            // ns is optional\n        }\n        if (!this.acceptDelim('|')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseAttrib = function () {\n        // attrib : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*   [ IDENT | STRING ] S* ]? ']'\n        if (!this.peek(TokenType.BracketL)) {\n            return null;\n        }\n        var node = this.create(nodes.AttributeSelector);\n        this.consumeToken(); // BracketL\n        // Optional attrib namespace\n        node.setNamespacePrefix(this._parseNamespacePrefix());\n        if (!node.setIdentifier(this._parseIdent())) {\n            return this.finish(node, ParseError.IdentifierExpected);\n        }\n        if (node.setOperator(this._parseOperator())) {\n            node.setValue(this._parseBinaryExpr());\n            this.acceptIdent('i'); // case insensitive matching\n        }\n        if (!this.accept(TokenType.BracketR)) {\n            return this.finish(node, ParseError.RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parsePseudo = function () {\n        var _this = this;\n        // pseudo: ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n        var node = this._tryParsePseudoIdentifier();\n        if (node) {\n            if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n                var tryAsSelector = function () {\n                    var selectors = _this.create(nodes.Node);\n                    if (!selectors.addChild(_this._parseSelector(false))) {\n                        return null;\n                    }\n                    while (_this.accept(TokenType.Comma) && selectors.addChild(_this._parseSelector(false))) {\n                        // loop\n                    }\n                    if (_this.peek(TokenType.ParenthesisR)) {\n                        return _this.finish(selectors);\n                    }\n                    return null;\n                };\n                node.addChild(this.try(tryAsSelector) || this._parseBinaryExpr());\n                if (!this.accept(TokenType.ParenthesisR)) {\n                    return this.finish(node, ParseError.RightParenthesisExpected);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._tryParsePseudoIdentifier = function () {\n        if (!this.peek(TokenType.Colon)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(nodes.NodeType.PseudoSelector);\n        this.consumeToken(); // Colon\n        if (this.hasWhitespace()) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        // optional, support ::\n        if (this.accept(TokenType.Colon) && this.hasWhitespace()) {\n            this.markError(node, ParseError.IdentifierExpected);\n        }\n        if (!node.addChild(this._parseIdent())) {\n            this.markError(node, ParseError.IdentifierExpected);\n        }\n        return node;\n    };\n    Parser.prototype._tryParsePrio = function () {\n        var mark = this.mark();\n        var prio = this._parsePrio();\n        if (prio) {\n            return prio;\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parsePrio = function () {\n        if (!this.peek(TokenType.Exclamation)) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.Prio);\n        if (this.accept(TokenType.Exclamation) && this.acceptIdent('important')) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseExpr = function (stopOnComma) {\n        if (stopOnComma === void 0) { stopOnComma = false; }\n        var node = this.create(nodes.Expression);\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return null;\n        }\n        while (true) {\n            if (this.peek(TokenType.Comma)) { // optional\n                if (stopOnComma) {\n                    return this.finish(node);\n                }\n                this.consumeToken();\n            }\n            if (!node.addChild(this._parseBinaryExpr())) {\n                break;\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamedLine = function () {\n        // https://www.w3.org/TR/css-grid-1/#named-lines\n        if (!this.peek(TokenType.BracketL)) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.GridLine);\n        this.consumeToken();\n        while (node.addChild(this._parseIdent())) {\n            // repeat\n        }\n        if (!this.accept(TokenType.BracketR)) {\n            return this.finish(node, ParseError.RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBinaryExpr = function (preparsedLeft, preparsedOper) {\n        var node = this.create(nodes.BinaryExpression);\n        if (!node.setLeft((preparsedLeft || this._parseTerm()))) {\n            return null;\n        }\n        if (!node.setOperator(preparsedOper || this._parseOperator())) {\n            return this.finish(node);\n        }\n        if (!node.setRight(this._parseTerm())) {\n            return this.finish(node, ParseError.TermExpected);\n        }\n        // things needed for multiple binary expressions\n        node = this.finish(node);\n        var operator = this._parseOperator();\n        if (operator) {\n            node = this._parseBinaryExpr(node, operator);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseTerm = function () {\n        var node = this.create(nodes.Term);\n        node.setOperator(this._parseUnaryOperator()); // optional\n        if (node.setExpression(this._parseURILiteral()) || // url before function\n            node.setExpression(this._parseFunction()) || // function before ident\n            node.setExpression(this._parseIdent()) ||\n            node.setExpression(this._parseStringLiteral()) ||\n            node.setExpression(this._parseNumeric()) ||\n            node.setExpression(this._parseHexColor()) ||\n            node.setExpression(this._parseOperation()) ||\n            node.setExpression(this._parseNamedLine())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseOperation = function () {\n        if (!this.peek(TokenType.ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        this.consumeToken(); // ParenthesisL\n        node.addChild(this._parseExpr());\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNumeric = function () {\n        if (this.peek(TokenType.Num) ||\n            this.peek(TokenType.Percentage) ||\n            this.peek(TokenType.Resolution) ||\n            this.peek(TokenType.Length) ||\n            this.peek(TokenType.EMS) ||\n            this.peek(TokenType.EXS) ||\n            this.peek(TokenType.Angle) ||\n            this.peek(TokenType.Time) ||\n            this.peek(TokenType.Dimension) ||\n            this.peek(TokenType.Freq)) {\n            var node = this.create(nodes.NumericValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseStringLiteral = function () {\n        if (!this.peek(TokenType.String) && !this.peek(TokenType.BadString)) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.StringLiteral);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseURILiteral = function () {\n        if (!this.peekRegExp(TokenType.Ident, /^url(-prefix)?$/i)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(nodes.NodeType.URILiteral);\n        this.accept(TokenType.Ident);\n        if (this.hasWhitespace() || !this.peek(TokenType.ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        this.scanner.inURL = true;\n        this.consumeToken(); // consume ()\n        node.addChild(this._parseURLArgument()); // argument is optional\n        this.scanner.inURL = false;\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseURLArgument = function () {\n        var node = this.create(nodes.Node);\n        if (!this.accept(TokenType.String) && !this.accept(TokenType.BadString) && !this.acceptUnquotedString()) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseIdent = function (referenceTypes) {\n        if (!this.peek(TokenType.Ident)) {\n            return null;\n        }\n        var node = this.create(nodes.Identifier);\n        if (referenceTypes) {\n            node.referenceTypes = referenceTypes;\n        }\n        node.isCustomProperty = this.peekRegExp(TokenType.Ident, /^--/);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(nodes.Function);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseFunctionArgument())) {\n            while (this.accept(TokenType.Comma)) {\n                if (this.peek(TokenType.ParenthesisR)) {\n                    break;\n                }\n                if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                    this.markError(node, ParseError.ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionIdentifier = function () {\n        if (!this.peek(TokenType.Ident)) {\n            return null;\n        }\n        var node = this.create(nodes.Identifier);\n        node.referenceTypes = [nodes.ReferenceType.Function];\n        if (this.acceptIdent('progid')) {\n            // support for IE7 specific filters: 'progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)'\n            if (this.accept(TokenType.Colon)) {\n                while (this.accept(TokenType.Ident) && this.acceptDelim('.')) {\n                    // loop\n                }\n            }\n            return this.finish(node);\n        }\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionArgument = function () {\n        var node = this.create(nodes.FunctionArgument);\n        if (node.setValue(this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseHexColor = function () {\n        if (this.peekRegExp(TokenType.Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {\n            var node = this.create(nodes.HexColorValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    return Parser;\n}());\nexport { Parser };\n"]},"metadata":{},"sourceType":"module"}