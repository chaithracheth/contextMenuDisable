{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { CSSCompletion } from './cssCompletion.js';\nimport { CompletionItemKind, InsertTextFormat, TextEdit } from '../cssLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\n\nvar LESSCompletion =\n/** @class */\nfunction (_super) {\n  __extends(LESSCompletion, _super);\n\n  function LESSCompletion(clientCapabilities) {\n    return _super.call(this, '@', clientCapabilities) || this;\n  }\n\n  LESSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n    for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n      var p = proposals_1[_i];\n      var item = {\n        label: p.name,\n        detail: p.example,\n        documentation: p.description,\n        textEdit: TextEdit.replace(this.getCompletionRange(existingNode), p.name + '($0)'),\n        insertTextFormat: InsertTextFormat.Snippet,\n        kind: CompletionItemKind.Function\n      };\n\n      if (sortToEnd) {\n        item.sortText = 'z';\n      }\n\n      result.items.push(item);\n    }\n\n    return result;\n  };\n\n  LESSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n    var functions = LESSCompletion.builtInProposals;\n\n    if (entry) {\n      functions = functions.filter(function (f) {\n        return !f.type || !entry.restrictions || entry.restrictions.indexOf(f.type) !== -1;\n      });\n    }\n\n    this.createFunctionProposals(functions, existingNode, true, result);\n    return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n  };\n\n  LESSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n    this.createFunctionProposals(LESSCompletion.colorProposals, existingNode, false, result);\n    return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n  };\n\n  LESSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n    this.getCompletionsForSelector(null, true, result);\n    return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n  };\n\n  LESSCompletion.builtInProposals = [// Boolean functions\n  {\n    'name': 'if',\n    'example': 'if(condition, trueValue [, falseValue]);',\n    'description': localize('less.builtin.if', 'returns one of two values depending on a condition.')\n  }, {\n    'name': 'boolean',\n    'example': 'boolean(condition);',\n    'description': localize('less.builtin.boolean', '\"store\" a boolean test for later evaluation in a guard or if().')\n  }, // List functions\n  {\n    'name': 'length',\n    'example': 'length(@list);',\n    'description': localize('less.builtin.length', 'returns the number of elements in a value list')\n  }, {\n    'name': 'extract',\n    'example': 'extract(@list, index);',\n    'description': localize('less.builtin.extract', 'returns a value at the specified position in the list')\n  }, {\n    'name': 'range',\n    'example': 'range([start, ] end [, step]);',\n    'description': localize('less.builtin.range', 'generate a list spanning a range of values')\n  }, {\n    'name': 'each',\n    'example': 'each(@list, ruleset);',\n    'description': localize('less.builtin.each', 'bind the evaluation of a ruleset to each member of a list.')\n  }, // Other built-ins\n  {\n    'name': 'escape',\n    'example': 'escape(@string);',\n    'description': localize('less.builtin.escape', 'URL encodes a string')\n  }, {\n    'name': 'e',\n    'example': 'e(@string);',\n    'description': localize('less.builtin.e', 'escape string content')\n  }, {\n    'name': 'replace',\n    'example': 'replace(@string, @pattern, @replacement[, @flags]);',\n    'description': localize('less.builtin.replace', 'string replace')\n  }, {\n    'name': 'unit',\n    'example': 'unit(@dimension, [@unit: \\'\\']);',\n    'description': localize('less.builtin.unit', 'remove or change the unit of a dimension')\n  }, {\n    'name': 'color',\n    'example': 'color(@string);',\n    'description': localize('less.builtin.color', 'parses a string to a color'),\n    'type': 'color'\n  }, {\n    'name': 'convert',\n    'example': 'convert(@value, unit);',\n    'description': localize('less.builtin.convert', 'converts numbers from one type into another')\n  }, {\n    'name': 'data-uri',\n    'example': 'data-uri([mimetype,] url);',\n    'description': localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`'),\n    'type': 'url'\n  }, {\n    'name': 'abs',\n    'description': localize('less.builtin.abs', 'absolute value of a number'),\n    'example': 'abs(number);'\n  }, {\n    'name': 'acos',\n    'description': localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\n    'example': 'acos(number);'\n  }, {\n    'name': 'asin',\n    'description': localize('less.builtin.asin', 'arcsine - inverse of sine function'),\n    'example': 'asin(number);'\n  }, {\n    'name': 'ceil',\n    'example': 'ceil(@number);',\n    'description': localize('less.builtin.ceil', 'rounds up to an integer')\n  }, {\n    'name': 'cos',\n    'description': localize('less.builtin.cos', 'cosine function'),\n    'example': 'cos(number);'\n  }, {\n    'name': 'floor',\n    'description': localize('less.builtin.floor', 'rounds down to an integer'),\n    'example': 'floor(@number);'\n  }, {\n    'name': 'percentage',\n    'description': localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\n    'example': 'percentage(@number);',\n    'type': 'percentage'\n  }, {\n    'name': 'round',\n    'description': localize('less.builtin.round', 'rounds a number to a number of places'),\n    'example': 'round(number, [places: 0]);'\n  }, {\n    'name': 'sqrt',\n    'description': localize('less.builtin.sqrt', 'calculates square root of a number'),\n    'example': 'sqrt(number);'\n  }, {\n    'name': 'sin',\n    'description': localize('less.builtin.sin', 'sine function'),\n    'example': 'sin(number);'\n  }, {\n    'name': 'tan',\n    'description': localize('less.builtin.tan', 'tangent function'),\n    'example': 'tan(number);'\n  }, {\n    'name': 'atan',\n    'description': localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\n    'example': 'atan(number);'\n  }, {\n    'name': 'pi',\n    'description': localize('less.builtin.pi', 'returns pi'),\n    'example': 'pi();'\n  }, {\n    'name': 'pow',\n    'description': localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\n    'example': 'pow(@base, @exponent);'\n  }, {\n    'name': 'mod',\n    'description': localize('less.builtin.mod', 'first argument modulus second argument'),\n    'example': 'mod(number, number);'\n  }, {\n    'name': 'min',\n    'description': localize('less.builtin.min', 'returns the lowest of one or more values'),\n    'example': 'min(@x, @y);'\n  }, {\n    'name': 'max',\n    'description': localize('less.builtin.max', 'returns the lowest of one or more values'),\n    'example': 'max(@x, @y);'\n  }];\n  LESSCompletion.colorProposals = [{\n    'name': 'argb',\n    'example': 'argb(@color);',\n    'description': localize('less.builtin.argb', 'creates a #AARRGGBB')\n  }, {\n    'name': 'hsl',\n    'example': 'hsl(@hue, @saturation, @lightness);',\n    'description': localize('less.builtin.hsl', 'creates a color')\n  }, {\n    'name': 'hsla',\n    'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\n    'description': localize('less.builtin.hsla', 'creates a color')\n  }, {\n    'name': 'hsv',\n    'example': 'hsv(@hue, @saturation, @value);',\n    'description': localize('less.builtin.hsv', 'creates a color')\n  }, {\n    'name': 'hsva',\n    'example': 'hsva(@hue, @saturation, @value, @alpha);',\n    'description': localize('less.builtin.hsva', 'creates a color')\n  }, {\n    'name': 'hue',\n    'example': 'hue(@color);',\n    'description': localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\n  }, {\n    'name': 'saturation',\n    'example': 'saturation(@color);',\n    'description': localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\n  }, {\n    'name': 'lightness',\n    'example': 'lightness(@color);',\n    'description': localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\n  }, {\n    'name': 'hsvhue',\n    'example': 'hsvhue(@color);',\n    'description': localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\n  }, {\n    'name': 'hsvsaturation',\n    'example': 'hsvsaturation(@color);',\n    'description': localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\n  }, {\n    'name': 'hsvvalue',\n    'example': 'hsvvalue(@color);',\n    'description': localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\n  }, {\n    'name': 'red',\n    'example': 'red(@color);',\n    'description': localize('less.builtin.red', 'returns the `red` channel of `@color`')\n  }, {\n    'name': 'green',\n    'example': 'green(@color);',\n    'description': localize('less.builtin.green', 'returns the `green` channel of `@color`')\n  }, {\n    'name': 'blue',\n    'example': 'blue(@color);',\n    'description': localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\n  }, {\n    'name': 'alpha',\n    'example': 'alpha(@color);',\n    'description': localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\n  }, {\n    'name': 'luma',\n    'example': 'luma(@color);',\n    'description': localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\n  }, {\n    'name': 'saturate',\n    'example': 'saturate(@color, 10%);',\n    'description': localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\n  }, {\n    'name': 'desaturate',\n    'example': 'desaturate(@color, 10%);',\n    'description': localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\n  }, {\n    'name': 'lighten',\n    'example': 'lighten(@color, 10%);',\n    'description': localize('less.builtin.lighten', 'return `@color` 10% points lighter')\n  }, {\n    'name': 'darken',\n    'example': 'darken(@color, 10%);',\n    'description': localize('less.builtin.darken', 'return `@color` 10% points darker')\n  }, {\n    'name': 'fadein',\n    'example': 'fadein(@color, 10%);',\n    'description': localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\n  }, {\n    'name': 'fadeout',\n    'example': 'fadeout(@color, 10%);',\n    'description': localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\n  }, {\n    'name': 'fade',\n    'example': 'fade(@color, 50%);',\n    'description': localize('less.builtin.fade', 'return `@color` with 50% transparency')\n  }, {\n    'name': 'spin',\n    'example': 'spin(@color, 10);',\n    'description': localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\n  }, {\n    'name': 'mix',\n    'example': 'mix(@color1, @color2, [@weight: 50%]);',\n    'description': localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\n  }, {\n    'name': 'greyscale',\n    'example': 'greyscale(@color);',\n    'description': localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color')\n  }, {\n    'name': 'contrast',\n    'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\n    'description': localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\n  }, {\n    'name': 'multiply',\n    'example': 'multiply(@color1, @color2);'\n  }, {\n    'name': 'screen',\n    'example': 'screen(@color1, @color2);'\n  }, {\n    'name': 'overlay',\n    'example': 'overlay(@color1, @color2);'\n  }, {\n    'name': 'softlight',\n    'example': 'softlight(@color1, @color2);'\n  }, {\n    'name': 'hardlight',\n    'example': 'hardlight(@color1, @color2);'\n  }, {\n    'name': 'difference',\n    'example': 'difference(@color1, @color2);'\n  }, {\n    'name': 'exclusion',\n    'example': 'exclusion(@color1, @color2);'\n  }, {\n    'name': 'average',\n    'example': 'average(@color1, @color2);'\n  }, {\n    'name': 'negation',\n    'example': 'negation(@color1, @color2);'\n  }];\n  return LESSCompletion;\n}(CSSCompletion);\n\nexport { LESSCompletion };","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","CSSCompletion","CompletionItemKind","InsertTextFormat","TextEdit","nls","localize","loadMessageBundle","LESSCompletion","_super","clientCapabilities","call","createFunctionProposals","proposals","existingNode","sortToEnd","result","_i","proposals_1","length","item","label","name","detail","example","documentation","description","textEdit","replace","getCompletionRange","insertTextFormat","Snippet","kind","Function","sortText","items","push","getTermProposals","entry","functions","builtInProposals","filter","f","type","restrictions","indexOf","getColorProposals","colorProposals","getCompletionsForDeclarationProperty","declaration","getCompletionsForSelector"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CSSCompletion } from './cssCompletion.js';\nimport { CompletionItemKind, InsertTextFormat, TextEdit } from '../cssLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar LESSCompletion = /** @class */ (function (_super) {\n    __extends(LESSCompletion, _super);\n    function LESSCompletion(clientCapabilities) {\n        return _super.call(this, '@', clientCapabilities) || this;\n    }\n    LESSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n        for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n            var p = proposals_1[_i];\n            var item = {\n                label: p.name,\n                detail: p.example,\n                documentation: p.description,\n                textEdit: TextEdit.replace(this.getCompletionRange(existingNode), p.name + '($0)'),\n                insertTextFormat: InsertTextFormat.Snippet,\n                kind: CompletionItemKind.Function\n            };\n            if (sortToEnd) {\n                item.sortText = 'z';\n            }\n            result.items.push(item);\n        }\n        return result;\n    };\n    LESSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var functions = LESSCompletion.builtInProposals;\n        if (entry) {\n            functions = functions.filter(function (f) { return !f.type || !entry.restrictions || entry.restrictions.indexOf(f.type) !== -1; });\n        }\n        this.createFunctionProposals(functions, existingNode, true, result);\n        return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        this.createFunctionProposals(LESSCompletion.colorProposals, existingNode, false, result);\n        return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        this.getCompletionsForSelector(null, true, result);\n        return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n    };\n    LESSCompletion.builtInProposals = [\n        // Boolean functions\n        {\n            'name': 'if',\n            'example': 'if(condition, trueValue [, falseValue]);',\n            'description': localize('less.builtin.if', 'returns one of two values depending on a condition.')\n        },\n        {\n            'name': 'boolean',\n            'example': 'boolean(condition);',\n            'description': localize('less.builtin.boolean', '\"store\" a boolean test for later evaluation in a guard or if().')\n        },\n        // List functions\n        {\n            'name': 'length',\n            'example': 'length(@list);',\n            'description': localize('less.builtin.length', 'returns the number of elements in a value list')\n        },\n        {\n            'name': 'extract',\n            'example': 'extract(@list, index);',\n            'description': localize('less.builtin.extract', 'returns a value at the specified position in the list')\n        },\n        {\n            'name': 'range',\n            'example': 'range([start, ] end [, step]);',\n            'description': localize('less.builtin.range', 'generate a list spanning a range of values')\n        },\n        {\n            'name': 'each',\n            'example': 'each(@list, ruleset);',\n            'description': localize('less.builtin.each', 'bind the evaluation of a ruleset to each member of a list.')\n        },\n        // Other built-ins\n        {\n            'name': 'escape',\n            'example': 'escape(@string);',\n            'description': localize('less.builtin.escape', 'URL encodes a string')\n        },\n        {\n            'name': 'e',\n            'example': 'e(@string);',\n            'description': localize('less.builtin.e', 'escape string content')\n        },\n        {\n            'name': 'replace',\n            'example': 'replace(@string, @pattern, @replacement[, @flags]);',\n            'description': localize('less.builtin.replace', 'string replace')\n        },\n        {\n            'name': 'unit',\n            'example': 'unit(@dimension, [@unit: \\'\\']);',\n            'description': localize('less.builtin.unit', 'remove or change the unit of a dimension')\n        },\n        {\n            'name': 'color',\n            'example': 'color(@string);',\n            'description': localize('less.builtin.color', 'parses a string to a color'),\n            'type': 'color'\n        },\n        {\n            'name': 'convert',\n            'example': 'convert(@value, unit);',\n            'description': localize('less.builtin.convert', 'converts numbers from one type into another')\n        },\n        {\n            'name': 'data-uri',\n            'example': 'data-uri([mimetype,] url);',\n            'description': localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`'),\n            'type': 'url'\n        },\n        {\n            'name': 'abs',\n            'description': localize('less.builtin.abs', 'absolute value of a number'),\n            'example': 'abs(number);'\n        },\n        {\n            'name': 'acos',\n            'description': localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\n            'example': 'acos(number);'\n        },\n        {\n            'name': 'asin',\n            'description': localize('less.builtin.asin', 'arcsine - inverse of sine function'),\n            'example': 'asin(number);'\n        },\n        {\n            'name': 'ceil',\n            'example': 'ceil(@number);',\n            'description': localize('less.builtin.ceil', 'rounds up to an integer')\n        },\n        {\n            'name': 'cos',\n            'description': localize('less.builtin.cos', 'cosine function'),\n            'example': 'cos(number);'\n        },\n        {\n            'name': 'floor',\n            'description': localize('less.builtin.floor', 'rounds down to an integer'),\n            'example': 'floor(@number);'\n        },\n        {\n            'name': 'percentage',\n            'description': localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\n            'example': 'percentage(@number);',\n            'type': 'percentage'\n        },\n        {\n            'name': 'round',\n            'description': localize('less.builtin.round', 'rounds a number to a number of places'),\n            'example': 'round(number, [places: 0]);'\n        },\n        {\n            'name': 'sqrt',\n            'description': localize('less.builtin.sqrt', 'calculates square root of a number'),\n            'example': 'sqrt(number);'\n        },\n        {\n            'name': 'sin',\n            'description': localize('less.builtin.sin', 'sine function'),\n            'example': 'sin(number);'\n        },\n        {\n            'name': 'tan',\n            'description': localize('less.builtin.tan', 'tangent function'),\n            'example': 'tan(number);'\n        },\n        {\n            'name': 'atan',\n            'description': localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\n            'example': 'atan(number);'\n        },\n        {\n            'name': 'pi',\n            'description': localize('less.builtin.pi', 'returns pi'),\n            'example': 'pi();'\n        },\n        {\n            'name': 'pow',\n            'description': localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\n            'example': 'pow(@base, @exponent);'\n        },\n        {\n            'name': 'mod',\n            'description': localize('less.builtin.mod', 'first argument modulus second argument'),\n            'example': 'mod(number, number);'\n        },\n        {\n            'name': 'min',\n            'description': localize('less.builtin.min', 'returns the lowest of one or more values'),\n            'example': 'min(@x, @y);'\n        },\n        {\n            'name': 'max',\n            'description': localize('less.builtin.max', 'returns the lowest of one or more values'),\n            'example': 'max(@x, @y);'\n        }\n    ];\n    LESSCompletion.colorProposals = [\n        {\n            'name': 'argb',\n            'example': 'argb(@color);',\n            'description': localize('less.builtin.argb', 'creates a #AARRGGBB')\n        },\n        {\n            'name': 'hsl',\n            'example': 'hsl(@hue, @saturation, @lightness);',\n            'description': localize('less.builtin.hsl', 'creates a color')\n        },\n        {\n            'name': 'hsla',\n            'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\n            'description': localize('less.builtin.hsla', 'creates a color')\n        },\n        {\n            'name': 'hsv',\n            'example': 'hsv(@hue, @saturation, @value);',\n            'description': localize('less.builtin.hsv', 'creates a color')\n        },\n        {\n            'name': 'hsva',\n            'example': 'hsva(@hue, @saturation, @value, @alpha);',\n            'description': localize('less.builtin.hsva', 'creates a color')\n        },\n        {\n            'name': 'hue',\n            'example': 'hue(@color);',\n            'description': localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'saturation',\n            'example': 'saturation(@color);',\n            'description': localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'lightness',\n            'example': 'lightness(@color);',\n            'description': localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'hsvhue',\n            'example': 'hsvhue(@color);',\n            'description': localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvsaturation',\n            'example': 'hsvsaturation(@color);',\n            'description': localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvvalue',\n            'example': 'hsvvalue(@color);',\n            'description': localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'red',\n            'example': 'red(@color);',\n            'description': localize('less.builtin.red', 'returns the `red` channel of `@color`')\n        },\n        {\n            'name': 'green',\n            'example': 'green(@color);',\n            'description': localize('less.builtin.green', 'returns the `green` channel of `@color`')\n        },\n        {\n            'name': 'blue',\n            'example': 'blue(@color);',\n            'description': localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\n        },\n        {\n            'name': 'alpha',\n            'example': 'alpha(@color);',\n            'description': localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\n        },\n        {\n            'name': 'luma',\n            'example': 'luma(@color);',\n            'description': localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\n        },\n        {\n            'name': 'saturate',\n            'example': 'saturate(@color, 10%);',\n            'description': localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\n        },\n        {\n            'name': 'desaturate',\n            'example': 'desaturate(@color, 10%);',\n            'description': localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\n        },\n        {\n            'name': 'lighten',\n            'example': 'lighten(@color, 10%);',\n            'description': localize('less.builtin.lighten', 'return `@color` 10% points lighter')\n        },\n        {\n            'name': 'darken',\n            'example': 'darken(@color, 10%);',\n            'description': localize('less.builtin.darken', 'return `@color` 10% points darker')\n        },\n        {\n            'name': 'fadein',\n            'example': 'fadein(@color, 10%);',\n            'description': localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\n        },\n        {\n            'name': 'fadeout',\n            'example': 'fadeout(@color, 10%);',\n            'description': localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\n        },\n        {\n            'name': 'fade',\n            'example': 'fade(@color, 50%);',\n            'description': localize('less.builtin.fade', 'return `@color` with 50% transparency')\n        },\n        {\n            'name': 'spin',\n            'example': 'spin(@color, 10);',\n            'description': localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\n        },\n        {\n            'name': 'mix',\n            'example': 'mix(@color1, @color2, [@weight: 50%]);',\n            'description': localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\n        },\n        {\n            'name': 'greyscale',\n            'example': 'greyscale(@color);',\n            'description': localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color'),\n        },\n        {\n            'name': 'contrast',\n            'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\n            'description': localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\n        },\n        {\n            'name': 'multiply',\n            'example': 'multiply(@color1, @color2);'\n        },\n        {\n            'name': 'screen',\n            'example': 'screen(@color1, @color2);'\n        },\n        {\n            'name': 'overlay',\n            'example': 'overlay(@color1, @color2);'\n        },\n        {\n            'name': 'softlight',\n            'example': 'softlight(@color1, @color2);'\n        },\n        {\n            'name': 'hardlight',\n            'example': 'hardlight(@color1, @color2);'\n        },\n        {\n            'name': 'difference',\n            'example': 'difference(@color1, @color2);'\n        },\n        {\n            'name': 'exclusion',\n            'example': 'exclusion(@color1, @color2);'\n        },\n        {\n            'name': 'average',\n            'example': 'average(@color1, @color2);'\n        },\n        {\n            'name': 'negation',\n            'example': 'negation(@color1, @color2);'\n        }\n    ];\n    return LESSCompletion;\n}(CSSCompletion));\nexport { LESSCompletion };\n"]},"metadata":{},"sourceType":"module"}