{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from '../parser/htmlScanner.js';\nimport { DocumentHighlightKind } from './../_deps/vscode-languageserver-types/main.js';\nimport { TokenType } from '../htmlLanguageTypes.js';\nexport function findDocumentHighlights(document, position, htmlDocument) {\n  var offset = document.offsetAt(position);\n  var node = htmlDocument.findNodeAt(offset);\n\n  if (!node.tag) {\n    return [];\n  }\n\n  var result = [];\n  var startTagRange = getTagNameRange(TokenType.StartTag, document, node.start);\n  var endTagRange = typeof node.endTagStart === 'number' && getTagNameRange(TokenType.EndTag, document, node.endTagStart);\n\n  if (startTagRange && covers(startTagRange, position) || endTagRange && covers(endTagRange, position)) {\n    if (startTagRange) {\n      result.push({\n        kind: DocumentHighlightKind.Read,\n        range: startTagRange\n      });\n    }\n\n    if (endTagRange) {\n      result.push({\n        kind: DocumentHighlightKind.Read,\n        range: endTagRange\n      });\n    }\n  }\n\n  return result;\n}\n\nfunction isBeforeOrEqual(pos1, pos2) {\n  return pos1.line < pos2.line || pos1.line === pos2.line && pos1.character <= pos2.character;\n}\n\nfunction covers(range, position) {\n  return isBeforeOrEqual(range.start, position) && isBeforeOrEqual(position, range.end);\n}\n\nfunction getTagNameRange(tokenType, document, startOffset) {\n  var scanner = createScanner(document.getText(), startOffset);\n  var token = scanner.scan();\n\n  while (token !== TokenType.EOS && token !== tokenType) {\n    token = scanner.scan();\n  }\n\n  if (token !== TokenType.EOS) {\n    return {\n      start: document.positionAt(scanner.getTokenOffset()),\n      end: document.positionAt(scanner.getTokenEnd())\n    };\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHighlighting.js"],"names":["createScanner","DocumentHighlightKind","TokenType","findDocumentHighlights","document","position","htmlDocument","offset","offsetAt","node","findNodeAt","tag","result","startTagRange","getTagNameRange","StartTag","start","endTagRange","endTagStart","EndTag","covers","push","kind","Read","range","isBeforeOrEqual","pos1","pos2","line","character","end","tokenType","startOffset","scanner","getText","token","scan","EOS","positionAt","getTokenOffset","getTokenEnd"],"mappings":"AAAA;;;;AAIA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SAASC,qBAAT,QAAsC,gDAAtC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAO,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,QAA1C,EAAoDC,YAApD,EAAkE;AACrE,MAAIC,MAAM,GAAGH,QAAQ,CAACI,QAAT,CAAkBH,QAAlB,CAAb;AACA,MAAII,IAAI,GAAGH,YAAY,CAACI,UAAb,CAAwBH,MAAxB,CAAX;;AACA,MAAI,CAACE,IAAI,CAACE,GAAV,EAAe;AACX,WAAO,EAAP;AACH;;AACD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,aAAa,GAAGC,eAAe,CAACZ,SAAS,CAACa,QAAX,EAAqBX,QAArB,EAA+BK,IAAI,CAACO,KAApC,CAAnC;AACA,MAAIC,WAAW,GAAG,OAAOR,IAAI,CAACS,WAAZ,KAA4B,QAA5B,IAAwCJ,eAAe,CAACZ,SAAS,CAACiB,MAAX,EAAmBf,QAAnB,EAA6BK,IAAI,CAACS,WAAlC,CAAzE;;AACA,MAAIL,aAAa,IAAIO,MAAM,CAACP,aAAD,EAAgBR,QAAhB,CAAvB,IAAoDY,WAAW,IAAIG,MAAM,CAACH,WAAD,EAAcZ,QAAd,CAA7E,EAAsG;AAClG,QAAIQ,aAAJ,EAAmB;AACfD,MAAAA,MAAM,CAACS,IAAP,CAAY;AAAEC,QAAAA,IAAI,EAAErB,qBAAqB,CAACsB,IAA9B;AAAoCC,QAAAA,KAAK,EAAEX;AAA3C,OAAZ;AACH;;AACD,QAAII,WAAJ,EAAiB;AACbL,MAAAA,MAAM,CAACS,IAAP,CAAY;AAAEC,QAAAA,IAAI,EAAErB,qBAAqB,CAACsB,IAA9B;AAAoCC,QAAAA,KAAK,EAAEP;AAA3C,OAAZ;AACH;AACJ;;AACD,SAAOL,MAAP;AACH;;AACD,SAASa,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AACjC,SAAOD,IAAI,CAACE,IAAL,GAAYD,IAAI,CAACC,IAAjB,IAA0BF,IAAI,CAACE,IAAL,KAAcD,IAAI,CAACC,IAAnB,IAA2BF,IAAI,CAACG,SAAL,IAAkBF,IAAI,CAACE,SAAnF;AACH;;AACD,SAAST,MAAT,CAAgBI,KAAhB,EAAuBnB,QAAvB,EAAiC;AAC7B,SAAOoB,eAAe,CAACD,KAAK,CAACR,KAAP,EAAcX,QAAd,CAAf,IAA0CoB,eAAe,CAACpB,QAAD,EAAWmB,KAAK,CAACM,GAAjB,CAAhE;AACH;;AACD,SAAShB,eAAT,CAAyBiB,SAAzB,EAAoC3B,QAApC,EAA8C4B,WAA9C,EAA2D;AACvD,MAAIC,OAAO,GAAGjC,aAAa,CAACI,QAAQ,CAAC8B,OAAT,EAAD,EAAqBF,WAArB,CAA3B;AACA,MAAIG,KAAK,GAAGF,OAAO,CAACG,IAAR,EAAZ;;AACA,SAAOD,KAAK,KAAKjC,SAAS,CAACmC,GAApB,IAA2BF,KAAK,KAAKJ,SAA5C,EAAuD;AACnDI,IAAAA,KAAK,GAAGF,OAAO,CAACG,IAAR,EAAR;AACH;;AACD,MAAID,KAAK,KAAKjC,SAAS,CAACmC,GAAxB,EAA6B;AACzB,WAAO;AAAErB,MAAAA,KAAK,EAAEZ,QAAQ,CAACkC,UAAT,CAAoBL,OAAO,CAACM,cAAR,EAApB,CAAT;AAAwDT,MAAAA,GAAG,EAAE1B,QAAQ,CAACkC,UAAT,CAAoBL,OAAO,CAACO,WAAR,EAApB;AAA7D,KAAP;AACH;;AACD,SAAO,IAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from '../parser/htmlScanner.js';\nimport { DocumentHighlightKind } from './../_deps/vscode-languageserver-types/main.js';\nimport { TokenType } from '../htmlLanguageTypes.js';\nexport function findDocumentHighlights(document, position, htmlDocument) {\n    var offset = document.offsetAt(position);\n    var node = htmlDocument.findNodeAt(offset);\n    if (!node.tag) {\n        return [];\n    }\n    var result = [];\n    var startTagRange = getTagNameRange(TokenType.StartTag, document, node.start);\n    var endTagRange = typeof node.endTagStart === 'number' && getTagNameRange(TokenType.EndTag, document, node.endTagStart);\n    if (startTagRange && covers(startTagRange, position) || endTagRange && covers(endTagRange, position)) {\n        if (startTagRange) {\n            result.push({ kind: DocumentHighlightKind.Read, range: startTagRange });\n        }\n        if (endTagRange) {\n            result.push({ kind: DocumentHighlightKind.Read, range: endTagRange });\n        }\n    }\n    return result;\n}\nfunction isBeforeOrEqual(pos1, pos2) {\n    return pos1.line < pos2.line || (pos1.line === pos2.line && pos1.character <= pos2.character);\n}\nfunction covers(range, position) {\n    return isBeforeOrEqual(range.start, position) && isBeforeOrEqual(position, range.end);\n}\nfunction getTagNameRange(tokenType, document, startOffset) {\n    var scanner = createScanner(document.getText(), startOffset);\n    var token = scanner.scan();\n    while (token !== TokenType.EOS && token !== tokenType) {\n        token = scanner.scan();\n    }\n    if (token !== TokenType.EOS) {\n        return { start: document.positionAt(scanner.getTokenOffset()), end: document.positionAt(scanner.getTokenEnd()) };\n    }\n    return null;\n}\n"]},"metadata":{},"sourceType":"module"}