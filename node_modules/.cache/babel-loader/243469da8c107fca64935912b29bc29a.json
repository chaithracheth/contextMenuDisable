{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var browserNames = {\n  E: 'Edge',\n  FF: 'Firefox',\n  S: 'Safari',\n  C: 'Chrome',\n  IE: 'IE',\n  O: 'Opera'\n};\n\nfunction getEntryStatus(status) {\n  switch (status) {\n    case 'experimental':\n      return '⚠️ Property is experimental. Be cautious when using it.️\\n\\n';\n\n    case 'nonstandard':\n      return '🚨️ Property is nonstandard. Avoid using it.\\n\\n';\n\n    case 'obsolete':\n      return '🚨️️️ Property is obsolete. Avoid using it.\\n\\n';\n\n    default:\n      return '';\n  }\n}\n\nexport function getEntryDescription(entry, doesSupportMarkdown) {\n  if (doesSupportMarkdown) {\n    return {\n      kind: 'markdown',\n      value: getEntryMarkdownDescription(entry)\n    };\n  } else {\n    return {\n      kind: 'plaintext',\n      value: getEntryStringDescription(entry)\n    };\n  }\n}\n\nfunction getEntryStringDescription(entry) {\n  if (!entry.description || entry.description === '') {\n    return '';\n  }\n\n  if (typeof entry.description !== 'string') {\n    return entry.description.value;\n  }\n\n  var result = '';\n\n  if (entry.status) {\n    result += getEntryStatus(entry.status);\n  }\n\n  result += entry.description;\n  var browserLabel = getBrowserLabel(entry.browsers);\n\n  if (browserLabel) {\n    result += '\\n(' + browserLabel + ')';\n  }\n\n  if ('syntax' in entry) {\n    result += \"\\n\\nSyntax: \" + entry.syntax;\n  }\n\n  if (entry.references && entry.references.length > 0) {\n    result += '\\n\\n';\n    result += entry.references.map(function (r) {\n      return r.name + \": \" + r.url;\n    }).join(' | ');\n  }\n\n  return result;\n}\n\nfunction getEntryMarkdownDescription(entry) {\n  if (!entry.description || entry.description === '') {\n    return '';\n  }\n\n  var result = '';\n\n  if (entry.status) {\n    result += getEntryStatus(entry.status);\n  }\n\n  if (typeof entry.description === 'string') {\n    result += entry.description;\n  } else {\n    result = entry.description.value;\n  }\n\n  var browserLabel = getBrowserLabel(entry.browsers);\n\n  if (browserLabel) {\n    result += '\\n\\n(' + browserLabel + ')';\n  }\n\n  if ('syntax' in entry) {\n    result += \"\\n\\nSyntax: \" + entry.syntax;\n  }\n\n  if (entry.references && entry.references.length > 0) {\n    result += '\\n\\n';\n    result += entry.references.map(function (r) {\n      return \"[\" + r.name + \"](\" + r.url + \")\";\n    }).join(' | ');\n  }\n\n  return result;\n}\n/**\n * Input is like `[\"E12\",\"FF49\",\"C47\",\"IE\",\"O\"]`\n * Output is like `Edge 12, Firefox 49, Chrome 47, IE, Opera`\n */\n\n\nexport function getBrowserLabel(browsers) {\n  if (browsers === void 0) {\n    browsers = [];\n  }\n\n  if (browsers.length === 0) {\n    return null;\n  }\n\n  return browsers.map(function (b) {\n    var result = '';\n    var matches = b.match(/([A-Z]+)(\\d+)?/);\n    var name = matches[1];\n    var version = matches[2];\n\n    if (name in browserNames) {\n      result += browserNames[name];\n    }\n\n    if (version) {\n      result += ' ' + version;\n    }\n\n    return result;\n  }).join(', ');\n}","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/entry.js"],"names":["browserNames","E","FF","S","C","IE","O","getEntryStatus","status","getEntryDescription","entry","doesSupportMarkdown","kind","value","getEntryMarkdownDescription","getEntryStringDescription","description","result","browserLabel","getBrowserLabel","browsers","syntax","references","length","map","r","name","url","join","b","matches","match","version"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var browserNames = {\n    E: 'Edge',\n    FF: 'Firefox',\n    S: 'Safari',\n    C: 'Chrome',\n    IE: 'IE',\n    O: 'Opera'\n};\nfunction getEntryStatus(status) {\n    switch (status) {\n        case 'experimental':\n            return '⚠️ Property is experimental. Be cautious when using it.️\\n\\n';\n        case 'nonstandard':\n            return '🚨️ Property is nonstandard. Avoid using it.\\n\\n';\n        case 'obsolete':\n            return '🚨️️️ Property is obsolete. Avoid using it.\\n\\n';\n        default:\n            return '';\n    }\n}\nexport function getEntryDescription(entry, doesSupportMarkdown) {\n    if (doesSupportMarkdown) {\n        return {\n            kind: 'markdown',\n            value: getEntryMarkdownDescription(entry)\n        };\n    }\n    else {\n        return {\n            kind: 'plaintext',\n            value: getEntryStringDescription(entry)\n        };\n    }\n}\nfunction getEntryStringDescription(entry) {\n    if (!entry.description || entry.description === '') {\n        return '';\n    }\n    if (typeof entry.description !== 'string') {\n        return entry.description.value;\n    }\n    var result = '';\n    if (entry.status) {\n        result += getEntryStatus(entry.status);\n    }\n    result += entry.description;\n    var browserLabel = getBrowserLabel(entry.browsers);\n    if (browserLabel) {\n        result += '\\n(' + browserLabel + ')';\n    }\n    if ('syntax' in entry) {\n        result += \"\\n\\nSyntax: \" + entry.syntax;\n    }\n    if (entry.references && entry.references.length > 0) {\n        result += '\\n\\n';\n        result += entry.references.map(function (r) {\n            return r.name + \": \" + r.url;\n        }).join(' | ');\n    }\n    return result;\n}\nfunction getEntryMarkdownDescription(entry) {\n    if (!entry.description || entry.description === '') {\n        return '';\n    }\n    var result = '';\n    if (entry.status) {\n        result += getEntryStatus(entry.status);\n    }\n    if (typeof entry.description === 'string') {\n        result += entry.description;\n    }\n    else {\n        result = entry.description.value;\n    }\n    var browserLabel = getBrowserLabel(entry.browsers);\n    if (browserLabel) {\n        result += '\\n\\n(' + browserLabel + ')';\n    }\n    if ('syntax' in entry) {\n        result += \"\\n\\nSyntax: \" + entry.syntax;\n    }\n    if (entry.references && entry.references.length > 0) {\n        result += '\\n\\n';\n        result += entry.references.map(function (r) {\n            return \"[\" + r.name + \"](\" + r.url + \")\";\n        }).join(' | ');\n    }\n    return result;\n}\n/**\n * Input is like `[\"E12\",\"FF49\",\"C47\",\"IE\",\"O\"]`\n * Output is like `Edge 12, Firefox 49, Chrome 47, IE, Opera`\n */\nexport function getBrowserLabel(browsers) {\n    if (browsers === void 0) { browsers = []; }\n    if (browsers.length === 0) {\n        return null;\n    }\n    return browsers\n        .map(function (b) {\n        var result = '';\n        var matches = b.match(/([A-Z]+)(\\d+)?/);\n        var name = matches[1];\n        var version = matches[2];\n        if (name in browserNames) {\n            result += browserNames[name];\n        }\n        if (version) {\n            result += ' ' + version;\n        }\n        return result;\n    })\n        .join(', ');\n}\n"]},"metadata":{},"sourceType":"module"}