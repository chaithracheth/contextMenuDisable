{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as lessScanner from './lessScanner.js';\nimport { TokenType } from './cssScanner.js';\nimport * as cssParser from './cssParser.js';\nimport * as nodes from './cssNodes.js';\nimport { ParseError } from './cssErrors.js'; /// <summary>\n/// A parser for LESS\n/// http://lesscss.org/\n/// </summary>\n\nvar LESSParser =\n/** @class */\nfunction (_super) {\n  __extends(LESSParser, _super);\n\n  function LESSParser() {\n    return _super.call(this, new lessScanner.LESSScanner()) || this;\n  }\n\n  LESSParser.prototype._parseStylesheetStatement = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseVariableDeclaration() || this._parsePlugin() || _super.prototype._parseStylesheetAtStatement.call(this, isNested);\n    }\n\n    return this._tryParseMixinDeclaration() || this._tryParseMixinReference() || this._parseFunction() || this._parseRuleset(true);\n  };\n\n  LESSParser.prototype._parseImport = function () {\n    if (!this.peekKeyword('@import') && !this.peekKeyword('@import-once')\n    /* deprecated in less 1.4.1 */\n    ) {\n        return null;\n      }\n\n    var node = this.create(nodes.Import);\n    this.consumeToken(); // less 1.4.1: @import (css) \"lib\"\n\n    if (this.accept(TokenType.ParenthesisL)) {\n      if (!this.accept(TokenType.Ident)) {\n        return this.finish(node, ParseError.IdentifierExpected, [TokenType.SemiColon]);\n      }\n\n      do {\n        if (!this.accept(TokenType.Comma)) {\n          break;\n        }\n      } while (this.accept(TokenType.Ident));\n\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.SemiColon]);\n      }\n    }\n\n    if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.URIOrStringExpected, [TokenType.SemiColon]);\n    }\n\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      node.setMedialist(this._parseMediaQueryList());\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parsePlugin = function () {\n    if (!this.peekKeyword('@plugin')) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.Plugin);\n    this.consumeToken(); // @import\n\n    if (!node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.StringLiteralExpected);\n    }\n\n    if (!this.accept(TokenType.SemiColon)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parseMediaQuery = function (resyncStopToken) {\n    var node = _super.prototype._parseMediaQuery.call(this, resyncStopToken);\n\n    if (!node) {\n      var node_1 = this.create(nodes.MediaQuery);\n\n      if (node_1.addChild(this._parseVariable())) {\n        return this.finish(node_1);\n      }\n\n      return null;\n    }\n\n    return node;\n  };\n\n  LESSParser.prototype._parseMediaDeclaration = function (isNested) {\n    if (isNested === void 0) {\n      isNested = false;\n    }\n\n    return this._tryParseRuleset(isNested) || this._tryToParseDeclaration() || this._tryParseMixinDeclaration() || this._tryParseMixinReference() || this._parseDetachedRuleSetMixin() || this._parseStylesheetStatement(isNested);\n  };\n\n  LESSParser.prototype._parseMediaFeatureName = function () {\n    return this._parseIdent() || this._parseVariable();\n  };\n\n  LESSParser.prototype._parseVariableDeclaration = function (panic) {\n    if (panic === void 0) {\n      panic = [];\n    }\n\n    var node = this.create(nodes.VariableDeclaration);\n    var mark = this.mark();\n\n    if (!node.setVariable(this._parseVariable(true))) {\n      return null;\n    }\n\n    if (this.accept(TokenType.Colon)) {\n      if (this.prevToken) {\n        node.colonPosition = this.prevToken.offset;\n      }\n\n      if (node.setValue(this._parseDetachedRuleSet())) {\n        node.needsSemicolon = false;\n      } else if (!node.setValue(this._parseExpr())) {\n        return this.finish(node, ParseError.VariableValueExpected, [], panic);\n      }\n\n      node.addChild(this._parsePrio());\n    } else {\n      this.restoreAtMark(mark);\n      return null; // at keyword, but no ':', not a variable declaration but some at keyword\n    }\n\n    if (this.peek(TokenType.SemiColon)) {\n      node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parseDetachedRuleSet = function () {\n    var mark = this.mark(); // \"Anonymous mixin\" used in each() and possibly a generic type in the future\n\n    if (this.peekDelim('#') || this.peekDelim('.')) {\n      this.consumeToken();\n\n      if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n        var node = this.create(nodes.MixinDeclaration);\n\n        if (node.getParameters().addChild(this._parseMixinParameter())) {\n          while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n            if (this.peek(TokenType.ParenthesisR)) {\n              break;\n            }\n\n            if (!node.getParameters().addChild(this._parseMixinParameter())) {\n              this.markError(node, ParseError.IdentifierExpected, [], [TokenType.ParenthesisR]);\n            }\n          }\n        }\n\n        if (!this.accept(TokenType.ParenthesisR)) {\n          this.restoreAtMark(mark);\n          return null;\n        }\n      } else {\n        this.restoreAtMark(mark);\n        return null;\n      }\n    }\n\n    if (!this.peek(TokenType.CurlyL)) {\n      return null;\n    }\n\n    var content = this.create(nodes.BodyDeclaration);\n\n    this._parseBody(content, this._parseDetachedRuleSetBody.bind(this));\n\n    return this.finish(content);\n  };\n\n  LESSParser.prototype._parseDetachedRuleSetBody = function () {\n    return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n  };\n\n  LESSParser.prototype._addLookupChildren = function (node) {\n    if (!node.addChild(this._parseLookupValue())) {\n      return false;\n    }\n\n    var expectsValue = false;\n\n    while (true) {\n      if (this.peek(TokenType.BracketL)) {\n        expectsValue = true;\n      }\n\n      if (!node.addChild(this._parseLookupValue())) {\n        break;\n      }\n\n      expectsValue = false;\n    }\n\n    return !expectsValue;\n  };\n\n  LESSParser.prototype._parseLookupValue = function () {\n    var node = this.create(nodes.Node);\n    var mark = this.mark();\n\n    if (!this.accept(TokenType.BracketL)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    if ((node.addChild(this._parseVariable(false, true)) || node.addChild(this._parsePropertyIdentifier())) && this.accept(TokenType.BracketR) || this.accept(TokenType.BracketR)) {\n      return node;\n    }\n\n    this.restoreAtMark(mark);\n    return null;\n  };\n\n  LESSParser.prototype._parseVariable = function (declaration, insideLookup) {\n    if (declaration === void 0) {\n      declaration = false;\n    }\n\n    if (insideLookup === void 0) {\n      insideLookup = false;\n    }\n\n    var isPropertyReference = !declaration && this.peekDelim('$');\n\n    if (!this.peekDelim('@') && !isPropertyReference && !this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Variable);\n    var mark = this.mark();\n\n    while (this.acceptDelim('@') || !declaration && this.acceptDelim('$')) {\n      if (this.hasWhitespace()) {\n        this.restoreAtMark(mark);\n        return null;\n      }\n    }\n\n    if (!this.accept(TokenType.AtKeyword) && !this.accept(TokenType.Ident)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    if (!insideLookup && this.peek(TokenType.BracketL)) {\n      if (!this._addLookupChildren(node)) {\n        this.restoreAtMark(mark);\n        return null;\n      }\n    }\n\n    return node;\n  };\n\n  LESSParser.prototype._parseTerm = function () {\n    var term = _super.prototype._parseTerm.call(this);\n\n    if (term) {\n      return term;\n    }\n\n    term = this.create(nodes.Term);\n\n    if (term.setExpression(this._parseVariable()) || term.setExpression(this._parseEscaped()) || term.setExpression(this._tryParseMixinReference(false))) {\n      return this.finish(term);\n    }\n\n    return null;\n  };\n\n  LESSParser.prototype._parseEscaped = function () {\n    if (this.peek(TokenType.EscapedJavaScript) || this.peek(TokenType.BadEscapedJavaScript)) {\n      var node = this.createNode(nodes.NodeType.EscapedValue);\n      this.consumeToken();\n      return this.finish(node);\n    }\n\n    if (this.peekDelim('~')) {\n      var node = this.createNode(nodes.NodeType.EscapedValue);\n      this.consumeToken();\n\n      if (this.accept(TokenType.String) || this.accept(TokenType.EscapedJavaScript)) {\n        return this.finish(node);\n      } else {\n        return this.finish(node, ParseError.TermExpected);\n      }\n    }\n\n    return null;\n  };\n\n  LESSParser.prototype._parseOperator = function () {\n    var node = this._parseGuardOperator();\n\n    if (node) {\n      return node;\n    } else {\n      return _super.prototype._parseOperator.call(this);\n    }\n  };\n\n  LESSParser.prototype._parseGuardOperator = function () {\n    if (this.peekDelim('>')) {\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      this.acceptDelim('=');\n      return node;\n    } else if (this.peekDelim('=')) {\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      this.acceptDelim('<');\n      return node;\n    } else if (this.peekDelim('<')) {\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      this.acceptDelim('=');\n      return node;\n    }\n\n    return null;\n  };\n\n  LESSParser.prototype._parseRuleSetDeclaration = function () {\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseKeyframe() || this._parseMedia(true) || this._parseImport() || this._parseSupports(true) // @supports\n      || this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n      || this._parseVariableDeclaration() // Variable declarations\n      || this._parseUnknownAtRule();\n    }\n\n    return this._tryParseMixinDeclaration() || this._tryParseRuleset(true) // nested ruleset\n    || this._tryParseMixinReference() // less mixin reference\n    || this._parseFunction() || this._parseExtend() // less extend declaration\n    || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as the last option\n  };\n\n  LESSParser.prototype._parseKeyframeIdent = function () {\n    return this._parseIdent([nodes.ReferenceType.Keyframe]) || this._parseVariable();\n  };\n\n  LESSParser.prototype._parseKeyframeSelector = function () {\n    return this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n    || _super.prototype._parseKeyframeSelector.call(this);\n  };\n\n  LESSParser.prototype._parseSimpleSelectorBody = function () {\n    return this._parseSelectorCombinator() || _super.prototype._parseSimpleSelectorBody.call(this);\n  };\n\n  LESSParser.prototype._parseSelector = function (isNested) {\n    // CSS Guards\n    var node = this.create(nodes.Selector);\n    var hasContent = false;\n\n    if (isNested) {\n      // nested selectors can start with a combinator\n      hasContent = node.addChild(this._parseCombinator());\n    }\n\n    while (node.addChild(this._parseSimpleSelector())) {\n      hasContent = true;\n      var mark = this.mark();\n\n      if (node.addChild(this._parseGuard()) && this.peek(TokenType.CurlyL)) {\n        break;\n      }\n\n      this.restoreAtMark(mark);\n      node.addChild(this._parseCombinator()); // optional\n    }\n\n    return hasContent ? this.finish(node) : null;\n  };\n\n  LESSParser.prototype._parseSelectorCombinator = function () {\n    if (this.peekDelim('&')) {\n      var node = this.createNode(nodes.NodeType.SelectorCombinator);\n      this.consumeToken();\n\n      while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(TokenType.Num) || this.accept(TokenType.Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {//  support &-foo\n      }\n\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  LESSParser.prototype._parseSelectorIdent = function () {\n    if (!this.peekInterpolatedIdent()) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.SelectorInterpolation);\n\n    var hasContent = this._acceptInterpolatedIdent(node);\n\n    return hasContent ? this.finish(node) : null;\n  };\n\n  LESSParser.prototype._parsePropertyIdentifier = function (inLookup) {\n    if (inLookup === void 0) {\n      inLookup = false;\n    }\n\n    var propertyRegex = /^[\\w-]+/;\n\n    if (!this.peekInterpolatedIdent() && !this.peekRegExp(this.token.type, propertyRegex)) {\n      return null;\n    }\n\n    var mark = this.mark();\n    var node = this.create(nodes.Identifier);\n    node.isCustomProperty = this.acceptDelim('-') && this.acceptDelim('-');\n    var childAdded = false;\n\n    if (!inLookup) {\n      if (node.isCustomProperty) {\n        childAdded = this._acceptInterpolatedIdent(node);\n      } else {\n        childAdded = this._acceptInterpolatedIdent(node, propertyRegex);\n      }\n    } else {\n      if (node.isCustomProperty) {\n        childAdded = node.addChild(this._parseIdent());\n      } else {\n        childAdded = node.addChild(this._parseRegexp(propertyRegex));\n      }\n    }\n\n    if (!childAdded) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    if (!inLookup && !this.hasWhitespace()) {\n      this.acceptDelim('+');\n\n      if (!this.hasWhitespace()) {\n        this.acceptIdent('_');\n      }\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype.peekInterpolatedIdent = function () {\n    return this.peek(TokenType.Ident) || this.peekDelim('@') || this.peekDelim('$') || this.peekDelim('-');\n  };\n\n  LESSParser.prototype._acceptInterpolatedIdent = function (node, identRegex) {\n    var _this = this;\n\n    var hasContent = false;\n\n    var indentInterpolation = function () {\n      var pos = _this.mark();\n\n      if (_this.acceptDelim('-')) {\n        if (!_this.hasWhitespace()) {\n          _this.acceptDelim('-');\n        }\n\n        if (_this.hasWhitespace()) {\n          _this.restoreAtMark(pos);\n\n          return null;\n        }\n      }\n\n      return _this._parseInterpolation();\n    };\n\n    var accept = identRegex ? function () {\n      return _this.acceptRegexp(identRegex);\n    } : function () {\n      return _this.accept(TokenType.Ident);\n    };\n\n    while (accept() || node.addChild(this._parseInterpolation() || this.try(indentInterpolation))) {\n      hasContent = true;\n\n      if (this.hasWhitespace()) {\n        break;\n      }\n    }\n\n    return hasContent;\n  };\n\n  LESSParser.prototype._parseInterpolation = function () {\n    // @{name} Variable or\n    // ${name} Property\n    var mark = this.mark();\n\n    if (this.peekDelim('@') || this.peekDelim('$')) {\n      var node = this.createNode(nodes.NodeType.Interpolation);\n      this.consumeToken();\n\n      if (this.hasWhitespace() || !this.accept(TokenType.CurlyL)) {\n        this.restoreAtMark(mark);\n        return null;\n      }\n\n      if (!node.addChild(this._parseIdent())) {\n        return this.finish(node, ParseError.IdentifierExpected);\n      }\n\n      if (!this.accept(TokenType.CurlyR)) {\n        return this.finish(node, ParseError.RightCurlyExpected);\n      }\n\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  LESSParser.prototype._tryParseMixinDeclaration = function () {\n    var mark = this.mark();\n    var node = this.create(nodes.MixinDeclaration);\n\n    if (!node.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(TokenType.ParenthesisL)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    if (node.getParameters().addChild(this._parseMixinParameter())) {\n      while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n        if (this.peek(TokenType.ParenthesisR)) {\n          break;\n        }\n\n        if (!node.getParameters().addChild(this._parseMixinParameter())) {\n          this.markError(node, ParseError.IdentifierExpected, [], [TokenType.ParenthesisR]);\n        }\n      }\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    node.setGuard(this._parseGuard());\n\n    if (!this.peek(TokenType.CurlyL)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    return this._parseBody(node, this._parseMixInBodyDeclaration.bind(this));\n  };\n\n  LESSParser.prototype._parseMixInBodyDeclaration = function () {\n    return this._parseFontFace() || this._parseRuleSetDeclaration();\n  };\n\n  LESSParser.prototype._parseMixinDeclarationIdentifier = function () {\n    var identifier;\n\n    if (this.peekDelim('#') || this.peekDelim('.')) {\n      identifier = this.create(nodes.Identifier);\n      this.consumeToken(); // # or .\n\n      if (this.hasWhitespace() || !identifier.addChild(this._parseIdent())) {\n        return null;\n      }\n    } else if (this.peek(TokenType.Hash)) {\n      identifier = this.create(nodes.Identifier);\n      this.consumeToken(); // TokenType.Hash\n    } else {\n      return null;\n    }\n\n    identifier.referenceTypes = [nodes.ReferenceType.Mixin];\n    return this.finish(identifier);\n  };\n\n  LESSParser.prototype._parsePseudo = function () {\n    if (!this.peek(TokenType.Colon)) {\n      return null;\n    }\n\n    var mark = this.mark();\n    var node = this.create(nodes.ExtendsReference);\n    this.consumeToken(); // :\n\n    if (this.acceptIdent('extend')) {\n      return this._completeExtends(node);\n    }\n\n    this.restoreAtMark(mark);\n    return _super.prototype._parsePseudo.call(this);\n  };\n\n  LESSParser.prototype._parseExtend = function () {\n    if (!this.peekDelim('&')) {\n      return null;\n    }\n\n    var mark = this.mark();\n    var node = this.create(nodes.ExtendsReference);\n    this.consumeToken(); // &\n\n    if (this.hasWhitespace() || !this.accept(TokenType.Colon) || !this.acceptIdent('extend')) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    return this._completeExtends(node);\n  };\n\n  LESSParser.prototype._completeExtends = function (node) {\n    if (!this.accept(TokenType.ParenthesisL)) {\n      return this.finish(node, ParseError.LeftParenthesisExpected);\n    }\n\n    var selectors = node.getSelectors();\n\n    if (!selectors.addChild(this._parseSelector(true))) {\n      return this.finish(node, ParseError.SelectorExpected);\n    }\n\n    while (this.accept(TokenType.Comma)) {\n      if (!selectors.addChild(this._parseSelector(true))) {\n        return this.finish(node, ParseError.SelectorExpected);\n      }\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parseDetachedRuleSetMixin = function () {\n    if (!this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n\n    var mark = this.mark();\n    var node = this.create(nodes.MixinReference);\n\n    if (node.addChild(this._parseVariable(true)) && (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL))) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._tryParseMixinReference = function (atRoot) {\n    if (atRoot === void 0) {\n      atRoot = true;\n    }\n\n    var mark = this.mark();\n    var node = this.create(nodes.MixinReference);\n\n    var identifier = this._parseMixinDeclarationIdentifier();\n\n    while (identifier) {\n      this.acceptDelim('>');\n\n      var nextId = this._parseMixinDeclarationIdentifier();\n\n      if (nextId) {\n        node.getNamespaces().addChild(identifier);\n        identifier = nextId;\n      } else {\n        break;\n      }\n    }\n\n    if (!node.setIdentifier(identifier)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    var hasArguments = false;\n\n    if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n      hasArguments = true;\n\n      if (node.getArguments().addChild(this._parseMixinArgument())) {\n        while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n          if (this.peek(TokenType.ParenthesisR)) {\n            break;\n          }\n\n          if (!node.getArguments().addChild(this._parseMixinArgument())) {\n            return this.finish(node, ParseError.ExpressionExpected);\n          }\n        }\n      }\n\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected);\n      }\n\n      identifier.referenceTypes = [nodes.ReferenceType.Mixin];\n    } else {\n      identifier.referenceTypes = [nodes.ReferenceType.Mixin, nodes.ReferenceType.Rule];\n    }\n\n    if (this.peek(TokenType.BracketL)) {\n      if (!atRoot) {\n        this._addLookupChildren(node);\n      }\n    } else {\n      node.addChild(this._parsePrio());\n    }\n\n    if (!hasArguments && !this.peek(TokenType.SemiColon) && !this.peek(TokenType.CurlyR) && !this.peek(TokenType.EOF)) {\n      this.restoreAtMark(mark);\n      return null;\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parseMixinArgument = function () {\n    // [variableName ':'] expression | variableName '...'\n    var node = this.create(nodes.FunctionArgument);\n    var pos = this.mark();\n\n    var argument = this._parseVariable();\n\n    if (argument) {\n      if (!this.accept(TokenType.Colon)) {\n        this.restoreAtMark(pos);\n      } else {\n        node.setIdentifier(argument);\n      }\n    }\n\n    if (node.setValue(this._parseDetachedRuleSet() || this._parseExpr(true))) {\n      return this.finish(node);\n    }\n\n    this.restoreAtMark(pos);\n    return null;\n  };\n\n  LESSParser.prototype._parseMixinParameter = function () {\n    var node = this.create(nodes.FunctionParameter); // special rest variable: @rest...\n\n    if (this.peekKeyword('@rest')) {\n      var restNode = this.create(nodes.Node);\n      this.consumeToken();\n\n      if (!this.accept(lessScanner.Ellipsis)) {\n        return this.finish(node, ParseError.DotExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n      }\n\n      node.setIdentifier(this.finish(restNode));\n      return this.finish(node);\n    } // special const args: ...\n\n\n    if (this.peek(lessScanner.Ellipsis)) {\n      var varargsNode = this.create(nodes.Node);\n      this.consumeToken();\n      node.setIdentifier(this.finish(varargsNode));\n      return this.finish(node);\n    }\n\n    var hasContent = false; // default variable declaration: @param: 12 or @name\n\n    if (node.setIdentifier(this._parseVariable())) {\n      this.accept(TokenType.Colon);\n      hasContent = true;\n    }\n\n    if (!node.setDefaultValue(this._parseDetachedRuleSet() || this._parseExpr(true)) && !hasContent) {\n      return null;\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parseGuard = function () {\n    if (!this.peekIdent('when')) {\n      return null;\n    }\n\n    var node = this.create(nodes.LessGuard);\n    this.consumeToken(); // when\n\n    node.isNegated = this.acceptIdent('not');\n\n    if (!node.getConditions().addChild(this._parseGuardCondition())) {\n      return this.finish(node, ParseError.ConditionExpected);\n    }\n\n    while (this.acceptIdent('and') || this.accept(TokenType.Comma)) {\n      if (!node.getConditions().addChild(this._parseGuardCondition())) {\n        return this.finish(node, ParseError.ConditionExpected);\n      }\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parseGuardCondition = function () {\n    if (!this.peek(TokenType.ParenthesisL)) {\n      return null;\n    }\n\n    var node = this.create(nodes.GuardCondition);\n    this.consumeToken(); // ParenthesisL\n\n    if (!node.addChild(this._parseExpr())) {// empty (?)\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parseFunction = function () {\n    var pos = this.mark();\n    var node = this.create(nodes.Function);\n\n    if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n      return null;\n    }\n\n    if (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL)) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    if (node.getArguments().addChild(this._parseMixinArgument())) {\n      while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n        if (this.peek(TokenType.ParenthesisR)) {\n          break;\n        }\n\n        if (!node.getArguments().addChild(this._parseMixinArgument())) {\n          return this.finish(node, ParseError.ExpressionExpected);\n        }\n      }\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  LESSParser.prototype._parseFunctionIdentifier = function () {\n    if (this.peekDelim('%')) {\n      var node = this.create(nodes.Identifier);\n      node.referenceTypes = [nodes.ReferenceType.Function];\n      this.consumeToken();\n      return this.finish(node);\n    }\n\n    return _super.prototype._parseFunctionIdentifier.call(this);\n  };\n\n  LESSParser.prototype._parseURLArgument = function () {\n    var pos = this.mark();\n\n    var node = _super.prototype._parseURLArgument.call(this);\n\n    if (!node || !this.peek(TokenType.ParenthesisR)) {\n      this.restoreAtMark(pos);\n      var node_2 = this.create(nodes.Node);\n      node_2.addChild(this._parseBinaryExpr());\n      return this.finish(node_2);\n    }\n\n    return node;\n  };\n\n  return LESSParser;\n}(cssParser.Parser);\n\nexport { LESSParser };","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","lessScanner","TokenType","cssParser","nodes","ParseError","LESSParser","_super","call","LESSScanner","_parseStylesheetStatement","isNested","peek","AtKeyword","_parseVariableDeclaration","_parsePlugin","_parseStylesheetAtStatement","_tryParseMixinDeclaration","_tryParseMixinReference","_parseFunction","_parseRuleset","_parseImport","peekKeyword","node","Import","consumeToken","accept","ParenthesisL","Ident","finish","IdentifierExpected","SemiColon","Comma","ParenthesisR","RightParenthesisExpected","addChild","_parseURILiteral","_parseStringLiteral","URIOrStringExpected","EOF","setMedialist","_parseMediaQueryList","createNode","NodeType","Plugin","StringLiteralExpected","SemiColonExpected","_parseMediaQuery","resyncStopToken","node_1","MediaQuery","_parseVariable","_parseMediaDeclaration","_tryParseRuleset","_tryToParseDeclaration","_parseDetachedRuleSetMixin","_parseMediaFeatureName","_parseIdent","panic","VariableDeclaration","mark","setVariable","Colon","prevToken","colonPosition","offset","setValue","_parseDetachedRuleSet","needsSemicolon","_parseExpr","VariableValueExpected","_parsePrio","restoreAtMark","semicolonPosition","token","peekDelim","hasWhitespace","MixinDeclaration","getParameters","_parseMixinParameter","markError","CurlyL","content","BodyDeclaration","_parseBody","_parseDetachedRuleSetBody","bind","_tryParseKeyframeSelector","_parseRuleSetDeclaration","_addLookupChildren","_parseLookupValue","expectsValue","BracketL","Node","_parsePropertyIdentifier","BracketR","declaration","insideLookup","isPropertyReference","Variable","acceptDelim","_parseTerm","term","Term","setExpression","_parseEscaped","EscapedJavaScript","BadEscapedJavaScript","EscapedValue","String","TermExpected","_parseOperator","_parseGuardOperator","Operator","_parseKeyframe","_parseMedia","_parseSupports","_parseUnknownAtRule","_parseExtend","_parseKeyframeIdent","ReferenceType","Keyframe","_parseKeyframeSelector","_parseSimpleSelectorBody","_parseSelectorCombinator","_parseSelector","Selector","hasContent","_parseCombinator","_parseSimpleSelector","_parseGuard","SelectorCombinator","Num","Dimension","_parseSelectorIdent","peekInterpolatedIdent","SelectorInterpolation","_acceptInterpolatedIdent","inLookup","propertyRegex","peekRegExp","type","Identifier","isCustomProperty","childAdded","_parseRegexp","acceptIdent","identRegex","_this","indentInterpolation","pos","_parseInterpolation","acceptRegexp","try","Interpolation","CurlyR","RightCurlyExpected","setIdentifier","_parseMixinDeclarationIdentifier","setGuard","_parseMixInBodyDeclaration","_parseFontFace","identifier","Hash","referenceTypes","Mixin","_parsePseudo","ExtendsReference","_completeExtends","LeftParenthesisExpected","selectors","getSelectors","SelectorExpected","MixinReference","atRoot","nextId","getNamespaces","hasArguments","getArguments","_parseMixinArgument","ExpressionExpected","Rule","FunctionArgument","argument","FunctionParameter","restNode","Ellipsis","DotExpected","varargsNode","setDefaultValue","peekIdent","LessGuard","isNegated","getConditions","_parseGuardCondition","ConditionExpected","GuardCondition","Function","_parseFunctionIdentifier","_parseURLArgument","node_2","_parseBinaryExpr","Parser"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as lessScanner from './lessScanner.js';\nimport { TokenType } from './cssScanner.js';\nimport * as cssParser from './cssParser.js';\nimport * as nodes from './cssNodes.js';\nimport { ParseError } from './cssErrors.js';\n/// <summary>\n/// A parser for LESS\n/// http://lesscss.org/\n/// </summary>\nvar LESSParser = /** @class */ (function (_super) {\n    __extends(LESSParser, _super);\n    function LESSParser() {\n        return _super.call(this, new lessScanner.LESSScanner()) || this;\n    }\n    LESSParser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseVariableDeclaration()\n                || this._parsePlugin()\n                || _super.prototype._parseStylesheetAtStatement.call(this, isNested);\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseFunction()\n            || this._parseRuleset(true);\n    };\n    LESSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import') && !this.peekKeyword('@import-once') /* deprecated in less 1.4.1 */) {\n            return null;\n        }\n        var node = this.create(nodes.Import);\n        this.consumeToken();\n        // less 1.4.1: @import (css) \"lib\"\n        if (this.accept(TokenType.ParenthesisL)) {\n            if (!this.accept(TokenType.Ident)) {\n                return this.finish(node, ParseError.IdentifierExpected, [TokenType.SemiColon]);\n            }\n            do {\n                if (!this.accept(TokenType.Comma)) {\n                    break;\n                }\n            } while (this.accept(TokenType.Ident));\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.SemiColon]);\n            }\n        }\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.URIOrStringExpected, [TokenType.SemiColon]);\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parsePlugin = function () {\n        if (!this.peekKeyword('@plugin')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.Plugin);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.StringLiteralExpected);\n        }\n        if (!this.accept(TokenType.SemiColon)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMediaQuery = function (resyncStopToken) {\n        var node = _super.prototype._parseMediaQuery.call(this, resyncStopToken);\n        if (!node) {\n            var node_1 = this.create(nodes.MediaQuery);\n            if (node_1.addChild(this._parseVariable())) {\n                return this.finish(node_1);\n            }\n            return null;\n        }\n        return node;\n    };\n    LESSParser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._tryParseRuleset(isNested)\n            || this._tryToParseDeclaration()\n            || this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseDetachedRuleSetMixin()\n            || this._parseStylesheetStatement(isNested);\n    };\n    LESSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent() || this._parseVariable();\n    };\n    LESSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        var node = this.create(nodes.VariableDeclaration);\n        var mark = this.mark();\n        if (!node.setVariable(this._parseVariable(true))) {\n            return null;\n        }\n        if (this.accept(TokenType.Colon)) {\n            if (this.prevToken) {\n                node.colonPosition = this.prevToken.offset;\n            }\n            if (node.setValue(this._parseDetachedRuleSet())) {\n                node.needsSemicolon = false;\n            }\n            else if (!node.setValue(this._parseExpr())) {\n                return this.finish(node, ParseError.VariableValueExpected, [], panic);\n            }\n            node.addChild(this._parsePrio());\n        }\n        else {\n            this.restoreAtMark(mark);\n            return null; // at keyword, but no ':', not a variable declaration but some at keyword\n        }\n        if (this.peek(TokenType.SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSet = function () {\n        var mark = this.mark();\n        // \"Anonymous mixin\" used in each() and possibly a generic type in the future\n        if (this.peekDelim('#') || this.peekDelim('.')) {\n            this.consumeToken();\n            if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n                var node = this.create(nodes.MixinDeclaration);\n                if (node.getParameters().addChild(this._parseMixinParameter())) {\n                    while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n                        if (this.peek(TokenType.ParenthesisR)) {\n                            break;\n                        }\n                        if (!node.getParameters().addChild(this._parseMixinParameter())) {\n                            this.markError(node, ParseError.IdentifierExpected, [], [TokenType.ParenthesisR]);\n                        }\n                    }\n                }\n                if (!this.accept(TokenType.ParenthesisR)) {\n                    this.restoreAtMark(mark);\n                    return null;\n                }\n            }\n            else {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (!this.peek(TokenType.CurlyL)) {\n            return null;\n        }\n        var content = this.create(nodes.BodyDeclaration);\n        this._parseBody(content, this._parseDetachedRuleSetBody.bind(this));\n        return this.finish(content);\n    };\n    LESSParser.prototype._parseDetachedRuleSetBody = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._addLookupChildren = function (node) {\n        if (!node.addChild(this._parseLookupValue())) {\n            return false;\n        }\n        var expectsValue = false;\n        while (true) {\n            if (this.peek(TokenType.BracketL)) {\n                expectsValue = true;\n            }\n            if (!node.addChild(this._parseLookupValue())) {\n                break;\n            }\n            expectsValue = false;\n        }\n        return !expectsValue;\n    };\n    LESSParser.prototype._parseLookupValue = function () {\n        var node = this.create(nodes.Node);\n        var mark = this.mark();\n        if (!this.accept(TokenType.BracketL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (((node.addChild(this._parseVariable(false, true)) ||\n            node.addChild(this._parsePropertyIdentifier())) &&\n            this.accept(TokenType.BracketR)) || this.accept(TokenType.BracketR)) {\n            return node;\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    LESSParser.prototype._parseVariable = function (declaration, insideLookup) {\n        if (declaration === void 0) { declaration = false; }\n        if (insideLookup === void 0) { insideLookup = false; }\n        var isPropertyReference = !declaration && this.peekDelim('$');\n        if (!this.peekDelim('@') && !isPropertyReference && !this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        var node = this.create(nodes.Variable);\n        var mark = this.mark();\n        while (this.acceptDelim('@') || (!declaration && this.acceptDelim('$'))) {\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (!this.accept(TokenType.AtKeyword) && !this.accept(TokenType.Ident)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!insideLookup && this.peek(TokenType.BracketL)) {\n            if (!this._addLookupChildren(node)) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        return node;\n    };\n    LESSParser.prototype._parseTerm = function () {\n        var term = _super.prototype._parseTerm.call(this);\n        if (term) {\n            return term;\n        }\n        term = this.create(nodes.Term);\n        if (term.setExpression(this._parseVariable()) ||\n            term.setExpression(this._parseEscaped()) ||\n            term.setExpression(this._tryParseMixinReference(false))) {\n            return this.finish(term);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseEscaped = function () {\n        if (this.peek(TokenType.EscapedJavaScript) ||\n            this.peek(TokenType.BadEscapedJavaScript)) {\n            var node = this.createNode(nodes.NodeType.EscapedValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        if (this.peekDelim('~')) {\n            var node = this.createNode(nodes.NodeType.EscapedValue);\n            this.consumeToken();\n            if (this.accept(TokenType.String) || this.accept(TokenType.EscapedJavaScript)) {\n                return this.finish(node);\n            }\n            else {\n                return this.finish(node, ParseError.TermExpected);\n            }\n        }\n        return null;\n    };\n    LESSParser.prototype._parseOperator = function () {\n        var node = this._parseGuardOperator();\n        if (node) {\n            return node;\n        }\n        else {\n            return _super.prototype._parseOperator.call(this);\n        }\n    };\n    LESSParser.prototype._parseGuardOperator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        else if (this.peekDelim('=')) {\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            this.acceptDelim('<');\n            return node;\n        }\n        else if (this.peekDelim('<')) {\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        return null;\n    };\n    LESSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseKeyframe()\n                || this._parseMedia(true)\n                || this._parseImport()\n                || this._parseSupports(true) // @supports\n                || this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n                || this._parseVariableDeclaration() // Variable declarations\n                || this._parseUnknownAtRule();\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseRuleset(true) // nested ruleset\n            || this._tryParseMixinReference() // less mixin reference\n            || this._parseFunction()\n            || this._parseExtend() // less extend declaration\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as the last option\n    };\n    LESSParser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([nodes.ReferenceType.Keyframe]) || this._parseVariable();\n    };\n    LESSParser.prototype._parseKeyframeSelector = function () {\n        return this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n            || _super.prototype._parseKeyframeSelector.call(this);\n    };\n    LESSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    LESSParser.prototype._parseSelector = function (isNested) {\n        // CSS Guards\n        var node = this.create(nodes.Selector);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            var mark = this.mark();\n            if (node.addChild(this._parseGuard()) && this.peek(TokenType.CurlyL)) {\n                break;\n            }\n            this.restoreAtMark(mark);\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(nodes.NodeType.SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(TokenType.Num) || this.accept(TokenType.Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseSelectorIdent = function () {\n        if (!this.peekInterpolatedIdent()) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.SelectorInterpolation);\n        var hasContent = this._acceptInterpolatedIdent(node);\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parsePropertyIdentifier = function (inLookup) {\n        if (inLookup === void 0) { inLookup = false; }\n        var propertyRegex = /^[\\w-]+/;\n        if (!this.peekInterpolatedIdent() && !this.peekRegExp(this.token.type, propertyRegex)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(nodes.Identifier);\n        node.isCustomProperty = this.acceptDelim('-') && this.acceptDelim('-');\n        var childAdded = false;\n        if (!inLookup) {\n            if (node.isCustomProperty) {\n                childAdded = this._acceptInterpolatedIdent(node);\n            }\n            else {\n                childAdded = this._acceptInterpolatedIdent(node, propertyRegex);\n            }\n        }\n        else {\n            if (node.isCustomProperty) {\n                childAdded = node.addChild(this._parseIdent());\n            }\n            else {\n                childAdded = node.addChild(this._parseRegexp(propertyRegex));\n            }\n        }\n        if (!childAdded) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!inLookup && !this.hasWhitespace()) {\n            this.acceptDelim('+');\n            if (!this.hasWhitespace()) {\n                this.acceptIdent('_');\n            }\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype.peekInterpolatedIdent = function () {\n        return this.peek(TokenType.Ident) ||\n            this.peekDelim('@') ||\n            this.peekDelim('$') ||\n            this.peekDelim('-');\n    };\n    LESSParser.prototype._acceptInterpolatedIdent = function (node, identRegex) {\n        var _this = this;\n        var hasContent = false;\n        var indentInterpolation = function () {\n            var pos = _this.mark();\n            if (_this.acceptDelim('-')) {\n                if (!_this.hasWhitespace()) {\n                    _this.acceptDelim('-');\n                }\n                if (_this.hasWhitespace()) {\n                    _this.restoreAtMark(pos);\n                    return null;\n                }\n            }\n            return _this._parseInterpolation();\n        };\n        var accept = identRegex ?\n            function () { return _this.acceptRegexp(identRegex); } :\n            function () { return _this.accept(TokenType.Ident); };\n        while (accept() ||\n            node.addChild(this._parseInterpolation() ||\n                this.try(indentInterpolation))) {\n            hasContent = true;\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent;\n    };\n    LESSParser.prototype._parseInterpolation = function () {\n        // @{name} Variable or\n        // ${name} Property\n        var mark = this.mark();\n        if (this.peekDelim('@') || this.peekDelim('$')) {\n            var node = this.createNode(nodes.NodeType.Interpolation);\n            this.consumeToken();\n            if (this.hasWhitespace() || !this.accept(TokenType.CurlyL)) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return this.finish(node, ParseError.IdentifierExpected);\n            }\n            if (!this.accept(TokenType.CurlyR)) {\n                return this.finish(node, ParseError.RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._tryParseMixinDeclaration = function () {\n        var mark = this.mark();\n        var node = this.create(nodes.MixinDeclaration);\n        if (!node.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(TokenType.ParenthesisL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (node.getParameters().addChild(this._parseMixinParameter())) {\n            while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n                if (this.peek(TokenType.ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseMixinParameter())) {\n                    this.markError(node, ParseError.IdentifierExpected, [], [TokenType.ParenthesisR]);\n                }\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        node.setGuard(this._parseGuard());\n        if (!this.peek(TokenType.CurlyL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._parseBody(node, this._parseMixInBodyDeclaration.bind(this));\n    };\n    LESSParser.prototype._parseMixInBodyDeclaration = function () {\n        return this._parseFontFace() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._parseMixinDeclarationIdentifier = function () {\n        var identifier;\n        if (this.peekDelim('#') || this.peekDelim('.')) {\n            identifier = this.create(nodes.Identifier);\n            this.consumeToken(); // # or .\n            if (this.hasWhitespace() || !identifier.addChild(this._parseIdent())) {\n                return null;\n            }\n        }\n        else if (this.peek(TokenType.Hash)) {\n            identifier = this.create(nodes.Identifier);\n            this.consumeToken(); // TokenType.Hash\n        }\n        else {\n            return null;\n        }\n        identifier.referenceTypes = [nodes.ReferenceType.Mixin];\n        return this.finish(identifier);\n    };\n    LESSParser.prototype._parsePseudo = function () {\n        if (!this.peek(TokenType.Colon)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(nodes.ExtendsReference);\n        this.consumeToken(); // :\n        if (this.acceptIdent('extend')) {\n            return this._completeExtends(node);\n        }\n        this.restoreAtMark(mark);\n        return _super.prototype._parsePseudo.call(this);\n    };\n    LESSParser.prototype._parseExtend = function () {\n        if (!this.peekDelim('&')) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(nodes.ExtendsReference);\n        this.consumeToken(); // &\n        if (this.hasWhitespace() || !this.accept(TokenType.Colon) || !this.acceptIdent('extend')) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._completeExtends(node);\n    };\n    LESSParser.prototype._completeExtends = function (node) {\n        if (!this.accept(TokenType.ParenthesisL)) {\n            return this.finish(node, ParseError.LeftParenthesisExpected);\n        }\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(true))) {\n            return this.finish(node, ParseError.SelectorExpected);\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!selectors.addChild(this._parseSelector(true))) {\n                return this.finish(node, ParseError.SelectorExpected);\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSetMixin = function () {\n        if (!this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(nodes.MixinReference);\n        if (node.addChild(this._parseVariable(true)) && (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL))) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._tryParseMixinReference = function (atRoot) {\n        if (atRoot === void 0) { atRoot = true; }\n        var mark = this.mark();\n        var node = this.create(nodes.MixinReference);\n        var identifier = this._parseMixinDeclarationIdentifier();\n        while (identifier) {\n            this.acceptDelim('>');\n            var nextId = this._parseMixinDeclarationIdentifier();\n            if (nextId) {\n                node.getNamespaces().addChild(identifier);\n                identifier = nextId;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node.setIdentifier(identifier)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        var hasArguments = false;\n        if (!this.hasWhitespace() && this.accept(TokenType.ParenthesisL)) {\n            hasArguments = true;\n            if (node.getArguments().addChild(this._parseMixinArgument())) {\n                while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n                    if (this.peek(TokenType.ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                        return this.finish(node, ParseError.ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected);\n            }\n            identifier.referenceTypes = [nodes.ReferenceType.Mixin];\n        }\n        else {\n            identifier.referenceTypes = [nodes.ReferenceType.Mixin, nodes.ReferenceType.Rule];\n        }\n        if (this.peek(TokenType.BracketL)) {\n            if (!atRoot) {\n                this._addLookupChildren(node);\n            }\n        }\n        else {\n            node.addChild(this._parsePrio());\n        }\n        if (!hasArguments && !this.peek(TokenType.SemiColon) && !this.peek(TokenType.CurlyR) && !this.peek(TokenType.EOF)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMixinArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(nodes.FunctionArgument);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(TokenType.Colon)) {\n                this.restoreAtMark(pos);\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseDetachedRuleSet() || this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        this.restoreAtMark(pos);\n        return null;\n    };\n    LESSParser.prototype._parseMixinParameter = function () {\n        var node = this.create(nodes.FunctionParameter);\n        // special rest variable: @rest...\n        if (this.peekKeyword('@rest')) {\n            var restNode = this.create(nodes.Node);\n            this.consumeToken();\n            if (!this.accept(lessScanner.Ellipsis)) {\n                return this.finish(node, ParseError.DotExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n            }\n            node.setIdentifier(this.finish(restNode));\n            return this.finish(node);\n        }\n        // special const args: ...\n        if (this.peek(lessScanner.Ellipsis)) {\n            var varargsNode = this.create(nodes.Node);\n            this.consumeToken();\n            node.setIdentifier(this.finish(varargsNode));\n            return this.finish(node);\n        }\n        var hasContent = false;\n        // default variable declaration: @param: 12 or @name\n        if (node.setIdentifier(this._parseVariable())) {\n            this.accept(TokenType.Colon);\n            hasContent = true;\n        }\n        if (!node.setDefaultValue(this._parseDetachedRuleSet() || this._parseExpr(true)) && !hasContent) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuard = function () {\n        if (!this.peekIdent('when')) {\n            return null;\n        }\n        var node = this.create(nodes.LessGuard);\n        this.consumeToken(); // when\n        node.isNegated = this.acceptIdent('not');\n        if (!node.getConditions().addChild(this._parseGuardCondition())) {\n            return this.finish(node, ParseError.ConditionExpected);\n        }\n        while (this.acceptIdent('and') || this.accept(TokenType.Comma)) {\n            if (!node.getConditions().addChild(this._parseGuardCondition())) {\n                return this.finish(node, ParseError.ConditionExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuardCondition = function () {\n        if (!this.peek(TokenType.ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(nodes.GuardCondition);\n        this.consumeToken(); // ParenthesisL\n        if (!node.addChild(this._parseExpr())) {\n            // empty (?)\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(nodes.Function);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(TokenType.ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseMixinArgument())) {\n            while (this.accept(TokenType.Comma) || this.accept(TokenType.SemiColon)) {\n                if (this.peek(TokenType.ParenthesisR)) {\n                    break;\n                }\n                if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                    return this.finish(node, ParseError.ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunctionIdentifier = function () {\n        if (this.peekDelim('%')) {\n            var node = this.create(nodes.Identifier);\n            node.referenceTypes = [nodes.ReferenceType.Function];\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseFunctionIdentifier.call(this);\n    };\n    LESSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(TokenType.ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_2 = this.create(nodes.Node);\n            node_2.addChild(this._parseBinaryExpr());\n            return this.finish(node_2);\n        }\n        return node;\n    };\n    return LESSParser;\n}(cssParser.Parser));\nexport { LESSParser };\n"]},"metadata":{},"sourceType":"module"}