{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from '../parser/htmlScanner.js';\nimport { Range } from './../_deps/vscode-languageserver-types/main.js';\nimport * as strings from '../utils/strings.js';\nimport { URI as Uri } from './../../vscode-uri/index.js';\nimport { TokenType } from '../htmlLanguageTypes.js';\n\nfunction normalizeRef(url) {\n  var first = url[0];\n  var last = url[url.length - 1];\n\n  if (first === last && (first === '\\'' || first === '\\\"')) {\n    url = url.substr(1, url.length - 2);\n  }\n\n  return url;\n}\n\nfunction validateRef(url, languageId) {\n  if (!url.length) {\n    return false;\n  }\n\n  if (languageId === 'handlebars' && /{{.*}}/.test(url)) {\n    return false;\n  }\n\n  return /\\b(w[\\w\\d+.-]*:\\/\\/)?[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|\\/?))/.test(url);\n}\n\nfunction getWorkspaceUrl(documentUri, tokenContent, documentContext, base) {\n  if (/^\\s*javascript\\:/i.test(tokenContent) || /[\\n\\r]/.test(tokenContent)) {\n    return undefined;\n  }\n\n  tokenContent = tokenContent.replace(/^\\s*/g, '');\n\n  if (/^https?:\\/\\//i.test(tokenContent) || /^file:\\/\\//i.test(tokenContent)) {\n    // Absolute link that needs no treatment\n    return tokenContent;\n  }\n\n  if (/^\\#/i.test(tokenContent)) {\n    return documentUri + tokenContent;\n  }\n\n  if (/^\\/\\//i.test(tokenContent)) {\n    // Absolute link (that does not name the protocol)\n    var pickedScheme = strings.startsWith(documentUri, 'https://') ? 'https' : 'http';\n    return pickedScheme + ':' + tokenContent.replace(/^\\s*/g, '');\n  }\n\n  if (documentContext) {\n    return documentContext.resolveReference(tokenContent, base || documentUri);\n  }\n\n  return tokenContent;\n}\n\nfunction createLink(document, documentContext, attributeValue, startOffset, endOffset, base) {\n  var tokenContent = normalizeRef(attributeValue);\n\n  if (!validateRef(tokenContent, document.languageId)) {\n    return undefined;\n  }\n\n  if (tokenContent.length < attributeValue.length) {\n    startOffset++;\n    endOffset--;\n  }\n\n  var workspaceUrl = getWorkspaceUrl(document.uri, tokenContent, documentContext, base);\n\n  if (!workspaceUrl || !isValidURI(workspaceUrl)) {\n    return undefined;\n  }\n\n  return {\n    range: Range.create(document.positionAt(startOffset), document.positionAt(endOffset)),\n    target: workspaceUrl\n  };\n}\n\nfunction isValidURI(uri) {\n  try {\n    Uri.parse(uri);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function findDocumentLinks(document, documentContext) {\n  var newLinks = [];\n  var scanner = createScanner(document.getText(), 0);\n  var token = scanner.scan();\n  var lastAttributeName = undefined;\n  var afterBase = false;\n  var base = void 0;\n  var idLocations = {};\n\n  while (token !== TokenType.EOS) {\n    switch (token) {\n      case TokenType.StartTag:\n        if (!base) {\n          var tagName = scanner.getTokenText().toLowerCase();\n          afterBase = tagName === 'base';\n        }\n\n        break;\n\n      case TokenType.AttributeName:\n        lastAttributeName = scanner.getTokenText().toLowerCase();\n        break;\n\n      case TokenType.AttributeValue:\n        if (lastAttributeName === 'src' || lastAttributeName === 'href') {\n          var attributeValue = scanner.getTokenText();\n\n          if (!afterBase) {\n            // don't highlight the base link itself\n            var link = createLink(document, documentContext, attributeValue, scanner.getTokenOffset(), scanner.getTokenEnd(), base);\n\n            if (link) {\n              newLinks.push(link);\n            }\n          }\n\n          if (afterBase && typeof base === 'undefined') {\n            base = normalizeRef(attributeValue);\n\n            if (base && documentContext) {\n              base = documentContext.resolveReference(base, document.uri);\n            }\n          }\n\n          afterBase = false;\n          lastAttributeName = undefined;\n        } else if (lastAttributeName === 'id') {\n          var id = normalizeRef(scanner.getTokenText());\n          idLocations[id] = scanner.getTokenOffset();\n        }\n\n        break;\n    }\n\n    token = scanner.scan();\n  } // change local links with ids to actual positions\n\n\n  for (var _i = 0, newLinks_1 = newLinks; _i < newLinks_1.length; _i++) {\n    var link = newLinks_1[_i];\n    var localWithHash = document.uri + '#';\n\n    if (link.target && strings.startsWith(link.target, localWithHash)) {\n      var target = link.target.substr(localWithHash.length);\n      var offset = idLocations[target];\n\n      if (offset !== undefined) {\n        var pos = document.positionAt(offset);\n        link.target = \"\" + localWithHash + (pos.line + 1) + \",\" + (pos.character + 1);\n      }\n    }\n  }\n\n  return newLinks;\n}","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlLinks.js"],"names":["createScanner","Range","strings","URI","Uri","TokenType","normalizeRef","url","first","last","length","substr","validateRef","languageId","test","getWorkspaceUrl","documentUri","tokenContent","documentContext","base","undefined","replace","pickedScheme","startsWith","resolveReference","createLink","document","attributeValue","startOffset","endOffset","workspaceUrl","uri","isValidURI","range","create","positionAt","target","parse","e","findDocumentLinks","newLinks","scanner","getText","token","scan","lastAttributeName","afterBase","idLocations","EOS","StartTag","tagName","getTokenText","toLowerCase","AttributeName","AttributeValue","link","getTokenOffset","getTokenEnd","push","id","_i","newLinks_1","localWithHash","offset","pos","line","character"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from '../parser/htmlScanner.js';\nimport { Range } from './../_deps/vscode-languageserver-types/main.js';\nimport * as strings from '../utils/strings.js';\nimport { URI as Uri } from './../../vscode-uri/index.js';\nimport { TokenType } from '../htmlLanguageTypes.js';\nfunction normalizeRef(url) {\n    var first = url[0];\n    var last = url[url.length - 1];\n    if (first === last && (first === '\\'' || first === '\\\"')) {\n        url = url.substr(1, url.length - 2);\n    }\n    return url;\n}\nfunction validateRef(url, languageId) {\n    if (!url.length) {\n        return false;\n    }\n    if (languageId === 'handlebars' && /{{.*}}/.test(url)) {\n        return false;\n    }\n    return /\\b(w[\\w\\d+.-]*:\\/\\/)?[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|\\/?))/.test(url);\n}\nfunction getWorkspaceUrl(documentUri, tokenContent, documentContext, base) {\n    if (/^\\s*javascript\\:/i.test(tokenContent) || /[\\n\\r]/.test(tokenContent)) {\n        return undefined;\n    }\n    tokenContent = tokenContent.replace(/^\\s*/g, '');\n    if (/^https?:\\/\\//i.test(tokenContent) || /^file:\\/\\//i.test(tokenContent)) {\n        // Absolute link that needs no treatment\n        return tokenContent;\n    }\n    if (/^\\#/i.test(tokenContent)) {\n        return documentUri + tokenContent;\n    }\n    if (/^\\/\\//i.test(tokenContent)) {\n        // Absolute link (that does not name the protocol)\n        var pickedScheme = strings.startsWith(documentUri, 'https://') ? 'https' : 'http';\n        return pickedScheme + ':' + tokenContent.replace(/^\\s*/g, '');\n    }\n    if (documentContext) {\n        return documentContext.resolveReference(tokenContent, base || documentUri);\n    }\n    return tokenContent;\n}\nfunction createLink(document, documentContext, attributeValue, startOffset, endOffset, base) {\n    var tokenContent = normalizeRef(attributeValue);\n    if (!validateRef(tokenContent, document.languageId)) {\n        return undefined;\n    }\n    if (tokenContent.length < attributeValue.length) {\n        startOffset++;\n        endOffset--;\n    }\n    var workspaceUrl = getWorkspaceUrl(document.uri, tokenContent, documentContext, base);\n    if (!workspaceUrl || !isValidURI(workspaceUrl)) {\n        return undefined;\n    }\n    return {\n        range: Range.create(document.positionAt(startOffset), document.positionAt(endOffset)),\n        target: workspaceUrl\n    };\n}\nfunction isValidURI(uri) {\n    try {\n        Uri.parse(uri);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexport function findDocumentLinks(document, documentContext) {\n    var newLinks = [];\n    var scanner = createScanner(document.getText(), 0);\n    var token = scanner.scan();\n    var lastAttributeName = undefined;\n    var afterBase = false;\n    var base = void 0;\n    var idLocations = {};\n    while (token !== TokenType.EOS) {\n        switch (token) {\n            case TokenType.StartTag:\n                if (!base) {\n                    var tagName = scanner.getTokenText().toLowerCase();\n                    afterBase = tagName === 'base';\n                }\n                break;\n            case TokenType.AttributeName:\n                lastAttributeName = scanner.getTokenText().toLowerCase();\n                break;\n            case TokenType.AttributeValue:\n                if (lastAttributeName === 'src' || lastAttributeName === 'href') {\n                    var attributeValue = scanner.getTokenText();\n                    if (!afterBase) { // don't highlight the base link itself\n                        var link = createLink(document, documentContext, attributeValue, scanner.getTokenOffset(), scanner.getTokenEnd(), base);\n                        if (link) {\n                            newLinks.push(link);\n                        }\n                    }\n                    if (afterBase && typeof base === 'undefined') {\n                        base = normalizeRef(attributeValue);\n                        if (base && documentContext) {\n                            base = documentContext.resolveReference(base, document.uri);\n                        }\n                    }\n                    afterBase = false;\n                    lastAttributeName = undefined;\n                }\n                else if (lastAttributeName === 'id') {\n                    var id = normalizeRef(scanner.getTokenText());\n                    idLocations[id] = scanner.getTokenOffset();\n                }\n                break;\n        }\n        token = scanner.scan();\n    }\n    // change local links with ids to actual positions\n    for (var _i = 0, newLinks_1 = newLinks; _i < newLinks_1.length; _i++) {\n        var link = newLinks_1[_i];\n        var localWithHash = document.uri + '#';\n        if (link.target && strings.startsWith(link.target, localWithHash)) {\n            var target = link.target.substr(localWithHash.length);\n            var offset = idLocations[target];\n            if (offset !== undefined) {\n                var pos = document.positionAt(offset);\n                link.target = \"\" + localWithHash + (pos.line + 1) + \",\" + (pos.character + 1);\n            }\n        }\n    }\n    return newLinks;\n}\n"]},"metadata":{},"sourceType":"module"}