{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  // the default separators except `@$`\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '<',\n    close: '>'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.kt',\n  keywords: ['as', 'as?', 'break', 'class', 'continue', 'do', 'else', 'false', 'for', 'fun', 'if', 'in', '!in', 'interface', 'is', '!is', 'null', 'object', 'package', 'return', 'super', 'this', 'throw', 'true', 'try', 'typealias', 'val', 'var', 'when', 'while', 'by', 'catch', 'constructor', 'delegate', 'dynamic', 'field', 'file', 'finally', 'get', 'import', 'init', 'param', 'property', 'receiver', 'set', 'setparam', 'where', 'actual', 'abstract', 'annotation', 'companion', 'const', 'crossinline', 'data', 'enum', 'expect', 'external', 'final', 'infix', 'inline', 'inner', 'internal', 'lateinit', 'noinline', 'open', 'operator', 'out', 'override', 'private', 'protected', 'public', 'reified', 'sealed', 'suspend', 'tailrec', 'vararg', 'field', 'it'],\n  operators: ['+', '-', '*', '/', '%', '=', '+=', '-=', '*=', '/=', '%=', '++', '--', '&&', '||', '!', '==', '!=', '===', '!==', '>', '<', '<=', '>=', '[', ']', '!!', '?.', '?:', '::', '..', ':', '?', '->', '@', ';', '$', '_'],\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [// class name highlighting\n    [/[A-Z][\\w\\$]*/, 'type.identifier'], // identifiers and keywords\n    [/[a-zA-Z_$][\\w$]*/, {\n      cases: {\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@default': 'identifier'\n      }\n    }], // whitespace\n    {\n      include: '@whitespace'\n    }, // delimiters and operators\n    [/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/@symbols/, {\n      cases: {\n        '@operators': 'delimiter',\n        '@default': ''\n      }\n    }], // @ annotations.\n    [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'], // numbers\n    [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'], [/0[xX](@hexdigits)[Ll]?/, 'number.hex'], [/0(@octaldigits)[Ll]?/, 'number.octal'], [/0[bB](@binarydigits)[Ll]?/, 'number.binary'], [/(@digits)[fFdD]/, 'number.float'], [/(@digits)[lL]?/, 'number'], // delimiter: after number because of .\\d floats\n    [/[;,.]/, 'delimiter'], // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/\"\"\"/, 'string', '@multistring'], [/\"/, 'string', '@string'], // characters\n    [/'[^\\\\']'/, 'string'], [/(')(@escapes)(')/, ['string', 'string.escape', 'string']], [/'/, 'string.invalid']],\n    whitespace: [[/[ \\t\\r\\n]+/, ''], [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'], [/\\/\\*/, 'comment', '@comment'], [/\\/\\/.*$/, 'comment']],\n    comment: [[/[^\\/*]+/, 'comment'], [/\\/\\*/, 'comment', '@comment'], [/\\*\\//, 'comment', '@pop'], [/[\\/*]/, 'comment']],\n    //Identical copy of comment above, except for the addition of .doc\n    javadoc: [[/[^\\/*]+/, 'comment.doc'], [/\\/\\*/, 'comment.doc', '@push'], [/\\/\\*/, 'comment.doc.invalid'], [/\\*\\//, 'comment.doc', '@pop'], [/[\\/*]/, 'comment.doc']],\n    string: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"/, 'string', '@pop']],\n    multistring: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"\"\"/, 'string', '@pop'], [/./, 'string']]\n  }\n};","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","token","include","whitespace","comment","javadoc","string","multistring"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `@$`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '<', close: '>' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.kt',\r\n    keywords: [\r\n        'as', 'as?', 'break', 'class', 'continue', 'do', 'else', 'false', 'for', 'fun', 'if',\r\n        'in', '!in', 'interface', 'is', '!is', 'null', 'object', 'package', 'return', 'super',\r\n        'this', 'throw', 'true', 'try', 'typealias', 'val', 'var', 'when', 'while', 'by',\r\n        'catch', 'constructor', 'delegate', 'dynamic', 'field', 'file', 'finally', 'get',\r\n        'import', 'init', 'param', 'property', 'receiver', 'set', 'setparam', 'where', 'actual',\r\n        'abstract', 'annotation', 'companion', 'const', 'crossinline', 'data', 'enum', 'expect',\r\n        'external', 'final', 'infix', 'inline', 'inner', 'internal', 'lateinit', 'noinline',\r\n        'open', 'operator', 'out', 'override', 'private', 'protected', 'public', 'reified',\r\n        'sealed', 'suspend', 'tailrec', 'vararg', 'field', 'it'\r\n    ],\r\n    operators: [\r\n        '+', '-', '*', '/', '%', '=', '+=', '-=', '*=', '/=',\r\n        '%=', '++', '--', '&&', '||', '!', '==', '!=', '===',\r\n        '!==', '>', '<', '<=', '>=', '[', ']', '!!', '?.', '?:',\r\n        '::', '..', ':', '?', '->', '@', ';', '$', '_'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // class name highlighting\r\n            [/[A-Z][\\w\\$]*/, 'type.identifier'],\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // @ annotations.\r\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n            // numbers\r\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n            [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n            [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n            [/(@digits)[fFdD]/, 'number.float'],\r\n            [/(@digits)[lL]?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"\"\"/, 'string', '@multistring'],\r\n            [/\"/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        javadoc: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\/\\*/, 'comment.doc', '@push'],\r\n            [/\\/\\*/, 'comment.doc.invalid'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n        multistring: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"\"\"/, 'string', '@pop'],\r\n            [/./, 'string']\r\n        ],\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}