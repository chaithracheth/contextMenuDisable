{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as scssScanner from './scssScanner.js';\nimport { TokenType } from './cssScanner.js';\nimport * as cssParser from './cssParser.js';\nimport * as nodes from './cssNodes.js';\nimport { SCSSParseError } from './scssErrors.js';\nimport { ParseError } from './cssErrors.js'; /// <summary>\n/// A parser for scss\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\n/// </summary>\n\nvar SCSSParser =\n/** @class */\nfunction (_super) {\n  __extends(SCSSParser, _super);\n\n  function SCSSParser() {\n    return _super.call(this, new scssScanner.SCSSScanner()) || this;\n  }\n\n  SCSSParser.prototype._parseStylesheetStart = function () {\n    return this._parseForward() || this._parseUse() || _super.prototype._parseStylesheetStart.call(this);\n  };\n\n  SCSSParser.prototype._parseStylesheetStatement = function () {\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseWarnAndDebug() || this._parseControlStatement() || this._parseMixinDeclaration() || this._parseMixinContent() || this._parseMixinReference() // @include\n      || this._parseFunctionDeclaration() || _super.prototype._parseStylesheetAtStatement.call(this);\n    }\n\n    return this._parseRuleset(true) || this._parseVariableDeclaration();\n  };\n\n  SCSSParser.prototype._parseImport = function () {\n    if (!this.peekKeyword('@import')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Import);\n    this.consumeToken();\n\n    if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.URIOrStringExpected);\n    }\n\n    while (this.accept(TokenType.Comma)) {\n      if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n        return this.finish(node, ParseError.URIOrStringExpected);\n      }\n    }\n\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      node.setMedialist(this._parseMediaQueryList());\n    }\n\n    return this.finish(node);\n  }; // scss variables: $font-size: 12px;\n\n\n  SCSSParser.prototype._parseVariableDeclaration = function (panic) {\n    if (panic === void 0) {\n      panic = [];\n    }\n\n    if (!this.peek(scssScanner.VariableName)) {\n      return null;\n    }\n\n    var node = this.create(nodes.VariableDeclaration);\n\n    if (!node.setVariable(this._parseVariable())) {\n      return null;\n    }\n\n    if (!this.accept(TokenType.Colon)) {\n      return this.finish(node, ParseError.ColonExpected);\n    }\n\n    if (this.prevToken) {\n      node.colonPosition = this.prevToken.offset;\n    }\n\n    if (!node.setValue(this._parseExpr())) {\n      return this.finish(node, ParseError.VariableValueExpected, [], panic);\n    }\n\n    while (this.accept(TokenType.Exclamation)) {\n      if (!this.peekRegExp(TokenType.Ident, /^(default|global)$/)) {\n        return this.finish(node, ParseError.UnknownKeyword);\n      }\n\n      this.consumeToken();\n    }\n\n    if (this.peek(TokenType.SemiColon)) {\n      node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseMediaContentStart = function () {\n    return this._parseInterpolation();\n  };\n\n  SCSSParser.prototype._parseMediaFeatureName = function () {\n    return this._parseModuleMember() || this._parseFunction() // function before ident\n    || this._parseIdent() || this._parseVariable();\n  };\n\n  SCSSParser.prototype._parseKeyframeSelector = function () {\n    return this._tryParseKeyframeSelector() || this._parseControlStatement(this._parseKeyframeSelector.bind(this)) || this._parseVariableDeclaration() || this._parseMixinContent();\n  };\n\n  SCSSParser.prototype._parseVariable = function () {\n    if (!this.peek(scssScanner.VariableName)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Variable);\n    this.consumeToken();\n    return node;\n  };\n\n  SCSSParser.prototype._parseModuleMember = function () {\n    var pos = this.mark();\n    var node = this.create(nodes.Module);\n\n    if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Module]))) {\n      return null;\n    }\n\n    if (this.hasWhitespace() || !this.acceptDelim('.') || this.hasWhitespace()) {\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    if (!node.addChild(this._parseVariable() || this._parseFunction())) {\n      return this.finish(node, ParseError.IdentifierOrVariableExpected);\n    }\n\n    return node;\n  };\n\n  SCSSParser.prototype._parseIdent = function (referenceTypes) {\n    var _this = this;\n\n    if (!this.peek(TokenType.Ident) && !this.peek(scssScanner.InterpolationFunction) && !this.peekDelim('-')) {\n      return null;\n    }\n\n    var node = this.create(nodes.Identifier);\n    node.referenceTypes = referenceTypes;\n    node.isCustomProperty = this.peekRegExp(TokenType.Ident, /^--/);\n    var hasContent = false;\n\n    var indentInterpolation = function () {\n      var pos = _this.mark();\n\n      if (_this.acceptDelim('-')) {\n        if (!_this.hasWhitespace()) {\n          _this.acceptDelim('-');\n        }\n\n        if (_this.hasWhitespace()) {\n          _this.restoreAtMark(pos);\n\n          return null;\n        }\n      }\n\n      return _this._parseInterpolation();\n    };\n\n    while (this.accept(TokenType.Ident) || node.addChild(indentInterpolation()) || hasContent && (this.acceptDelim('-') || this.accept(TokenType.Num))) {\n      hasContent = true;\n\n      if (this.hasWhitespace()) {\n        break;\n      }\n    }\n\n    return hasContent ? this.finish(node) : null;\n  };\n\n  SCSSParser.prototype._parseTerm = function () {\n    var term = this.create(nodes.Term);\n\n    if (term.setExpression(this._parseModuleMember())) {\n      return this.finish(term);\n    }\n\n    var superTerm = _super.prototype._parseTerm.call(this);\n\n    if (superTerm) {\n      return superTerm;\n    }\n\n    if (term.setExpression(this._parseVariable()) || term.setExpression(this._parseSelectorCombinator()) || term.setExpression(this._tryParsePrio())) {\n      return this.finish(term);\n    }\n\n    return null;\n  };\n\n  SCSSParser.prototype._parseInterpolation = function () {\n    if (this.peek(scssScanner.InterpolationFunction)) {\n      var node = this.create(nodes.Interpolation);\n      this.consumeToken();\n\n      if (!node.addChild(this._parseExpr()) && !this._parseSelectorCombinator()) {\n        if (this.accept(TokenType.CurlyR)) {\n          return this.finish(node);\n        }\n\n        return this.finish(node, ParseError.ExpressionExpected);\n      }\n\n      if (!this.accept(TokenType.CurlyR)) {\n        return this.finish(node, ParseError.RightCurlyExpected);\n      }\n\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  SCSSParser.prototype._parseOperator = function () {\n    if (this.peek(scssScanner.EqualsOperator) || this.peek(scssScanner.NotEqualsOperator) || this.peek(scssScanner.GreaterEqualsOperator) || this.peek(scssScanner.SmallerEqualsOperator) || this.peekDelim('>') || this.peekDelim('<') || this.peekIdent('and') || this.peekIdent('or') || this.peekDelim('%')) {\n      var node = this.createNode(nodes.NodeType.Operator);\n      this.consumeToken();\n      return this.finish(node);\n    }\n\n    return _super.prototype._parseOperator.call(this);\n  };\n\n  SCSSParser.prototype._parseUnaryOperator = function () {\n    if (this.peekIdent('not')) {\n      var node = this.create(nodes.Node);\n      this.consumeToken();\n      return this.finish(node);\n    }\n\n    return _super.prototype._parseUnaryOperator.call(this);\n  };\n\n  SCSSParser.prototype._parseRuleSetDeclaration = function () {\n    if (this.peek(TokenType.AtKeyword)) {\n      return this._parseKeyframe() // nested @keyframe\n      || this._parseImport() // nested @import\n      || this._parseMedia(true) // nested @media\n      || this._parseFontFace() // nested @font-face\n      || this._parseWarnAndDebug() // @warn, @debug and @error statements\n      || this._parseControlStatement() // @if, @while, @for, @each\n      || this._parseFunctionDeclaration() // @function\n      || this._parseExtends() // @extends\n      || this._parseMixinReference() // @include\n      || this._parseMixinContent() // @content\n      || this._parseMixinDeclaration() // nested @mixin\n      || this._parseRuleset(true) // @at-rule\n      || this._parseSupports(true); // @supports\n    }\n\n    return this._parseVariableDeclaration() // variable declaration\n    || this._tryParseRuleset(true) // nested ruleset\n    || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as last so in the error case, the ast will contain a declaration\n  };\n\n  SCSSParser.prototype._parseDeclaration = function (resyncStopTokens) {\n    var node = this.create(nodes.Declaration);\n\n    if (!node.setProperty(this._parseProperty())) {\n      return null;\n    }\n\n    if (!this.accept(TokenType.Colon)) {\n      return this.finish(node, ParseError.ColonExpected, [TokenType.Colon], resyncStopTokens);\n    }\n\n    if (this.prevToken) {\n      node.colonPosition = this.prevToken.offset;\n    }\n\n    var hasContent = false;\n\n    if (node.setValue(this._parseExpr())) {\n      hasContent = true;\n      node.addChild(this._parsePrio());\n    }\n\n    if (this.peek(TokenType.CurlyL)) {\n      node.setNestedProperties(this._parseNestedProperties());\n    } else {\n      if (!hasContent) {\n        return this.finish(node, ParseError.PropertyValueExpected);\n      }\n    }\n\n    if (this.peek(TokenType.SemiColon)) {\n      node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseNestedProperties = function () {\n    var node = this.create(nodes.NestedProperties);\n    return this._parseBody(node, this._parseDeclaration.bind(this));\n  };\n\n  SCSSParser.prototype._parseExtends = function () {\n    if (this.peekKeyword('@extend')) {\n      var node = this.create(nodes.ExtendsReference);\n      this.consumeToken();\n\n      if (!node.getSelectors().addChild(this._parseSimpleSelector())) {\n        return this.finish(node, ParseError.SelectorExpected);\n      }\n\n      while (this.accept(TokenType.Comma)) {\n        node.getSelectors().addChild(this._parseSimpleSelector());\n      }\n\n      if (this.accept(TokenType.Exclamation)) {\n        if (!this.acceptIdent('optional')) {\n          return this.finish(node, ParseError.UnknownKeyword);\n        }\n      }\n\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  SCSSParser.prototype._parseSimpleSelectorBody = function () {\n    return this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || _super.prototype._parseSimpleSelectorBody.call(this);\n  };\n\n  SCSSParser.prototype._parseSelectorCombinator = function () {\n    if (this.peekDelim('&')) {\n      var node = this.createNode(nodes.NodeType.SelectorCombinator);\n      this.consumeToken();\n\n      while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(TokenType.Num) || this.accept(TokenType.Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {//  support &-foo-1\n      }\n\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  SCSSParser.prototype._parseSelectorPlaceholder = function () {\n    if (this.peekDelim('%')) {\n      var node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n      this.consumeToken();\n\n      this._parseIdent();\n\n      return this.finish(node);\n    } else if (this.peekKeyword('@at-root')) {\n      var node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n      this.consumeToken();\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  SCSSParser.prototype._parseElementName = function () {\n    var pos = this.mark();\n\n    var node = _super.prototype._parseElementName.call(this);\n\n    if (node && !this.hasWhitespace() && this.peek(TokenType.ParenthesisL)) {\n      // for #49589\n      this.restoreAtMark(pos);\n      return null;\n    }\n\n    return node;\n  };\n\n  SCSSParser.prototype._tryParsePseudoIdentifier = function () {\n    return this._parseInterpolation() || _super.prototype._tryParsePseudoIdentifier.call(this); // for #49589\n  };\n\n  SCSSParser.prototype._parseWarnAndDebug = function () {\n    if (!this.peekKeyword('@debug') && !this.peekKeyword('@warn') && !this.peekKeyword('@error')) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.Debug);\n    this.consumeToken(); // @debug, @warn or @error\n\n    node.addChild(this._parseExpr()); // optional\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseControlStatement = function (parseStatement) {\n    if (parseStatement === void 0) {\n      parseStatement = this._parseRuleSetDeclaration.bind(this);\n    }\n\n    if (!this.peek(TokenType.AtKeyword)) {\n      return null;\n    }\n\n    return this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement) || this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\n  };\n\n  SCSSParser.prototype._parseIfStatement = function (parseStatement) {\n    if (!this.peekKeyword('@if')) {\n      return null;\n    }\n\n    return this._internalParseIfStatement(parseStatement);\n  };\n\n  SCSSParser.prototype._internalParseIfStatement = function (parseStatement) {\n    var node = this.create(nodes.IfStatement);\n    this.consumeToken(); // @if or if\n\n    if (!node.setExpression(this._parseExpr(true))) {\n      return this.finish(node, ParseError.ExpressionExpected);\n    }\n\n    this._parseBody(node, parseStatement);\n\n    if (this.acceptKeyword('@else')) {\n      if (this.peekIdent('if')) {\n        node.setElseClause(this._internalParseIfStatement(parseStatement));\n      } else if (this.peek(TokenType.CurlyL)) {\n        var elseNode = this.create(nodes.ElseStatement);\n\n        this._parseBody(elseNode, parseStatement);\n\n        node.setElseClause(elseNode);\n      }\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseForStatement = function (parseStatement) {\n    if (!this.peekKeyword('@for')) {\n      return null;\n    }\n\n    var node = this.create(nodes.ForStatement);\n    this.consumeToken(); // @for\n\n    if (!node.setVariable(this._parseVariable())) {\n      return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n    }\n\n    if (!this.acceptIdent('from')) {\n      return this.finish(node, SCSSParseError.FromExpected, [TokenType.CurlyR]);\n    }\n\n    if (!node.addChild(this._parseBinaryExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n    }\n\n    if (!this.acceptIdent('to') && !this.acceptIdent('through')) {\n      return this.finish(node, SCSSParseError.ThroughOrToExpected, [TokenType.CurlyR]);\n    }\n\n    if (!node.addChild(this._parseBinaryExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n    }\n\n    return this._parseBody(node, parseStatement);\n  };\n\n  SCSSParser.prototype._parseEachStatement = function (parseStatement) {\n    if (!this.peekKeyword('@each')) {\n      return null;\n    }\n\n    var node = this.create(nodes.EachStatement);\n    this.consumeToken(); // @each\n\n    var variables = node.getVariables();\n\n    if (!variables.addChild(this._parseVariable())) {\n      return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n    }\n\n    while (this.accept(TokenType.Comma)) {\n      if (!variables.addChild(this._parseVariable())) {\n        return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n      }\n    }\n\n    this.finish(variables);\n\n    if (!this.acceptIdent('in')) {\n      return this.finish(node, SCSSParseError.InExpected, [TokenType.CurlyR]);\n    }\n\n    if (!node.addChild(this._parseExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n    }\n\n    return this._parseBody(node, parseStatement);\n  };\n\n  SCSSParser.prototype._parseWhileStatement = function (parseStatement) {\n    if (!this.peekKeyword('@while')) {\n      return null;\n    }\n\n    var node = this.create(nodes.WhileStatement);\n    this.consumeToken(); // @while\n\n    if (!node.addChild(this._parseBinaryExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n    }\n\n    return this._parseBody(node, parseStatement);\n  };\n\n  SCSSParser.prototype._parseFunctionBodyDeclaration = function () {\n    return this._parseVariableDeclaration() || this._parseReturnStatement() || this._parseWarnAndDebug() || this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\n  };\n\n  SCSSParser.prototype._parseFunctionDeclaration = function () {\n    if (!this.peekKeyword('@function')) {\n      return null;\n    }\n\n    var node = this.create(nodes.FunctionDeclaration);\n    this.consumeToken(); // @function\n\n    if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Function]))) {\n      return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n    }\n\n    if (!this.accept(TokenType.ParenthesisL)) {\n      return this.finish(node, ParseError.LeftParenthesisExpected, [TokenType.CurlyR]);\n    }\n\n    if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n      while (this.accept(TokenType.Comma)) {\n        if (this.peek(TokenType.ParenthesisR)) {\n          break;\n        }\n\n        if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n          return this.finish(node, ParseError.VariableNameExpected);\n        }\n      }\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.CurlyR]);\n    }\n\n    return this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\n  };\n\n  SCSSParser.prototype._parseReturnStatement = function () {\n    if (!this.peekKeyword('@return')) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.ReturnStatement);\n    this.consumeToken(); // @function\n\n    if (!node.addChild(this._parseExpr())) {\n      return this.finish(node, ParseError.ExpressionExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseMixinDeclaration = function () {\n    if (!this.peekKeyword('@mixin')) {\n      return null;\n    }\n\n    var node = this.create(nodes.MixinDeclaration);\n    this.consumeToken();\n\n    if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Mixin]))) {\n      return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n    }\n\n    if (this.accept(TokenType.ParenthesisL)) {\n      if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n        while (this.accept(TokenType.Comma)) {\n          if (this.peek(TokenType.ParenthesisR)) {\n            break;\n          }\n\n          if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n            return this.finish(node, ParseError.VariableNameExpected);\n          }\n        }\n      }\n\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.CurlyR]);\n      }\n    }\n\n    return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n  };\n\n  SCSSParser.prototype._parseParameterDeclaration = function () {\n    var node = this.create(nodes.FunctionParameter);\n\n    if (!node.setIdentifier(this._parseVariable())) {\n      return null;\n    }\n\n    if (this.accept(scssScanner.Ellipsis)) {// ok\n    }\n\n    if (this.accept(TokenType.Colon)) {\n      if (!node.setDefaultValue(this._parseExpr(true))) {\n        return this.finish(node, ParseError.VariableValueExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n      }\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseMixinContent = function () {\n    if (!this.peekKeyword('@content')) {\n      return null;\n    }\n\n    var node = this.createNode(nodes.NodeType.MixinContent);\n    this.consumeToken();\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseMixinReference = function () {\n    if (!this.peekKeyword('@include')) {\n      return null;\n    }\n\n    var node = this.create(nodes.MixinReference);\n    this.consumeToken(); // Could be module or mixin identifier, set as mixin as default.\n\n    var firstIdent = this._parseIdent([nodes.ReferenceType.Mixin]);\n\n    if (!node.setIdentifier(firstIdent)) {\n      return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n    } // Is a module accessor.\n\n\n    if (!this.hasWhitespace() && this.acceptDelim('.') && !this.hasWhitespace()) {\n      var secondIdent = this._parseIdent([nodes.ReferenceType.Mixin]);\n\n      if (!secondIdent) {\n        return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n      }\n\n      var moduleToken = this.create(nodes.Module); // Re-purpose first matched ident as identifier for module token.\n\n      firstIdent.referenceTypes = [nodes.ReferenceType.Module];\n      moduleToken.setIdentifier(firstIdent); // Override identifier with second ident.\n\n      node.setIdentifier(secondIdent);\n      node.addChild(moduleToken);\n    }\n\n    if (this.accept(TokenType.ParenthesisL)) {\n      if (node.getArguments().addChild(this._parseFunctionArgument())) {\n        while (this.accept(TokenType.Comma)) {\n          if (this.peek(TokenType.ParenthesisR)) {\n            break;\n          }\n\n          if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n            return this.finish(node, ParseError.ExpressionExpected);\n          }\n        }\n      }\n\n      if (!this.accept(TokenType.ParenthesisR)) {\n        return this.finish(node, ParseError.RightParenthesisExpected);\n      }\n    }\n\n    if (this.peek(TokenType.CurlyL)) {\n      var content = this.create(nodes.BodyDeclaration);\n\n      this._parseBody(content, this._parseMixinReferenceBodyStatement.bind(this));\n\n      node.setContent(content);\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseMixinReferenceBodyStatement = function () {\n    return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n  };\n\n  SCSSParser.prototype._parseFunctionArgument = function () {\n    // [variableName ':'] expression | variableName '...'\n    var node = this.create(nodes.FunctionArgument);\n    var pos = this.mark();\n\n    var argument = this._parseVariable();\n\n    if (argument) {\n      if (!this.accept(TokenType.Colon)) {\n        if (this.accept(scssScanner.Ellipsis)) {\n          // optional\n          node.setValue(argument);\n          return this.finish(node);\n        } else {\n          this.restoreAtMark(pos);\n        }\n      } else {\n        node.setIdentifier(argument);\n      }\n    }\n\n    if (node.setValue(this._parseExpr(true))) {\n      this.accept(scssScanner.Ellipsis); // #43746\n\n      node.addChild(this._parsePrio()); // #9859\n\n      return this.finish(node);\n    }\n\n    return null;\n  };\n\n  SCSSParser.prototype._parseURLArgument = function () {\n    var pos = this.mark();\n\n    var node = _super.prototype._parseURLArgument.call(this);\n\n    if (!node || !this.peek(TokenType.ParenthesisR)) {\n      this.restoreAtMark(pos);\n      var node_1 = this.create(nodes.Node);\n      node_1.addChild(this._parseBinaryExpr());\n      return this.finish(node_1);\n    }\n\n    return node;\n  };\n\n  SCSSParser.prototype._parseOperation = function () {\n    if (!this.peek(TokenType.ParenthesisL)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Node);\n    this.consumeToken();\n\n    while (node.addChild(this._parseListElement())) {\n      this.accept(TokenType.Comma); // optional\n    }\n\n    if (!this.accept(TokenType.ParenthesisR)) {\n      return this.finish(node, ParseError.RightParenthesisExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseListElement = function () {\n    var node = this.create(nodes.ListEntry);\n\n    var child = this._parseBinaryExpr();\n\n    if (!child) {\n      return null;\n    }\n\n    if (this.accept(TokenType.Colon)) {\n      node.setKey(child);\n\n      if (!node.setValue(this._parseBinaryExpr())) {\n        return this.finish(node, ParseError.ExpressionExpected);\n      }\n    } else {\n      node.setValue(child);\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseUse = function () {\n    if (!this.peek(scssScanner.Use)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Use);\n    this.consumeToken();\n\n    if (!node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.StringLiteralExpected);\n    }\n\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      if (!this.peekRegExp(TokenType.Ident, /as|with/)) {\n        return this.finish(node, ParseError.UnknownKeyword);\n      }\n\n      if (this.acceptIdent('as') && !node.setIdentifier(this._parseIdent([nodes.ReferenceType.Module])) && !this.acceptDelim('*')) {\n        return this.finish(node, ParseError.IdentifierOrWildcardExpected);\n      }\n\n      if (this.acceptIdent('with')) {\n        if (!this.accept(TokenType.ParenthesisL)) {\n          return this.finish(node, ParseError.LeftParenthesisExpected, [TokenType.ParenthesisR]);\n        } // First variable statement, no comma.\n\n\n        if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n          return this.finish(node, ParseError.VariableNameExpected);\n        }\n\n        while (this.accept(TokenType.Comma)) {\n          if (this.peek(TokenType.ParenthesisR)) {\n            break;\n          }\n\n          if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n            return this.finish(node, ParseError.VariableNameExpected);\n          }\n        }\n\n        if (!this.accept(TokenType.ParenthesisR)) {\n          return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n      }\n    }\n\n    if (!this.accept(TokenType.SemiColon) && !this.accept(TokenType.EOF)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseModuleConfigDeclaration = function () {\n    var node = this.create(nodes.ModuleConfiguration);\n\n    if (!node.setIdentifier(this._parseVariable())) {\n      return null;\n    }\n\n    if (!this.accept(TokenType.Colon) || !node.setValue(this._parseExpr(true))) {\n      return this.finish(node, ParseError.VariableValueExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseForward = function () {\n    if (!this.peek(scssScanner.Forward)) {\n      return null;\n    }\n\n    var node = this.create(nodes.Forward);\n    this.consumeToken();\n\n    if (!node.addChild(this._parseStringLiteral())) {\n      return this.finish(node, ParseError.StringLiteralExpected);\n    }\n\n    if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n      if (!this.peekRegExp(TokenType.Ident, /as|hide|show/)) {\n        return this.finish(node, ParseError.UnknownKeyword);\n      }\n\n      if (this.acceptIdent('as')) {\n        var identifier = this._parseIdent([nodes.ReferenceType.Forward]);\n\n        if (!node.setIdentifier(identifier)) {\n          return this.finish(node, ParseError.IdentifierExpected);\n        } // Wildcard must be the next character after the identifier string.\n\n\n        if (this.hasWhitespace() || !this.acceptDelim('*')) {\n          return this.finish(node, ParseError.WildcardExpected);\n        }\n      }\n\n      if (this.peekIdent('hide') || this.peekIdent('show')) {\n        if (!node.addChild(this._parseForwardVisibility())) {\n          return this.finish(node, ParseError.IdentifierOrVariableExpected);\n        }\n      }\n    }\n\n    if (!this.accept(TokenType.SemiColon) && !this.accept(TokenType.EOF)) {\n      return this.finish(node, ParseError.SemiColonExpected);\n    }\n\n    return this.finish(node);\n  };\n\n  SCSSParser.prototype._parseForwardVisibility = function () {\n    var node = this.create(nodes.ForwardVisibility); // Assume to be \"hide\" or \"show\".\n\n    node.setIdentifier(this._parseIdent());\n\n    while (node.addChild(this._parseVariable() || this._parseIdent())) {} // Consume all variables and idents ahead.\n    // More than just identifier \n\n\n    return node.getChildren().length > 1 ? node : null;\n  };\n\n  return SCSSParser;\n}(cssParser.Parser);\n\nexport { SCSSParser };","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","scssScanner","TokenType","cssParser","nodes","SCSSParseError","ParseError","SCSSParser","_super","call","SCSSScanner","_parseStylesheetStart","_parseForward","_parseUse","_parseStylesheetStatement","peek","AtKeyword","_parseWarnAndDebug","_parseControlStatement","_parseMixinDeclaration","_parseMixinContent","_parseMixinReference","_parseFunctionDeclaration","_parseStylesheetAtStatement","_parseRuleset","_parseVariableDeclaration","_parseImport","peekKeyword","node","Import","consumeToken","addChild","_parseURILiteral","_parseStringLiteral","finish","URIOrStringExpected","accept","Comma","SemiColon","EOF","setMedialist","_parseMediaQueryList","panic","VariableName","VariableDeclaration","setVariable","_parseVariable","Colon","ColonExpected","prevToken","colonPosition","offset","setValue","_parseExpr","VariableValueExpected","Exclamation","peekRegExp","Ident","UnknownKeyword","semicolonPosition","token","_parseMediaContentStart","_parseInterpolation","_parseMediaFeatureName","_parseModuleMember","_parseFunction","_parseIdent","_parseKeyframeSelector","_tryParseKeyframeSelector","bind","Variable","pos","mark","Module","setIdentifier","ReferenceType","hasWhitespace","acceptDelim","restoreAtMark","IdentifierOrVariableExpected","referenceTypes","_this","InterpolationFunction","peekDelim","Identifier","isCustomProperty","hasContent","indentInterpolation","Num","_parseTerm","term","Term","setExpression","superTerm","_parseSelectorCombinator","_tryParsePrio","Interpolation","CurlyR","ExpressionExpected","RightCurlyExpected","_parseOperator","EqualsOperator","NotEqualsOperator","GreaterEqualsOperator","SmallerEqualsOperator","peekIdent","createNode","NodeType","Operator","_parseUnaryOperator","Node","_parseRuleSetDeclaration","_parseKeyframe","_parseMedia","_parseFontFace","_parseExtends","_parseSupports","_tryParseRuleset","_parseDeclaration","resyncStopTokens","Declaration","setProperty","_parseProperty","_parsePrio","CurlyL","setNestedProperties","_parseNestedProperties","PropertyValueExpected","NestedProperties","_parseBody","ExtendsReference","getSelectors","_parseSimpleSelector","SelectorExpected","acceptIdent","_parseSimpleSelectorBody","_parseSelectorPlaceholder","SelectorCombinator","Dimension","SelectorPlaceholder","_parseElementName","ParenthesisL","_tryParsePseudoIdentifier","Debug","parseStatement","_parseIfStatement","_parseForStatement","_parseEachStatement","_parseWhileStatement","_internalParseIfStatement","IfStatement","acceptKeyword","setElseClause","elseNode","ElseStatement","ForStatement","VariableNameExpected","FromExpected","_parseBinaryExpr","ThroughOrToExpected","EachStatement","variables","getVariables","InExpected","WhileStatement","_parseFunctionBodyDeclaration","_parseReturnStatement","FunctionDeclaration","Function","IdentifierExpected","LeftParenthesisExpected","getParameters","_parseParameterDeclaration","ParenthesisR","RightParenthesisExpected","ReturnStatement","MixinDeclaration","Mixin","FunctionParameter","Ellipsis","setDefaultValue","MixinContent","MixinReference","firstIdent","secondIdent","moduleToken","getArguments","_parseFunctionArgument","content","BodyDeclaration","_parseMixinReferenceBodyStatement","setContent","FunctionArgument","argument","_parseURLArgument","node_1","_parseOperation","_parseListElement","ListEntry","child","setKey","Use","StringLiteralExpected","IdentifierOrWildcardExpected","_parseModuleConfigDeclaration","SemiColonExpected","ModuleConfiguration","Forward","identifier","WildcardExpected","_parseForwardVisibility","ForwardVisibility","getChildren","length","Parser"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as scssScanner from './scssScanner.js';\nimport { TokenType } from './cssScanner.js';\nimport * as cssParser from './cssParser.js';\nimport * as nodes from './cssNodes.js';\nimport { SCSSParseError } from './scssErrors.js';\nimport { ParseError } from './cssErrors.js';\n/// <summary>\n/// A parser for scss\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\n/// </summary>\nvar SCSSParser = /** @class */ (function (_super) {\n    __extends(SCSSParser, _super);\n    function SCSSParser() {\n        return _super.call(this, new scssScanner.SCSSScanner()) || this;\n    }\n    SCSSParser.prototype._parseStylesheetStart = function () {\n        return this._parseForward()\n            || this._parseUse()\n            || _super.prototype._parseStylesheetStart.call(this);\n    };\n    SCSSParser.prototype._parseStylesheetStatement = function () {\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseWarnAndDebug()\n                || this._parseControlStatement()\n                || this._parseMixinDeclaration()\n                || this._parseMixinContent()\n                || this._parseMixinReference() // @include\n                || this._parseFunctionDeclaration()\n                || _super.prototype._parseStylesheetAtStatement.call(this);\n        }\n        return this._parseRuleset(true) || this._parseVariableDeclaration();\n    };\n    SCSSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(nodes.Import);\n        this.consumeToken();\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.URIOrStringExpected);\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, ParseError.URIOrStringExpected);\n            }\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    // scss variables: $font-size: 12px;\n    SCSSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        if (!this.peek(scssScanner.VariableName)) {\n            return null;\n        }\n        var node = this.create(nodes.VariableDeclaration);\n        if (!node.setVariable(this._parseVariable())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon)) {\n            return this.finish(node, ParseError.ColonExpected);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, ParseError.VariableValueExpected, [], panic);\n        }\n        while (this.accept(TokenType.Exclamation)) {\n            if (!this.peekRegExp(TokenType.Ident, /^(default|global)$/)) {\n                return this.finish(node, ParseError.UnknownKeyword);\n            }\n            this.consumeToken();\n        }\n        if (this.peek(TokenType.SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMediaContentStart = function () {\n        return this._parseInterpolation();\n    };\n    SCSSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseModuleMember()\n            || this._parseFunction() // function before ident\n            || this._parseIdent()\n            || this._parseVariable();\n    };\n    SCSSParser.prototype._parseKeyframeSelector = function () {\n        return this._tryParseKeyframeSelector()\n            || this._parseControlStatement(this._parseKeyframeSelector.bind(this))\n            || this._parseVariableDeclaration()\n            || this._parseMixinContent();\n    };\n    SCSSParser.prototype._parseVariable = function () {\n        if (!this.peek(scssScanner.VariableName)) {\n            return null;\n        }\n        var node = this.create(nodes.Variable);\n        this.consumeToken();\n        return node;\n    };\n    SCSSParser.prototype._parseModuleMember = function () {\n        var pos = this.mark();\n        var node = this.create(nodes.Module);\n        if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Module]))) {\n            return null;\n        }\n        if (this.hasWhitespace()\n            || !this.acceptDelim('.')\n            || this.hasWhitespace()) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (!node.addChild(this._parseVariable() || this._parseFunction())) {\n            return this.finish(node, ParseError.IdentifierOrVariableExpected);\n        }\n        return node;\n    };\n    SCSSParser.prototype._parseIdent = function (referenceTypes) {\n        var _this = this;\n        if (!this.peek(TokenType.Ident) && !this.peek(scssScanner.InterpolationFunction) && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(nodes.Identifier);\n        node.referenceTypes = referenceTypes;\n        node.isCustomProperty = this.peekRegExp(TokenType.Ident, /^--/);\n        var hasContent = false;\n        var indentInterpolation = function () {\n            var pos = _this.mark();\n            if (_this.acceptDelim('-')) {\n                if (!_this.hasWhitespace()) {\n                    _this.acceptDelim('-');\n                }\n                if (_this.hasWhitespace()) {\n                    _this.restoreAtMark(pos);\n                    return null;\n                }\n            }\n            return _this._parseInterpolation();\n        };\n        while (this.accept(TokenType.Ident) || node.addChild(indentInterpolation()) || (hasContent && (this.acceptDelim('-') || this.accept(TokenType.Num)))) {\n            hasContent = true;\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    SCSSParser.prototype._parseTerm = function () {\n        var term = this.create(nodes.Term);\n        if (term.setExpression(this._parseModuleMember())) {\n            return this.finish(term);\n        }\n        var superTerm = _super.prototype._parseTerm.call(this);\n        if (superTerm) {\n            return superTerm;\n        }\n        if (term.setExpression(this._parseVariable())\n            || term.setExpression(this._parseSelectorCombinator())\n            || term.setExpression(this._tryParsePrio())) {\n            return this.finish(term);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseInterpolation = function () {\n        if (this.peek(scssScanner.InterpolationFunction)) {\n            var node = this.create(nodes.Interpolation);\n            this.consumeToken();\n            if (!node.addChild(this._parseExpr()) && !this._parseSelectorCombinator()) {\n                if (this.accept(TokenType.CurlyR)) {\n                    return this.finish(node);\n                }\n                return this.finish(node, ParseError.ExpressionExpected);\n            }\n            if (!this.accept(TokenType.CurlyR)) {\n                return this.finish(node, ParseError.RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseOperator = function () {\n        if (this.peek(scssScanner.EqualsOperator) || this.peek(scssScanner.NotEqualsOperator)\n            || this.peek(scssScanner.GreaterEqualsOperator) || this.peek(scssScanner.SmallerEqualsOperator)\n            || this.peekDelim('>') || this.peekDelim('<')\n            || this.peekIdent('and') || this.peekIdent('or')\n            || this.peekDelim('%')) {\n            var node = this.createNode(nodes.NodeType.Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseOperator.call(this);\n    };\n    SCSSParser.prototype._parseUnaryOperator = function () {\n        if (this.peekIdent('not')) {\n            var node = this.create(nodes.Node);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseUnaryOperator.call(this);\n    };\n    SCSSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(TokenType.AtKeyword)) {\n            return this._parseKeyframe() // nested @keyframe\n                || this._parseImport() // nested @import\n                || this._parseMedia(true) // nested @media\n                || this._parseFontFace() // nested @font-face\n                || this._parseWarnAndDebug() // @warn, @debug and @error statements\n                || this._parseControlStatement() // @if, @while, @for, @each\n                || this._parseFunctionDeclaration() // @function\n                || this._parseExtends() // @extends\n                || this._parseMixinReference() // @include\n                || this._parseMixinContent() // @content\n                || this._parseMixinDeclaration() // nested @mixin\n                || this._parseRuleset(true) // @at-rule\n                || this._parseSupports(true); // @supports\n        }\n        return this._parseVariableDeclaration() // variable declaration\n            || this._tryParseRuleset(true) // nested ruleset\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as last so in the error case, the ast will contain a declaration\n    };\n    SCSSParser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(nodes.Declaration);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon)) {\n            return this.finish(node, ParseError.ColonExpected, [TokenType.Colon], resyncStopTokens);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        var hasContent = false;\n        if (node.setValue(this._parseExpr())) {\n            hasContent = true;\n            node.addChild(this._parsePrio());\n        }\n        if (this.peek(TokenType.CurlyL)) {\n            node.setNestedProperties(this._parseNestedProperties());\n        }\n        else {\n            if (!hasContent) {\n                return this.finish(node, ParseError.PropertyValueExpected);\n            }\n        }\n        if (this.peek(TokenType.SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseNestedProperties = function () {\n        var node = this.create(nodes.NestedProperties);\n        return this._parseBody(node, this._parseDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseExtends = function () {\n        if (this.peekKeyword('@extend')) {\n            var node = this.create(nodes.ExtendsReference);\n            this.consumeToken();\n            if (!node.getSelectors().addChild(this._parseSimpleSelector())) {\n                return this.finish(node, ParseError.SelectorExpected);\n            }\n            while (this.accept(TokenType.Comma)) {\n                node.getSelectors().addChild(this._parseSimpleSelector());\n            }\n            if (this.accept(TokenType.Exclamation)) {\n                if (!this.acceptIdent('optional')) {\n                    return this.finish(node, ParseError.UnknownKeyword);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    SCSSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(nodes.NodeType.SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(TokenType.Num) || this.accept(TokenType.Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo-1\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSelectorPlaceholder = function () {\n        if (this.peekDelim('%')) {\n            var node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n            this.consumeToken();\n            this._parseIdent();\n            return this.finish(node);\n        }\n        else if (this.peekKeyword('@at-root')) {\n            var node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseElementName = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseElementName.call(this);\n        if (node && !this.hasWhitespace() && this.peek(TokenType.ParenthesisL)) { // for #49589\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    SCSSParser.prototype._tryParsePseudoIdentifier = function () {\n        return this._parseInterpolation() || _super.prototype._tryParsePseudoIdentifier.call(this); // for #49589\n    };\n    SCSSParser.prototype._parseWarnAndDebug = function () {\n        if (!this.peekKeyword('@debug')\n            && !this.peekKeyword('@warn')\n            && !this.peekKeyword('@error')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.Debug);\n        this.consumeToken(); // @debug, @warn or @error\n        node.addChild(this._parseExpr()); // optional\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseControlStatement = function (parseStatement) {\n        if (parseStatement === void 0) { parseStatement = this._parseRuleSetDeclaration.bind(this); }\n        if (!this.peek(TokenType.AtKeyword)) {\n            return null;\n        }\n        return this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement)\n            || this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\n    };\n    SCSSParser.prototype._parseIfStatement = function (parseStatement) {\n        if (!this.peekKeyword('@if')) {\n            return null;\n        }\n        return this._internalParseIfStatement(parseStatement);\n    };\n    SCSSParser.prototype._internalParseIfStatement = function (parseStatement) {\n        var node = this.create(nodes.IfStatement);\n        this.consumeToken(); // @if or if\n        if (!node.setExpression(this._parseExpr(true))) {\n            return this.finish(node, ParseError.ExpressionExpected);\n        }\n        this._parseBody(node, parseStatement);\n        if (this.acceptKeyword('@else')) {\n            if (this.peekIdent('if')) {\n                node.setElseClause(this._internalParseIfStatement(parseStatement));\n            }\n            else if (this.peek(TokenType.CurlyL)) {\n                var elseNode = this.create(nodes.ElseStatement);\n                this._parseBody(elseNode, parseStatement);\n                node.setElseClause(elseNode);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForStatement = function (parseStatement) {\n        if (!this.peekKeyword('@for')) {\n            return null;\n        }\n        var node = this.create(nodes.ForStatement);\n        this.consumeToken(); // @for\n        if (!node.setVariable(this._parseVariable())) {\n            return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n        }\n        if (!this.acceptIdent('from')) {\n            return this.finish(node, SCSSParseError.FromExpected, [TokenType.CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n        }\n        if (!this.acceptIdent('to') && !this.acceptIdent('through')) {\n            return this.finish(node, SCSSParseError.ThroughOrToExpected, [TokenType.CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseEachStatement = function (parseStatement) {\n        if (!this.peekKeyword('@each')) {\n            return null;\n        }\n        var node = this.create(nodes.EachStatement);\n        this.consumeToken(); // @each\n        var variables = node.getVariables();\n        if (!variables.addChild(this._parseVariable())) {\n            return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n        }\n        while (this.accept(TokenType.Comma)) {\n            if (!variables.addChild(this._parseVariable())) {\n                return this.finish(node, ParseError.VariableNameExpected, [TokenType.CurlyR]);\n            }\n        }\n        this.finish(variables);\n        if (!this.acceptIdent('in')) {\n            return this.finish(node, SCSSParseError.InExpected, [TokenType.CurlyR]);\n        }\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseWhileStatement = function (parseStatement) {\n        if (!this.peekKeyword('@while')) {\n            return null;\n        }\n        var node = this.create(nodes.WhileStatement);\n        this.consumeToken(); // @while\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseFunctionBodyDeclaration = function () {\n        return this._parseVariableDeclaration() || this._parseReturnStatement() || this._parseWarnAndDebug()\n            || this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseFunctionDeclaration = function () {\n        if (!this.peekKeyword('@function')) {\n            return null;\n        }\n        var node = this.create(nodes.FunctionDeclaration);\n        this.consumeToken(); // @function\n        if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Function]))) {\n            return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n        }\n        if (!this.accept(TokenType.ParenthesisL)) {\n            return this.finish(node, ParseError.LeftParenthesisExpected, [TokenType.CurlyR]);\n        }\n        if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n            while (this.accept(TokenType.Comma)) {\n                if (this.peek(TokenType.ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                    return this.finish(node, ParseError.VariableNameExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.CurlyR]);\n        }\n        return this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseReturnStatement = function () {\n        if (!this.peekKeyword('@return')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.ReturnStatement);\n        this.consumeToken(); // @function\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, ParseError.ExpressionExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinDeclaration = function () {\n        if (!this.peekKeyword('@mixin')) {\n            return null;\n        }\n        var node = this.create(nodes.MixinDeclaration);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Mixin]))) {\n            return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n        }\n        if (this.accept(TokenType.ParenthesisL)) {\n            if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n                while (this.accept(TokenType.Comma)) {\n                    if (this.peek(TokenType.ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                        return this.finish(node, ParseError.VariableNameExpected);\n                    }\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected, [TokenType.CurlyR]);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseParameterDeclaration = function () {\n        var node = this.create(nodes.FunctionParameter);\n        if (!node.setIdentifier(this._parseVariable())) {\n            return null;\n        }\n        if (this.accept(scssScanner.Ellipsis)) {\n            // ok\n        }\n        if (this.accept(TokenType.Colon)) {\n            if (!node.setDefaultValue(this._parseExpr(true))) {\n                return this.finish(node, ParseError.VariableValueExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinContent = function () {\n        if (!this.peekKeyword('@content')) {\n            return null;\n        }\n        var node = this.createNode(nodes.NodeType.MixinContent);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReference = function () {\n        if (!this.peekKeyword('@include')) {\n            return null;\n        }\n        var node = this.create(nodes.MixinReference);\n        this.consumeToken();\n        // Could be module or mixin identifier, set as mixin as default.\n        var firstIdent = this._parseIdent([nodes.ReferenceType.Mixin]);\n        if (!node.setIdentifier(firstIdent)) {\n            return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n        }\n        // Is a module accessor.\n        if (!this.hasWhitespace() && this.acceptDelim('.') && !this.hasWhitespace()) {\n            var secondIdent = this._parseIdent([nodes.ReferenceType.Mixin]);\n            if (!secondIdent) {\n                return this.finish(node, ParseError.IdentifierExpected, [TokenType.CurlyR]);\n            }\n            var moduleToken = this.create(nodes.Module);\n            // Re-purpose first matched ident as identifier for module token.\n            firstIdent.referenceTypes = [nodes.ReferenceType.Module];\n            moduleToken.setIdentifier(firstIdent);\n            // Override identifier with second ident.\n            node.setIdentifier(secondIdent);\n            node.addChild(moduleToken);\n        }\n        if (this.accept(TokenType.ParenthesisL)) {\n            if (node.getArguments().addChild(this._parseFunctionArgument())) {\n                while (this.accept(TokenType.Comma)) {\n                    if (this.peek(TokenType.ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                        return this.finish(node, ParseError.ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(TokenType.ParenthesisR)) {\n                return this.finish(node, ParseError.RightParenthesisExpected);\n            }\n        }\n        if (this.peek(TokenType.CurlyL)) {\n            var content = this.create(nodes.BodyDeclaration);\n            this._parseBody(content, this._parseMixinReferenceBodyStatement.bind(this));\n            node.setContent(content);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReferenceBodyStatement = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    SCSSParser.prototype._parseFunctionArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(nodes.FunctionArgument);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(TokenType.Colon)) {\n                if (this.accept(scssScanner.Ellipsis)) { // optional\n                    node.setValue(argument);\n                    return this.finish(node);\n                }\n                else {\n                    this.restoreAtMark(pos);\n                }\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseExpr(true))) {\n            this.accept(scssScanner.Ellipsis); // #43746\n            node.addChild(this._parsePrio()); // #9859\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(TokenType.ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_1 = this.create(nodes.Node);\n            node_1.addChild(this._parseBinaryExpr());\n            return this.finish(node_1);\n        }\n        return node;\n    };\n    SCSSParser.prototype._parseOperation = function () {\n        if (!this.peek(TokenType.ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(nodes.Node);\n        this.consumeToken();\n        while (node.addChild(this._parseListElement())) {\n            this.accept(TokenType.Comma); // optional\n        }\n        if (!this.accept(TokenType.ParenthesisR)) {\n            return this.finish(node, ParseError.RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseListElement = function () {\n        var node = this.create(nodes.ListEntry);\n        var child = this._parseBinaryExpr();\n        if (!child) {\n            return null;\n        }\n        if (this.accept(TokenType.Colon)) {\n            node.setKey(child);\n            if (!node.setValue(this._parseBinaryExpr())) {\n                return this.finish(node, ParseError.ExpressionExpected);\n            }\n        }\n        else {\n            node.setValue(child);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseUse = function () {\n        if (!this.peek(scssScanner.Use)) {\n            return null;\n        }\n        var node = this.create(nodes.Use);\n        this.consumeToken();\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.StringLiteralExpected);\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            if (!this.peekRegExp(TokenType.Ident, /as|with/)) {\n                return this.finish(node, ParseError.UnknownKeyword);\n            }\n            if (this.acceptIdent('as') &&\n                (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Module])) && !this.acceptDelim('*'))) {\n                return this.finish(node, ParseError.IdentifierOrWildcardExpected);\n            }\n            if (this.acceptIdent('with')) {\n                if (!this.accept(TokenType.ParenthesisL)) {\n                    return this.finish(node, ParseError.LeftParenthesisExpected, [TokenType.ParenthesisR]);\n                }\n                // First variable statement, no comma.\n                if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n                    return this.finish(node, ParseError.VariableNameExpected);\n                }\n                while (this.accept(TokenType.Comma)) {\n                    if (this.peek(TokenType.ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n                        return this.finish(node, ParseError.VariableNameExpected);\n                    }\n                }\n                if (!this.accept(TokenType.ParenthesisR)) {\n                    return this.finish(node, ParseError.RightParenthesisExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.SemiColon) && !this.accept(TokenType.EOF)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseModuleConfigDeclaration = function () {\n        var node = this.create(nodes.ModuleConfiguration);\n        if (!node.setIdentifier(this._parseVariable())) {\n            return null;\n        }\n        if (!this.accept(TokenType.Colon) || !node.setValue(this._parseExpr(true))) {\n            return this.finish(node, ParseError.VariableValueExpected, [], [TokenType.Comma, TokenType.ParenthesisR]);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForward = function () {\n        if (!this.peek(scssScanner.Forward)) {\n            return null;\n        }\n        var node = this.create(nodes.Forward);\n        this.consumeToken();\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, ParseError.StringLiteralExpected);\n        }\n        if (!this.peek(TokenType.SemiColon) && !this.peek(TokenType.EOF)) {\n            if (!this.peekRegExp(TokenType.Ident, /as|hide|show/)) {\n                return this.finish(node, ParseError.UnknownKeyword);\n            }\n            if (this.acceptIdent('as')) {\n                var identifier = this._parseIdent([nodes.ReferenceType.Forward]);\n                if (!node.setIdentifier(identifier)) {\n                    return this.finish(node, ParseError.IdentifierExpected);\n                }\n                // Wildcard must be the next character after the identifier string.\n                if (this.hasWhitespace() || !this.acceptDelim('*')) {\n                    return this.finish(node, ParseError.WildcardExpected);\n                }\n            }\n            if (this.peekIdent('hide') || this.peekIdent('show')) {\n                if (!node.addChild(this._parseForwardVisibility())) {\n                    return this.finish(node, ParseError.IdentifierOrVariableExpected);\n                }\n            }\n        }\n        if (!this.accept(TokenType.SemiColon) && !this.accept(TokenType.EOF)) {\n            return this.finish(node, ParseError.SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForwardVisibility = function () {\n        var node = this.create(nodes.ForwardVisibility);\n        // Assume to be \"hide\" or \"show\".\n        node.setIdentifier(this._parseIdent());\n        while (node.addChild(this._parseVariable() || this._parseIdent())) {\n            // Consume all variables and idents ahead.\n        }\n        // More than just identifier \n        return node.getChildren().length > 1 ? node : null;\n    };\n    return SCSSParser;\n}(cssParser.Parser));\nexport { SCSSParser };\n"]},"metadata":{},"sourceType":"module"}