{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { normalizeMarkupContent } from '../utils/markup.js';\n\nvar HTMLDataProvider =\n/** @class */\nfunction () {\n  /**\n   * Currently, unversioned data uses the V1 implementation\n   * In the future when the provider handles multiple versions of HTML custom data,\n   * use the latest implementation for unversioned data\n   */\n  function HTMLDataProvider(id, customData) {\n    var _this = this;\n\n    this.id = id;\n    this._tags = [];\n    this._tagMap = {};\n    this._attributeMap = {};\n    this._valueSetMap = {};\n    this._tags = customData.tags || [];\n    this._globalAttributes = customData.globalAttributes || [];\n\n    this._tags.forEach(function (t) {\n      _this._tagMap[t.name] = t;\n\n      if (t.attributes) {\n        t.attributes.forEach(function (a) {\n          _this._attributeMap[a.name] = a;\n        });\n      }\n    });\n\n    this._globalAttributes.forEach(function (a) {\n      _this._attributeMap[a.name] = a;\n    });\n\n    if (customData.valueSets) {\n      customData.valueSets.forEach(function (vs) {\n        _this._valueSetMap[vs.name] = vs.values;\n      });\n    }\n  }\n\n  HTMLDataProvider.prototype.isApplicable = function () {\n    return true;\n  };\n\n  HTMLDataProvider.prototype.getId = function () {\n    return this.id;\n  };\n\n  HTMLDataProvider.prototype.provideTags = function () {\n    return this._tags;\n  };\n\n  HTMLDataProvider.prototype.provideAttributes = function (tag) {\n    var attributes = [];\n\n    var processAttribute = function (a) {\n      attributes.push(a);\n    };\n\n    if (this._tagMap[tag]) {\n      this._tagMap[tag].attributes.forEach(function (a) {\n        processAttribute(a);\n      });\n    }\n\n    this._globalAttributes.forEach(function (ga) {\n      processAttribute(ga);\n    });\n\n    return attributes;\n  };\n\n  HTMLDataProvider.prototype.provideValues = function (tag, attribute) {\n    var _this = this;\n\n    var values = [];\n\n    var processAttributes = function (attributes) {\n      attributes.forEach(function (a) {\n        if (a.name === attribute) {\n          if (a.values) {\n            a.values.forEach(function (v) {\n              values.push(v);\n            });\n          }\n\n          if (a.valueSet) {\n            if (_this._valueSetMap[a.valueSet]) {\n              _this._valueSetMap[a.valueSet].forEach(function (v) {\n                values.push(v);\n              });\n            }\n          }\n        }\n      });\n    };\n\n    if (!this._tagMap[tag]) {\n      return [];\n    }\n\n    processAttributes(this._tagMap[tag].attributes);\n    processAttributes(this._globalAttributes);\n    return values;\n  };\n\n  return HTMLDataProvider;\n}();\n\nexport { HTMLDataProvider };\n/**\n * Generate Documentation used in hover/complete\n * From `documentation` and `references`\n */\n\nexport function generateDocumentation(item, doesSupportMarkdown) {\n  var result = {\n    kind: doesSupportMarkdown ? 'markdown' : 'plaintext',\n    value: ''\n  };\n\n  if (item.description) {\n    var normalizedDescription = normalizeMarkupContent(item.description);\n\n    if (normalizedDescription) {\n      result.value += normalizedDescription.value;\n    }\n  }\n\n  if (item.references && item.references.length > 0) {\n    result.value += \"\\n\\n\";\n\n    if (doesSupportMarkdown) {\n      result.value += item.references.map(function (r) {\n        return \"[\" + r.name + \"](\" + r.url + \")\";\n      }).join(' | ');\n    } else {\n      result.value += item.references.map(function (r) {\n        return r.name + \": \" + r.url;\n      }).join('\\n');\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/languageFacts/dataProvider.js"],"names":["normalizeMarkupContent","HTMLDataProvider","id","customData","_this","_tags","_tagMap","_attributeMap","_valueSetMap","tags","_globalAttributes","globalAttributes","forEach","t","name","attributes","a","valueSets","vs","values","prototype","isApplicable","getId","provideTags","provideAttributes","tag","processAttribute","push","ga","provideValues","attribute","processAttributes","v","valueSet","generateDocumentation","item","doesSupportMarkdown","result","kind","value","description","normalizedDescription","references","length","map","r","url","join"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { normalizeMarkupContent } from '../utils/markup.js';\nvar HTMLDataProvider = /** @class */ (function () {\n    /**\n     * Currently, unversioned data uses the V1 implementation\n     * In the future when the provider handles multiple versions of HTML custom data,\n     * use the latest implementation for unversioned data\n     */\n    function HTMLDataProvider(id, customData) {\n        var _this = this;\n        this.id = id;\n        this._tags = [];\n        this._tagMap = {};\n        this._attributeMap = {};\n        this._valueSetMap = {};\n        this._tags = customData.tags || [];\n        this._globalAttributes = customData.globalAttributes || [];\n        this._tags.forEach(function (t) {\n            _this._tagMap[t.name] = t;\n            if (t.attributes) {\n                t.attributes.forEach(function (a) {\n                    _this._attributeMap[a.name] = a;\n                });\n            }\n        });\n        this._globalAttributes.forEach(function (a) {\n            _this._attributeMap[a.name] = a;\n        });\n        if (customData.valueSets) {\n            customData.valueSets.forEach(function (vs) {\n                _this._valueSetMap[vs.name] = vs.values;\n            });\n        }\n    }\n    HTMLDataProvider.prototype.isApplicable = function () {\n        return true;\n    };\n    HTMLDataProvider.prototype.getId = function () {\n        return this.id;\n    };\n    HTMLDataProvider.prototype.provideTags = function () {\n        return this._tags;\n    };\n    HTMLDataProvider.prototype.provideAttributes = function (tag) {\n        var attributes = [];\n        var processAttribute = function (a) {\n            attributes.push(a);\n        };\n        if (this._tagMap[tag]) {\n            this._tagMap[tag].attributes.forEach(function (a) {\n                processAttribute(a);\n            });\n        }\n        this._globalAttributes.forEach(function (ga) {\n            processAttribute(ga);\n        });\n        return attributes;\n    };\n    HTMLDataProvider.prototype.provideValues = function (tag, attribute) {\n        var _this = this;\n        var values = [];\n        var processAttributes = function (attributes) {\n            attributes.forEach(function (a) {\n                if (a.name === attribute) {\n                    if (a.values) {\n                        a.values.forEach(function (v) {\n                            values.push(v);\n                        });\n                    }\n                    if (a.valueSet) {\n                        if (_this._valueSetMap[a.valueSet]) {\n                            _this._valueSetMap[a.valueSet].forEach(function (v) {\n                                values.push(v);\n                            });\n                        }\n                    }\n                }\n            });\n        };\n        if (!this._tagMap[tag]) {\n            return [];\n        }\n        processAttributes(this._tagMap[tag].attributes);\n        processAttributes(this._globalAttributes);\n        return values;\n    };\n    return HTMLDataProvider;\n}());\nexport { HTMLDataProvider };\n/**\n * Generate Documentation used in hover/complete\n * From `documentation` and `references`\n */\nexport function generateDocumentation(item, doesSupportMarkdown) {\n    var result = {\n        kind: doesSupportMarkdown ? 'markdown' : 'plaintext',\n        value: ''\n    };\n    if (item.description) {\n        var normalizedDescription = normalizeMarkupContent(item.description);\n        if (normalizedDescription) {\n            result.value += normalizedDescription.value;\n        }\n    }\n    if (item.references && item.references.length > 0) {\n        result.value += \"\\n\\n\";\n        if (doesSupportMarkdown) {\n            result.value += item.references.map(function (r) {\n                return \"[\" + r.name + \"](\" + r.url + \")\";\n            }).join(' | ');\n        }\n        else {\n            result.value += item.references.map(function (r) {\n                return r.name + \": \" + r.url;\n            }).join('\\n');\n        }\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}