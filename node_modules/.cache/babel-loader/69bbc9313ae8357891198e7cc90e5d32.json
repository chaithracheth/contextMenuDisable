{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\n\nvar WorkerManager =\n/** @class */\nfunction () {\n  function WorkerManager(defaults) {\n    var _this = this;\n\n    this._defaults = defaults;\n    this._worker = null;\n    this._idleCheckInterval = window.setInterval(function () {\n      return _this._checkIfIdle();\n    }, 30 * 1000);\n    this._lastUsedTime = 0;\n    this._configChangeListener = this._defaults.onDidChange(function () {\n      return _this._stopWorker();\n    });\n  }\n\n  WorkerManager.prototype._stopWorker = function () {\n    if (this._worker) {\n      this._worker.dispose();\n\n      this._worker = null;\n    }\n\n    this._client = null;\n  };\n\n  WorkerManager.prototype.dispose = function () {\n    clearInterval(this._idleCheckInterval);\n\n    this._configChangeListener.dispose();\n\n    this._stopWorker();\n  };\n\n  WorkerManager.prototype._checkIfIdle = function () {\n    if (!this._worker) {\n      return;\n    }\n\n    var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n      this._stopWorker();\n    }\n  };\n\n  WorkerManager.prototype._getClient = function () {\n    this._lastUsedTime = Date.now();\n\n    if (!this._client) {\n      this._worker = monaco.editor.createWebWorker({\n        // module that exports the create() method and returns a `CSSWorker` instance\n        moduleId: 'vs/language/css/cssWorker',\n        label: this._defaults.languageId,\n        // passed in to the create() method\n        createData: {\n          languageSettings: this._defaults.diagnosticsOptions,\n          languageId: this._defaults.languageId\n        }\n      });\n      this._client = this._worker.getProxy();\n    }\n\n    return this._client;\n  };\n\n  WorkerManager.prototype.getLanguageServiceWorker = function () {\n    var _this = this;\n\n    var resources = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      resources[_i] = arguments[_i];\n    }\n\n    var _client;\n\n    return this._getClient().then(function (client) {\n      _client = client;\n    }).then(function (_) {\n      return _this._worker.withSyncedResources(resources);\n    }).then(function (_) {\n      return _client;\n    });\n  };\n\n  return WorkerManager;\n}();\n\nexport { WorkerManager };","map":{"version":3,"sources":["/home/chaithra/Documents/customised/customised/node_modules/monaco-editor/esm/vs/language/css/workerManager.js"],"names":["STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_this","_defaults","_worker","_idleCheckInterval","window","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","timePassedSinceLastUsed","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","then","client","_","withSyncedResources"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = window.setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `CSSWorker` instance\r\n                moduleId: 'vs/language/css/cssWorker',\r\n                label: this._defaults.languageId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.diagnosticsOptions,\r\n                    languageId: this._defaults.languageId\r\n                }\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n"]},"metadata":{},"sourceType":"module"}